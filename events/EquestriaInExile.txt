add_namespace = eqsexile
add_namespace = eqc_resistence_event

country_event = {
	id = eqsexile.1
	immediate = {log = "[GetDateText]: [Root.GetName]: event eqsexile.1"}
	title = eqsexile.1.t
	desc = {
		trigger = { NOT = { has_global_flag = celestia_and_luna_fused } }
		text = eqsexile.1.d
	}
	desc = {
		trigger = { has_global_flag = celestia_and_luna_fused }
		text = eqsexile.1.d_cl
	}
	picture = GFX_event_equestria_fail

	is_triggered_only = yes

	option = { # Appoint Celestia as Leader
		name = eqsexile.1.a
		trigger = { NOT = { has_global_flag = celestia_and_luna_fused } }
		add_stability = -0.05
		retire_country_leader = yes
		create_country_leader = {
			name = "Princess Celestia"
			expire = "1965.1.1"
			picture = "Celestia.tga"
			desc = "POLITICS_CELESTIA_DESC"
			ideology = alicornrule
			traits = {
				princess_of_ponies
			}
		}
	}
	option = {
		name = eqsexile.1.c
		trigger = { has_global_flag = celestia_and_luna_fused }
		create_country_leader = {
			name = "Princesses Celestia and Luna"
			expire = "1965.1.1"
			picture = "CelestiaLuna.tga"
			desc = "POLITICS_CELESTIA_LUNA_DESC"
			ideology = alicornrule
			traits = {
				princesses_of_ponies
			}
		}
	}
	option = { # Keep the Civilian Government
		name = eqsexile.1.b
		add_ideas = celestia_exile
	}
}

country_event = {
	id = eqsexile.2
	immediate = {log = "[GetDateText]: [Root.GetName]: event eqsexile.2"}
	title = eqsexile.2.t
	desc = eqsexile.2.d
	picture = GFX_event_equestria_fail

	is_triggered_only = yes

	option = { # Appoint Luna as Leader
		name = eqsexile.2.a
		add_stability = -0.05
		retire_country_leader = yes
		create_country_leader = {
			name = "Princess Luna"
			desc = "LUNA_DESC"
			picture = "Luna.tga"
			expire = "1965.1.1"
			ideology = alicornrule
			traits = {
				princess_of_ponies
			}
		}
	}
	option = { # Keep the Civilian Government
		name = eqsexile.2.b
		add_ideas = luna_exile
	}
}

### Reisistance Start
country_event = {
	id = eqsexile.3
	immediate = {log = "[GetDateText]: [Root.GetName]: event eqsexile.3"}
	title = eqsexile.3.t
	desc = eqsexile.3.d
	picture = GFX_report_event_generic_ruins

	trigger = {
		EQC = {
			exists = yes
			has_idea = EQC_funding_the_resistiance
		}
		NOT = {
			tag = ELF
			tag = EQS
			has_idea = EQC_resistance
		}
		OR = {
			AND = {
				original_tag = EQC
				NOT = { has_government = democratic }
			}
			tag = event_target:solar_empire
			tag = NLR
			AND = {
				NOT = {
					is_in_faction_with = EQC
					EQC = { has_annex_war_goal = PREV }
				}
				OR = {
					owns_state = 3
					owns_state = 75
					owns_state = 14
				}
			}
		}
	}

	mean_time_to_happen = {
		days = 7
	}

	option = {
		name = eqsexile.3.a
		hidden_effect = { set_country_flag = { flag = EQC_resistance_target value = 1 } }
		add_ideas = EQC_resistance
		custom_effect_tooltip = EQC_resistance_raids_start_tt
	}
}

country_event = {
	id = eqc_resistence_event.1
	immediate = {log = "[GetDateText]: [Root.GetName]: event eqc_resistence_event.1"}
	title = eqc_resistence_event.1.t
	desc = eqc_resistence_event.1.d
	picture = GFX_report_event_generic_ruins


	is_triggered_only = yes

	option = {
		name = eqc_resistence_event.1.a
		modify_country_flag = { flag = EQC_resistance_target value = 1 }

		random_owned_state = {
			limit = {
				is_fully_controlled_by = ROOT
				arms_factory > 0
			}
			damage_building = {
				type = arms_factory
				damage = 1
			}
		}
	}
}

country_event = {
	id = eqc_resistence_event.2
	immediate = {log = "[GetDateText]: [Root.GetName]: event eqc_resistence_event.2"}
	title = eqc_resistence_event.2.t
	desc = eqc_resistence_event.2.d
	picture = GFX_report_event_generic_ruins

	is_triggered_only = yes

	option = {
		name = eqc_resistence_event.2.a
		modify_country_flag = { flag = EQC_resistance_target value = 1 }

		random_owned_state = {
			limit = {
				is_fully_controlled_by = ROOT
				industrial_complex > 0
			}
			damage_building = {
				type = industrial_complex
				damage = 1
			}
		}
	}
}

country_event = {
	id = eqc_resistence_event.3
	immediate = {log = "[GetDateText]: [Root.GetName]: event eqc_resistence_event.3"}
	title = eqc_resistence_event.3.t
	desc = eqc_resistence_event.3.d
	picture = GFX_report_event_generic_train

	is_triggered_only = yes

	option = {
		name = eqc_resistence_event.3.a
		modify_country_flag = { flag = EQC_resistance_target value = 1 }

		random_owned_state = {
			limit = {
				is_fully_controlled_by = ROOT
				infrastructure > 0
			}
			damage_building = {
				type = infrastructure
				damage = 1
			}
		}
	}
}

country_event = {
	id = eqc_resistence_event.4
	immediate = {log = "[GetDateText]: [Root.GetName]: event eqc_resistence_event.4"}
	title = eqc_resistence_event.4.t
	desc = eqc_resistence_event.4.d
	picture = GFX_report_event_generic_ruins

	is_triggered_only = yes

	option = {
		name = eqc_resistence_event.4.a
		modify_country_flag = { flag = EQC_resistance_target value = 1 }
		add_political_power = 50
	}
}

# Equestria is liberated
country_event = {
	id = eqc_resistence_event.5
	immediate = {log = "[GetDateText]: [Root.GetName]: event eqc_resistence_event.5"}
	title = eqc_resistence_event.5.t
	desc = eqc_resistence_event.5.d
	picture = GFX_report_event_generic_ruins

	trigger = {
		has_country_flag = EQC_resistance_target
		OR = {
			EQS = {
				AND = {
					exists = yes
					has_government = democratic
					has_war = no
				}
			}
			ELF = {
				AND = {
					exists = yes
					has_government = democratic
					has_war = no
				}
			}
			NOT = {
				has_idea = EQC_resistance
			}
		}
	}

	option = {
		name = eqc_resistence_event.5.a
		clr_country_flag = EQC_resistance_target
		remove_ideas = EQC_resistance
	}
}

# The end of New Mareland
country_event = {
	id = eqc_resistence_event.6
	immediate = {log = "[GetDateText]: [Root.GetName]: event eqc_resistence_event.6"}
	title = eqc_resistence_event.6.t
	desc = eqc_resistence_event.6.d
	picture = GFX_report_event_generic_ruins

	trigger = {
		has_country_flag = EQC_resistance_target
		EQC = {
			OR = {
				exists = no
				is_subject = yes
			}
		}
	}

	option = {
		name = eqc_resistence_event.6.a
		clr_country_flag = EQC_resistance_target
		remove_ideas = EQC_resistance
	}
}

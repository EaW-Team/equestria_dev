add_namespace = brodfeld_rework
add_namespace = brodfeld_news

#start private temp functions


#end private temp functions

#start public events


country_event = { #adding starting_equipment_factor to the strings. if something broke, delete this and restore to	 division = "name = \"Brodfeld's Unemployed\" division_template = \"Brodfeld's Unemployed\" start_experience_factor = 0.1"
	id = brodfeld_rework.1
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.1"}
	title = brodfeld_rework.1.t
	desc = brodfeld_rework.1.d
	picture = GFX_event_griffon_soldier
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.1.a
		custom_effect_tooltip = brodfeld_rework.1.b
		add_war_support = -0.05
		hidden_effect = {
			division_template = {
				name = "Brodfeld's Unemployed"
				priority = 0
				#is_locked = yes
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
				}
			}
			if = {
				limit = { controls_state = 508 }
				508 = {
					create_unit = {
						division = "name = \"Brodfeld's Unemployed\" division_template = \"Brodfeld's Unemployed\" start_experience_factor = 0.1 start_equipment_factor = 0.3"
						owner = ROOT
					}
					create_unit = {
						division = "name = \"Brodfeld's Unemployed\" division_template = \"Brodfeld's Unemployed\" start_experience_factor = 0.1 start_equipment_factor = 0.3"
						owner = ROOT
					}
				}
				else = {
					if = {
						limit = { controls_state = 385 }
						385 = {
							create_unit = {
								division = "name = \"Brodfeld's Unemployed\" division_template = \"Brodfeld's Unemployed\" start_experience_factor = 0.1 start_equipment_factor = 0.3"
								owner = ROOT
							}
							create_unit = {
								division = "name = \"Brodfeld's Unemployed\" division_template = \"Brodfeld's Unemployed\" start_experience_factor = 0.1 start_equipment_factor = 0.3"
								owner = ROOT
							}
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = brodfeld_rework.2
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.2"}
	title = brodfeld_rework.2.t
	desc = brodfeld_rework.2.d
	picture = GFX_event_griffons_machine_gun
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.2.a
		custom_effect_tooltip = brodfeld_rework.2.b
		add_war_support = -0.1
		hidden_effect = {
			division_template = {
				name = "Brodfeld's Workers"
				priority = 0
				is_locked = yes
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
				}
			}
			if = {
				limit = { controls_state = 508 }
				508 = {
					create_unit = {
						division = "name = \"Brodfeld's Workers\" division_template = \"Brodfeld's Workers\" start_experience_factor = 0.05 start_equipment_factor = 0.2"
						owner = ROOT
					}
					create_unit = {
						division = "name = \"Brodfeld's Workers\" division_template = \"Brodfeld's Workers\" start_experience_factor = 0.05 start_equipment_factor = 0.2"
						owner = ROOT
					}
				}
				else = {
					if = {
						limit = { controls_state = 385 }
						385 = {
							create_unit = {
								division = "name = \"Brodfeld's Workers\" division_template = \"Brodfeld's Workers\" start_experience_factor = 0.05 start_equipment_factor = 0.2"
								owner = ROOT
							}
							create_unit = {
								division = "name = \"Brodfeld's Workers\" division_template = \"Brodfeld's Workers\" start_experience_factor = 0.05 start_equipment_factor = 0.2"
								owner = ROOT
							}
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = brodfeld_rework.3
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.3"}
	title = brodfeld_rework.3.t
	desc = brodfeld_rework.3.d
	is_triggered_only = yes
	picture = GFX_kloseu_speech
	option = {
		name = brodfeld_rework.3.a
		custom_effect_tooltip = brodfeld_rework.3.b
		add_war_support = -0.15
		hidden_effect = {
			division_template = {
				name = "Brodfeld's Civilians"
				priority = 0
				is_locked = yes
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
				}
			}
			if = {
				limit = { controls_state = 508 }
				508 = {
					create_unit = {
						division = "name = \"Brodfeld's Civilians\" division_template = \"Brodfeld's Civilians\" start_experience_factor = 0.0 start_equipment_factor = 0.1"
						owner = ROOT
					}
					create_unit = {
						division = "name = \"Brodfeld's Civilians\" division_template = \"Brodfeld's Civilians\" start_experience_factor = 0.0 start_equipment_factor = 0.1"
						owner = ROOT
					}
					create_unit = {
						division = "name = \"Brodfeld's Civilians\" division_template = \"Brodfeld's Civilians\" start_experience_factor = 0.0 start_equipment_factor = 0.1"
						owner = ROOT
					}
					create_unit = {
						division = "name = \"Brodfeld's Civilians\" division_template = \"Brodfeld's Civilians\" start_experience_factor = 0.0 start_equipment_factor = 0.1"
						owner = ROOT
					}
				}
				else = {
					if = {
						limit = { controls_state = 385 }
						385 = {
							create_unit = {
								division = "name = \"Brodfeld's Civilians\" division_template = \"Brodfeld's Civilians\" start_experience_factor = 0.0 start_equipment_factor = 0.1"
								owner = ROOT
							}
							create_unit = {
								division = "name = \"Brodfeld's Civilians\" division_template = \"Brodfeld's Civilians\" start_experience_factor = 0.0 start_equipment_factor = 0.1"
								owner = ROOT
							}
							create_unit = {
								division = "name = \"Brodfeld's Civilians\" division_template = \"Brodfeld's Civilians\" start_experience_factor = 0.0 start_equipment_factor = 0.1"
								owner = ROOT
							}
							create_unit = {
								division = "name = \"Brodfeld's Civilians\" division_template = \"Brodfeld's Civilians\" start_experience_factor = 0.0 start_equipment_factor = 0.1"
								owner = ROOT
							}
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = brodfeld_rework.4
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.4"}
	title = brodfeld_rework.4.t
	desc = brodfeld_rework.4.d
	picture = GFX_event_griffon_back
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.4.a
		custom_effect_tooltip = brodfeld_rework.4.b
		#add_ideas = BRF_deep_plan
		hidden_effect = {
			country_event = { id = brodfeld_rework.5 days = 45 }
		}
	}
}


country_event = {
	id = brodfeld_rework.5
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.5"}
	title = {
		text = brodfeld_rework.5_t_success
		trigger = { 385 = { is_controlled_by = ROOT } }
	}
	title = {
		text = brodfeld_rework.5_t_fail
		trigger = { NOT = { 385 = { is_controlled_by = ROOT } } }
	}
	desc = {
		text = brodfeld_rework.5_d_success
		trigger = { 385 = { is_controlled_by = ROOT } }
	}
	desc = {
		text = brodfeld_rework.5_d_fail
		trigger = { NOT = { 385 = { is_controlled_by = ROOT } } }
	}
	picture = GFX_event_boat_in_runined_dock
	is_triggered_only = yes
	fire_only_once = yes
	option = {
		name = brodfeld_rework.5.a
		trigger = {
			385 = { is_controlled_by = ROOT }
			# i.e. has_idea = BRF_deep_plan
		}
		set_technology = {
			infantry_weapons = 1
		}
		add_equipment_to_stockpile = {
			type = infantry_equipment_0
			amount = 1500
			producer = WNG
		}
	}
	option = {
		name = brodfeld_rework.5.b
		trigger = {
			NOT = { 385 = { is_controlled_by = ROOT } }
			#i.e. NOT = { has_idea = BRF_deep_plan}
		}
		#just the text informing that the quest was lost
	}
}

country_event = {
	id = brodfeld_rework.6
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.6"}
	title = brodfeld_rework.6.t
	desc = brodfeld_rework.6.d
	picture = GFX_event_griffon_royal_guard
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.6.a
		custom_effect_tooltip = brodfeld_rework.6.b
		hidden_effect = {
			division_template = {
				name = "'Operation Violet' Special Forces"
				priority = 0
				regiments = {
					knights = { x = 0 y = 0 }
					knights = { x = 1 y = 0 }
					knights = { x = 0 y = 1 }
					knights = { x = 1 y = 1 }
					knights = { x = 0 y = 2 }
					knights = { x = 1 y = 2 }
					#maybe add later field hospital, signal company etc
				}
			}
			508 = {
				#limit = { ROOT = { has_full_control_of_state = PREV } } #to decide wether to limit it and how later
				create_unit = {
					division = "name = \"'Operation Violet' Special Forces\" division_template = \"'Operation Violet' Special Forces\" start_experience_factor = 1"
					owner = ROOT
				}
				create_unit = {
					division = "name = \"'Operation Violet' Special Forces\" division_template = \"'Operation Violet' Special Forces\" start_experience_factor = 1"
					owner = ROOT
				}
			}
		}
	}
}

country_event = { #to do: maybe add all these messagebox events to one big scripted one
	id = brodfeld_rework.7
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.7"}
	title = brodfeld_rework.7.t
	desc = brodfeld_rework.7.d
	picture = GFX_event_medieval_city_3
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.7.a
		custom_effect_tooltip = BRF_new_advisors_tt
		hidden_effect = {
			GRW = {
				GRW_Bart_Herbs = {
					set_nationality = BRF
				}
				GRW_Dakaran_Begone = {
					set_nationality = BRF
				}
				GRW_Mandarin = {
					set_nationality = BRF
				}
				GRW_Andor = {
					set_nationality = BRF
				}
				GRW_Duskfluffian = {
					set_nationality = BRF
				}
				GRW_alyx_pines = {
					set_nationality = BRF
				}
				GRW_pirate_yellow_beak = {
					set_nationality = BRF
				}
				GRW_Murkfeathers = {
					set_nationality = BRF
				}
			}
		}
		hidden_effect = {
			set_country_flag = BRF_completed_1
		}
	}
}

country_event = {
	id = brodfeld_rework.8
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.8"}
	title = brodfeld_rework.8.t
	desc = brodfeld_rework.8.d
	picture = GFX_event_boat_in_runined_dock
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.8.a
		#custom_effect_tooltip = brodfeld_rework.8.b
		set_country_flag = BRF_enrico_pardoned
	}
}

country_event = {
	id = brodfeld_rework.9
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.9"}
	title = brodfeld_rework.9.t
	desc = brodfeld_rework.9.d
	picture = GFX_event_griffon_para
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.9.a
		add_stability = 0.05
		hidden_effect = {
			country_event = { id = brodfeld_rework.58 days = 3 }
		}
	}
}

country_event = {
	id = brodfeld_rework.10
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.10"}
	title = brodfeld_rework.10.t
	desc = brodfeld_rework.10.d
	picture = GFX_event_feast
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.10.a
		#custom_effect_tooltip = brodfeld_rework.10.b
	}
}

country_event = {
	id = brodfeld_rework.11
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.11"}
	title = brodfeld_rework.11.t
	desc = brodfeld_rework.11.d
	picture = GFX_kloseu_speech
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.11.a
		#custom_effect_tooltip = brodfeld_rework.11.b
		set_party_name = {
			ideology = neutrality
			long_name = BRF_neutral_party_long
			name = BRF_neutral_party
		}
		hidden_effect = {
			news_event = { id = brodfeld_news.1 hours = 12 }
		}
	}
}

country_event = {
	id = brodfeld_rework.12
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.12"}
	title = brodfeld_rework.12.t
	desc = brodfeld_rework.12.d
	picture = GFX_event_gothic_interior
	is_triggered_only =  yes
	option = {
		name = brodfeld_rework.12.a
		custom_effect_tooltip = brodfeld_rework.12.b
		set_country_flag = BRF_king_agree
		ai_chance = {
			factor = 40
			modifier = {
				factor = 10
				OR = {
					has_global_flag = BRFlord_killed
					has_global_flag = BRFlord_executed
					has_country_flag = BRF_AI_NEUTRALITY
					has_game_rule = {
						rule = BRF_ai_behavior
						option = NEUTRALITY
					}
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_global_flag = BRFprince_killed
					has_global_flag = BRFprince_executed
					has_global_flag = BRFprince_executed_private
					AND = {
						is_historical_focus_on = yes
						has_game_rule = {
							rule = BRF_ai_behavior
							option = DEFAULT
						}
					}
					has_country_flag = BRF_AI_FASCIST_HISTORICAL
					has_game_rule = {
						rule = BRF_ai_behavior
						option = FASCIST_HISTORICAL
					}
					has_country_flag = BRF_AI_FASCIST_EDGY
					has_game_rule = {
						rule = BRF_ai_behavior
						option = FASCIST_EDGY
					}
				}
			}
		}
	}
	option = {
		name = brodfeld_rework.12.c
		custom_effect_tooltip = brodfeld_rework.12.e
		set_country_flag = BRF_king_disagree
		ai_chance = {
			factor = 40
			modifier = {
				factor = 0
				OR = {
					has_global_flag = BRFlord_killed
					has_global_flag = BRFlord_executed
					has_country_flag = BRF_AI_NEUTRALITY
					has_game_rule = {
						rule = BRF_ai_behavior
						option = NEUTRALITY
					}
				}
			}
			modifier = {
				factor = 10
				OR = {
					has_global_flag = BRFprince_killed
					has_global_flag = BRFprince_executed
					has_global_flag = BRFprince_executed_private
					AND = {
						is_historical_focus_on = yes
						has_game_rule = {
							rule = BRF_ai_behavior
							option = DEFAULT
						}
					}
					has_country_flag = BRF_AI_FASCIST_HISTORICAL
					has_game_rule = {
						rule = BRF_ai_behavior
						option = FASCIST_HISTORICAL
					}
					has_country_flag = BRF_AI_FASCIST_EDGY
					has_game_rule = {
						rule = BRF_ai_behavior
						option = FASCIST_EDGY
					}
				}
			}
			modifier = {
				factor = 2
				fascism > 0.45
			}
		}
	}
}

country_event = {
	id = brodfeld_rework.13
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.13"}
	title = brodfeld_rework.13.t
	desc = brodfeld_rework.13.d
	picture = GFX_event_medieval_city_3
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.13.a
		#custom_effect_tooltip = brodfeld_rework.13.b
		add_country_leader_role = {
			character = BRF_Enrico
			country_leader = {
				desc = BRF_Enrico_leader_desc
				expire = "1965.1.1"
				ideology = centrism
				traits = { liberal_democratic_paragon democratic_sympathies }
			}
			promote_leader = yes
		}
	}
}

country_event = {
	id = brodfeld_rework.14
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.14"}
	picture = GFX_event_medieval_city_winter
	is_triggered_only = yes
	title = {
		text = brodfeld_rework.14_t_largo
		trigger = { has_country_flag = BRF_largo }
	}
	title = {
		text = brodfeld_rework.14_t_adagio
		trigger = { has_country_flag = BRF_adagio }
	}
	title = {
		text = brodfeld_rework.14_t_allegro
		trigger = { has_country_flag = BRF_allegro }
	}
	title = {
		text = brodfeld_rework.14_t_presto
		trigger = { has_country_flag = BRF_presto }
	}
	desc = {
		text = brodfeld_rework.14_d_largo
		trigger = { has_country_flag = BRF_largo }
	}
	desc = {
		text = brodfeld_rework.14_d_adagio
		trigger = { has_country_flag = BRF_adagio }
		}
	desc = {
		text = brodfeld_rework.14_d_allegro
		trigger = { has_country_flag = BRF_allegro }
	}
	desc = {
		text = brodfeld_rework.14_d_presto
		trigger = { has_country_flag = BRF_presto }
	}
	option = {
		name = brodfeld_rework.14.a
		#custom_effect_tooltip = brodfeld_rework.14.b
	}
}

country_event = {
	id = brodfeld_rework.15
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.15"}
	title = brodfeld_rework.15.t
	desc = brodfeld_rework.15.d
	picture = GFX_event_western_griffon_city
	is_triggered_only = yes
	option = { #agree
		name = brodfeld_rework.15.a
		#custom_effect_tooltip = brodfeld_rework.15.c
		add_ideas = BRF_yes_demil
		add_ideas =	disarmed_nation
		BRF_Ion_Soimescu = {
			retire = yes
		}
	}
	option = { #disagree
		name = brodfeld_rework.15.b
		#custom_effect_tooltip = brodfeld_rework.15.e
		add_ideas = BRF_no_demil
	}
}

country_event = {
	id = brodfeld_rework.16
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.16"}
	title = brodfeld_rework.16.t
	desc = brodfeld_rework.16.d
	picture = GFX_event_feast
	is_triggered_only = yes
	option = { #focus on military
		name = brodfeld_rework.16.a
		#custom_effect_tooltip = brodfeld_rework.16.b
		add_ideas = BRF_focus_civilian
	}
	option = { #focus on civilian
		name = brodfeld_rework.16.b
		#custom_effect_tooltip = brodfeld_rework.16.c
		add_ideas = BRF_focus_military
	}
}

country_event = {
	id = brodfeld_rework.17
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.17"}
	title = brodfeld_rework.17.t
	desc = brodfeld_rework.17.d
	picture = GFX_event_feast
	is_triggered_only = yes
	option = { #yes
		name = brodfeld_rework.17.a
		#custom_effect_tooltip = brodfeld_rework.17.c
		add_ideas = BRF_yes_enslave
		save_current_manpower = yes
		every_owned_state = {
			add_manpower = -2500
		}
		restore_previous_manpower = yes
		add_stability = -0.2
	}
	option = { #no
		name = brodfeld_rework.17.b
		#custom_effect_tooltip = brodfeld_rework.17.e
		add_ideas = BRF_no_enslave
		save_current_manpower = yes
		every_owned_state = {
			add_manpower = -500
		}
		restore_previous_manpower = yes
		add_stability = 0.05
	}
}

country_event = {
	id = brodfeld_rework.18
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.18"}
	picture = GFX_event_western_griffon_city
	title = {
		text = brodfeld_rework.18_t_largo
		trigger = { has_country_flag = BRF_largo }
	}
	title = {
		text = brodfeld_rework.18_t_adagio
		trigger = { has_country_flag = BRF_adagio }
	}
	title = {
		text = brodfeld_rework.18_t_allegro
		trigger = { has_country_flag = BRF_allegro }
	}
	title = {
		text = brodfeld_rework.18_t_presto
		trigger = { has_country_flag = BRF_presto }
	}
	desc = {
		text = brodfeld_rework.18_d_largo
		trigger = { has_country_flag = BRF_largo }
	}
	desc = {
		text = brodfeld_rework.18_d_adagio
		trigger = { has_country_flag = BRF_adagio }
		}
	desc = {
		text = brodfeld_rework.18_d_allegro
		trigger = { has_country_flag = BRF_allegro }
	}
	desc = {
		text = brodfeld_rework.18_d_presto
		trigger = { has_country_flag = BRF_presto }
	}
	is_triggered_only = yes
	fire_only_once = yes
	option = { #stay with the ideas
		name = brodfeld_rework.18.a
		#custom_effect_tooltip = brodfeld_rework.18.b
	}
}

country_event = {
	id = brodfeld_rework.19
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.19"}
	title = brodfeld_rework.19.t
	desc = brodfeld_rework.19.d
	picture = GFX_event_billabong
	is_triggered_only = yes
	fire_only_once = yes

	option = { #fully recover and delete the ideas
		name = brodfeld_rework.19.a
		custom_effect_tooltip = brodfeld_rework.19.b
		hidden_effect = {
			set_country_flag = BRF_delete_recovery_ideas
		}
	}
}

#country_event =
#{
#	id = brodfeld_rework.21 #focus get blackrock (neutral path)
#	title = brodfeld_rework.21.t
#	desc = brodfeld_rework.21.d
#	picture = GFX_event_griffon_mountain
#	is_triggered_only = yes
#	option =
#	{
#		name = brodfeld_rework.21.a
#		custom_effect_tooltip = brodfeld_rework.21.b
#		create_wargoal =
#		{
#			type = puppet_wargoal_focus
#			target = BAN
#		}
#	}
#}

country_event = {
	id = brodfeld_rework.22
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.22"}
	title = brodfeld_rework.22.t
	desc = brodfeld_rework.22.d
	picture = GFX_event_feast
	is_triggered_only = yes
	fire_only_once = yes
	option = { #dab on them and take it by force
		name = brodfeld_rework.22.a
		#custom_effect_tooltip = brodfeld_rework.22.e
		create_wargoal = {
			type = take_state_focus
			target = 507.owner
			generator = { 507 }
		}
		add_stability = -0.05
		add_political_power = -50
		ai_chance = {
			factor = 40
			modifier = {
				has_completed_focus = BRF_allegro_recovery
				factor = 1.5
			}
			modifier = {
				has_completed_focus = BRF_presto_recovery
				factor = 4
			}
		}
	}
	option = { #ask for salmarkt, if not option to annex them
		name = brodfeld_rework.22.b
		#custom_effect_tooltip = brodfeld_rework.22.f
		507 = {
			owner = {
				country_event = { id = brodfeld_rework.100 days = 2 }
			}
		}
		ai_chance = {
			factor = 40
			modifier = {
				has_completed_focus = BRF_adagio_recovery
				factor = 4
			}
		}
	}
	option = { #don't do it
		name = brodfeld_rework.22.c
		#custom_effect_tooltip = brodfeld_rework.22.g
		add_war_support = -0.1
		add_political_power = -100
		ai_chance = {
			factor = 40
			modifier = {
				has_completed_focus = BRF_largo_recovery
				factor = 4
			}
		}
	}
}

country_event = {
	id = brodfeld_rework.23
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.23"}
	title = brodfeld_rework.23.t
	desc = brodfeld_rework.23.d
	is_triggered_only = yes
	fire_only_once = yes
	picture = GFX_kloseu_speech
	option = { #Soldiers, Onward!
		name = brodfeld_rework.23.a
		unlock_decision_tooltip = BRF_anti_communist_war
		hidden_effect = {
			news_event = { id = brodfeld_news.2 hours = 12 }
		}
	}
}

country_event = {
	id = brodfeld_rework.24
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.24"}
	title = brodfeld_rework.24.t
	desc = brodfeld_rework.24.d
	picture = GFX_event_griffon_para
	is_triggered_only = yes
	fire_only_once = yes
	option = {
		name = brodfeld_rework.24.a
		#hidden_effect = {
		#	every_country = { #can't dbg  #this is good for performance :galus:
		#		limit = { has_government = communism }
		#		THIS = {
		#			country_event = { id = brodfeld_rework.105 } #call the intelligence event
		#		}
		#	}
		#}
	}
}

country_event = {
	id = brodfeld_rework.25
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.25"}
	title = brodfeld_rework.25.t
	desc = brodfeld_rework.25.d
	picture = GFX_event_gothic_interior
	is_triggered_only = yes
	fire_only_once = yes
	option = { #deal with the situation asap
		name = brodfeld_rework.25.a
		#custom_effect_tooltip = brodfeld_rework.25.b
		hidden_effect = {
			set_country_flag = BRF_gambit_accepted
		}
		add_stability = -0.5
		add_political_power = -200

		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				OR = {
					AND = {
						is_historical_focus_on = yes
						has_game_rule = {
							rule = BRF_ai_behavior
							option = DEFAULT
						}
					}
					has_country_flag = BRF_AI_FASCIST_HISTORICAL
					has_game_rule = {
						rule = BRF_ai_behavior
						option = FASCIST_HISTORICAL
					}
				}
			}
			modifier = {
				factor = 100
				OR = {
					has_country_flag = BRF_AI_FASCIST_EDGY
					has_game_rule = {
						rule = BRF_ai_behavior
						option = FASCIST_EDGY
					}
				}
			}
		}

		#pro Tomado diversions. some seen some hidden
		508 = {
			damage_building = {
				type = arms_factory
				damage = 3
			}
		}
		#hidden_effect =
		#{
		385 = {
			damage_building = {
				type = arms_factory
				damage = 2
			}
		}
		605 = {
			damage_building = {
				type = arms_factory
				damage = 4
			}
		}
		#}
		hidden_effect = {
			589 = {
				damage_building = {
					type = infrastructure
					damage = 2
				}
			}
			508 = {
				damage_building = {
					type = infrastructure
					damage = 1
				}
			}
			590 = {
				damage_building = {
					type = infrastructure
					damage = 3
				}
			}
			385 = {
				damage_building = {
					type = infrastructure
					damage = 4
				}
			}
			588 = {
				damage_building = {
					type = infrastructure
					damage = 3
				}
			}
			605 = {
				damage_building = {
					type = infrastructure
					damage = 6
				}
			}
		}

	}
	option = { #calm the situation and be careful with it
		name = brodfeld_rework.25.c
		#custom_effect_tooltip = brodfeld_rework.25.e
		hidden_effect = {
			set_country_flag = BRF_gambit_declined
		}
		add_stability = -0.5
		add_political_power = -200
		ai_chance = {
			base = 40
			modifier = {
				factor = 100
				OR =  {
					AND = {
						is_historical_focus_on = yes
						has_game_rule = {
							rule = BRF_ai_behavior
							option = DEFAULT
						}
					}
					has_country_flag = BRF_AI_FASCIST_HISTORICAL
					has_game_rule = {
						rule = BRF_ai_behavior
						option = FASCIST_HISTORICAL
					}
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_country_flag = BRF_AI_FASCIST_EDGY
					has_game_rule = {
						rule = BRF_ai_behavior
						option = FASCIST_EDGY
					}
				}
			}
		}

		#pro Tomado diversions. some seen some hidden
		508 = {
			damage_building = {
				type = arms_factory
				damage = 3
			}
		}
		#hidden_effect =
		#{
		385 = {
			damage_building = {
				type = arms_factory
				damage = 2
			}
		}
		605 = {
			damage_building = {
				type = arms_factory
				damage = 4
			}
		}
		#}
		hidden_effect = {
			589 = {
				damage_building = {
					type = infrastructure
					damage = 2
				}
			}
			508 = {
				damage_building = {
					type = infrastructure
					damage = 1
				}
			}
			590 = {
				damage_building = {
					type = infrastructure
					damage = 3
				}
			}
			385 = {
				damage_building = {
					type = infrastructure
					damage = 4
				}
			}
			588 = {
				damage_building = {
					type = infrastructure
					damage = 3
				}
			}
			605 = {
				damage_building = {
					type = infrastructure
					damage = 6
				}
			}
		}
	}
}

country_event = {
	id = brodfeld_rework.26
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.26"}
	picture = GFX_kloseu_speech
	title = brodfeld_rework.26.t
	desc = brodfeld_rework.26.d
	is_triggered_only = yes
	fire_only_once = yes
	option = {
		name = brodfeld_rework.26.a
		#custom_effect_tooltip = brodfeld_rework.26.b
		add_stability = -0.05
		add_war_support = 0.15
		add_political_power = 75
		add_popularity = {
			ideology = fascism
			popularity = 0.10
		}
	}
}

country_event = {
	id = brodfeld_rework.27
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.27"}
	picture = GFX_event_gothic_interior
	title = {
		text = brodfeld_rework.27_t_accepted
		trigger = { has_country_flag = BRF_gambit_accepted }
	}
	title = {
		text = brodfeld_rework.27_t_declined
		trigger = { has_country_flag = BRF_gambit_declined }
	}
	desc = {
		text = brodfeld_rework.27_d_accepted
		trigger = { has_country_flag = BRF_gambit_accepted }
	}
	desc = {
		text = brodfeld_rework.27_d_declined
		trigger = { has_country_flag = BRF_gambit_declined }
	}
	is_triggered_only = yes
	fire_only_once = yes
	option = {
		name = brodfeld_rework.27.a
		trigger = {has_country_flag = BRF_gambit_accepted }
		add_ideas = BRF_gambit_accepted_idea
	}
	option = {
		name = brodfeld_rework.27.a
		trigger = {has_country_flag = BRF_gambit_declined}
		add_ideas = BRF_gambit_declined_idea
	}
}

country_event = {
	id = brodfeld_rework.28
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.28"}
	picture = GFX_event_gothic_interior
	title = {
		text = brodfeld_rework.28_t_accepted
		trigger = { has_country_flag = BRF_gambit_accepted }
	}
	title = {
		text = brodfeld_rework.28_t_declined
		trigger = { has_country_flag = BRF_gambit_declined }
	}
	desc = {
		text = brodfeld_rework.28_d_accepted
		trigger = { has_country_flag = BRF_gambit_accepted }
	}
	desc = {
		text = brodfeld_rework.28_d_declined
		trigger = { has_country_flag = BRF_gambit_declined }
	}
	is_triggered_only = yes
	fire_only_once = yes
	option = {
		name = brodfeld_rework.28.a
		trigger = {has_country_flag = BRF_gambit_accepted }
		BRF_Tomado = {
			retire = yes
		}
		if = {
			limit = {
				has_idea = LUS_BRF_marriage
			}
			remove_ideas = LUS_BRF_marriage
			LUS_princess_mira = {
				set_nationality = LUS
			}
			diplomatic_relation = {
				country = LUS
				relation = guarantee
				active = no
			}
			diplomatic_relation = {
				country = LUS
				relation = non_aggression_pact
				active = no
			}
			remove_opinion_modifier = {
				target = LUS modifier = leaders_married
			}
			LUS = {
				clr_country_flag = daughter_married_to_brf
				diplomatic_relation = {
					country = BRF
					relation = guarantee
					active = no
				}
				diplomatic_relation = {
					country = BRF
					relation = non_aggression_pact
					active = no
				}
				remove_opinion_modifier = {
					target = BRF modifier = leaders_married
				}
			}
		}
		set_global_flag = BRFprince_killed
	}
	option = {
		name = brodfeld_rework.28.b
		trigger = {has_country_flag = BRF_gambit_declined}
		}
}

country_event = {
	id = brodfeld_rework.29
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.29"}
	picture = GFX_event_medieval_city_ugly_street
	title = {
		text = brodfeld_rework.29_t_accepted
		trigger = { has_country_flag = BRF_gambit_accepted }
	}
	title = {
		text = brodfeld_rework.29_t_declined
		trigger = { has_country_flag = BRF_gambit_declined }
	}
	desc = {
		text = brodfeld_rework.29_d_accepted
		trigger = { has_country_flag = BRF_gambit_accepted }
	}
	desc = {
		text = brodfeld_rework.29_d_declined
		trigger = { has_country_flag = BRF_gambit_declined }
	}
	is_triggered_only = yes
	fire_only_once = yes
	option = {
		name = brodfeld_rework.29.a
		trigger = {has_country_flag = BRF_gambit_accepted }
		add_resource = {
			type = steel
			amount = 15
			state = 651
		}
		add_manpower = -5000
		save_current_manpower = yes
		every_owned_state = {
			add_manpower = -5000
		}
		restore_previous_manpower = yes
		BRF_Enrico = {
			retire = yes
		}
	}
	option = {
		name = brodfeld_rework.29.b
		trigger = {has_country_flag = BRF_gambit_declined}
		add_resource = {
			type = steel
			amount = 8
			state = 651
		}
		add_manpower = -2500
		save_current_manpower = yes
		every_owned_state = {
			add_manpower = -2500
		}
		restore_previous_manpower = yes
	}
}

country_event = {
	id = brodfeld_rework.30
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.30"}
	picture = GFX_event_medieval_castle_on_hill
	title = {
		text = brodfeld_rework.30_t_accepted
		trigger = { has_country_flag = BRF_gambit_accepted }
	}
	title = {
		text = brodfeld_rework.30_t_declined
		trigger = { has_country_flag = BRF_gambit_declined }
	}
	desc = {
		text = brodfeld_rework.30_d_accepted
		trigger = { has_country_flag = BRF_gambit_accepted }
	}
	desc = {
		text = brodfeld_rework.30_d_declined
		trigger = { has_country_flag = BRF_gambit_declined }
	}
	is_triggered_only = yes
	fire_only_once = yes
	option = {
		name = brodfeld_rework.30.a
		#custom_effect_tooltip = brodfeld_rework.30.c
		trigger = {has_country_flag = BRF_gambit_accepted }
		add_manpower = -1000
	}
	option = {
		name = brodfeld_rework.30.b
		#custom_effect_tooltip = brodfeld_rework.30.e
		trigger = {has_country_flag = BRF_gambit_declined}
		add_manpower = -500
	}
}

country_event = {
	id = brodfeld_rework.32
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.32"}
	picture = GFX_event_old_mine
	title = {
		text = brodfeld_rework.32_t_accepted
		trigger = { has_country_flag = BRF_gambit_accepted }
	}
	title = {
		text = brodfeld_rework.32_t_declined
		trigger = { has_country_flag = BRF_gambit_declined }
	}
	desc = {
		text = brodfeld_rework.32_d_accepted
		trigger = { has_country_flag = BRF_gambit_accepted }
	}
	desc = {
		text = brodfeld_rework.32_d_declined
		trigger = { has_country_flag = BRF_gambit_declined }
	}
	is_triggered_only = yes
	fire_only_once = yes
	option = {
		name = brodfeld_rework.32.a
		trigger = {has_country_flag = BRF_gambit_accepted }
		add_resource = {
			type = tungsten
			amount = 10
			state = 651
		}
		save_current_manpower = yes
		every_owned_state = {
			add_manpower = -7500
		}
		restore_previous_manpower = yes
	}
	option = {
		name = brodfeld_rework.32.b
		trigger = {has_country_flag = BRF_gambit_declined}
		add_resource = {
			type = tungsten
			amount = 5
			state = 651
		}
		save_current_manpower = yes
		every_owned_state = {
			add_manpower = -3750
		}
		restore_previous_manpower = yes
	}
}

country_event = {
	id = brodfeld_rework.33
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.33"}
	picture = GFX_event_griffon_back
	title = {
		text = brodfeld_rework.33_t_accepted
		trigger = { has_country_flag = BRF_gambit_accepted }
	}
	title = {
		text = brodfeld_rework.33_t_declined
		trigger = { has_country_flag = BRF_gambit_declined }
	}
	desc = {
		text = brodfeld_rework.33_d_accepted
		trigger = { has_country_flag = BRF_gambit_accepted }
	}
	desc = {
		text = brodfeld_rework.33_d_declined
		trigger = { has_country_flag = BRF_gambit_declined }
	}
	is_triggered_only = yes
	fire_only_once = yes
	option = {
		name = brodfeld_rework.33.a
		trigger = {has_country_flag = BRF_gambit_accepted }
	}
	option = {
		name = brodfeld_rework.33.a
		trigger = {has_country_flag = BRF_gambit_declined}
		}
}

###58+###



country_event = {
	id = brodfeld_rework.58
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.58"}
	title = brodfeld_rework.58.t
	desc = brodfeld_rework.58.d
	picture = GFX_event_griffon_para
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.58.a
		#custom_effect_tooltip = brodfeld_rework.58.b
		GRW = {
			GRW_richard_spear = {
				retire = yes
			}
			GRW_koldvin = {
				retire = yes
			}
			GRW_Cynthia = {
				retire = yes
			}
			GRW_Brandon_Swift = {
				retire = yes
			}
			if = {
				limit = {
					has_character = GRW_rain_twister
				}
				GRW_rain_twister = {
					retire = yes
				}
			}
			if = {
				limit = {
					has_character = GRW_witia_gryphon
				}
				GRW_witia_gryphon = {
					retire = yes
				}
			}
			hidden_effect = {
				if = {
					limit = {
						has_country_leader = { character = GRW_comradegeneral_filip_redglad ruling_only = yes }
					}
					event_target:GRW_Redglad = {
						set_nationality = BAN
					}
					BAN = { country_event = { id = brodfeld_rework.113 days = 7 } }
				}
				add_country_leader_role = {
					character = GRW_gheara_ciocescu
					country_leader = {
						expire = "1965.1.1"
						ideology = leninism
						traits = {  }
					}
					promote_leader = yes
				}
			}
			set_country_flag = GRW_leaders_executed
			event_target:GRW_Theresa = {
				set_nationality = BRF
			}
		}
	}
}


country_event = { # liberation day trigger
	id = brodfeld_rework.59
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.59"}
	title = brodfeld_rework.59.t
	desc = brodfeld_rework.59.d
	hidden = yes
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			country_event = { id = brodfeld_rework.61 days = 777 }
			if = {
				limit = { 
					NOT = { 
						has_global_flag = BRFlord_killed 
						has_global_flag = BRFlord_executed
						has_government = democratic
					} 
				}
				country_event = { id = brodfeld_rework.60 days = 365 }
			}
		}
	}
	option = {
		name = brodfeld_rework.59.a
	}
}

country_event = { # Liberation day
	id = brodfeld_rework.60
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.60"}
	title =  brodfeld_rework.60.t
	picture = GFX_event_medieval_city_3
	desc = {
		text = brodfeld_rework.60.d.a
		trigger = { NOT = { has_war = yes } }
	}
	desc = {
		text = brodfeld_rework.60.d.b
		trigger = { has_war = yes }
	}

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			country_event = { id = brodfeld_rework.59 }
			}
	}

	option = {
		name = brodfeld_rework.60.a  # mourning the martyrs
		trigger = { NOT = { has_war = yes } } # War is sorrowful
		add_stability = 0.01
	}
	option = {
		name = brodfeld_rework.60.b  # for greater victory
		trigger = { has_war = yes }  # War propaganda
		add_war_support = 0.01
		add_manpower = 5000
	}
}

country_event = { # Chimera attack! Minor flavor event
	id = brodfeld_rework.61
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.61"}
	title =  brodfeld_rework.61.t
	desc = brodfeld_rework.61.d
	picture = GFX_event_billabong

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = brodfeld_rework.61.a  # leave the chimeras alone
		add_stability = -0.1
		588 = {
			add_resource = {
				type = oil
				amount = -14
			}
		}
	}
	option = {
		name = brodfeld_rework.61.b  # kill the fuckers
		add_stability = -0.05
		add_manpower = -10000
	}
}







### News

news_event = {
	id = brodfeld_news.1
	immediate = {log = "[Root.GetName]: event prywhen_news.3"}#Auto-logging
	title = brodfeld_news.1.t
	desc = brodfeld_news.1.d
	picture = GFX_news_kloseu_speech
	major = yes
	is_triggered_only = yes
	option = {
		trigger = { has_government = communism }
		name = brodfeld_news.1.a
	}
	option = {
		trigger = { has_government = fascism }
		name = brodfeld_news.1.b
	}
	option = {
		trigger = { OR = {
				has_government = neutrality
				has_government = democratic
			}
		}
		name = brodfeld_news.1.c
	}
}

news_event = {
	id = brodfeld_news.2
	immediate = {log = "[Root.GetName]: event prywhen_news.3"}#Auto-logging
	title = brodfeld_news.2.t
	desc = brodfeld_news.2.d
	picture = GFX_news_kloseu_speech
	major = yes
	is_triggered_only = yes
	option = {
		trigger = { has_government = communism }
		name = brodfeld_news.2.a
	}
	option = {
		trigger = { has_government = fascism }
		name = brodfeld_news.2.b
	}
	option = {
		trigger = { OR = {
				has_government = neutrality
				has_government = democratic
			}
		}
		name = brodfeld_news.2.c
	}
}



###other countries events

country_event = {
	id = brodfeld_rework.100
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.100"}
	title = brodfeld_rework.100.t
	desc = brodfeld_rework.100.d
	picture = GFX_event_griffon_royal_guard
	is_triggered_only = yes
	option = { #give the region
		name = brodfeld_rework.100.a
		#custom_effect_tooltip = brodfeld_rework.100.c
		add_stability = -0.1
		add_political_power = -200
		add_war_support = 0.1
		FROM = {
			transfer_state = 507
			country_event = { id = brodfeld_rework.102 days = 1 }
		}
		ai_chance = {
			factor = 40
			modifier = {
				factor = 0
				tag = MIT
			}
		}
	}
	option = { #refuse
		name = brodfeld_rework.100.b
		#custom_effect_tooltip = brodfeld_rework.100.e
		FROM = { country_event = { id = brodfeld_rework.101 days = 2 } }
		ai_chance = {
			factor = 40
			modifier = {
				factor = 5
				has_government = communism
				has_government = fascism
			}
		}
	}
}

country_event = {
	id = brodfeld_rework.101
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.101"}
	title = brodfeld_rework.101.t
	desc = brodfeld_rework.101.d
	picture = GFX_event_griffon_para
	is_triggered_only = yes
	option = { #go to war
		name = brodfeld_rework.101.a
		create_wargoal = {
			type = take_state_focus
			target = 507.owner
			generator = { 507 }
		}
	}
	option = { #leave it
		name = brodfeld_rework.101.b
		add_stability = 0.05
		add_political_power = -100
	}
}

country_event = {
	id = brodfeld_rework.102
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.102"}
	title = brodfeld_rework.102.t
	desc = brodfeld_rework.102.d
	picture = GFX_event_medieval_city_3
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.102.a
		effect_tooltip = {
			transfer_state = 507
		}
		add_political_power = 100
	}
}

country_event = {
	id = brodfeld_rework.20
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.20"}
	title = brodfeld_rework.20.t
	desc = brodfeld_rework.20.d
	picture = GFX_event_griffon_back
	is_triggered_only = yes
	option = {#Agree to join faction
		name = brodfeld_rework.20.a
		ai_chance = {
			factor = 160
			modifier = {
				factor = 0.5
				has_government = communism
				has_government = fascism
			}
		}
		add_ai_strategy = {
			type = alliance
			id = FROM
			value = 200
		}
		FROM = {
			add_ai_strategy = {
				type = alliance
				id = ROOT
				value = 200
			}
			add_to_faction = ROOT
			country_event = { id = brodfeld_rework.103 }
		}
	}
	option = {#Refuse
		name = brodfeld_rework.20.b
		ai_chance = {
			factor = 20
		}
		FROM = {
			country_event = { id = brodfeld_rework.104 }
		}
	}
}

country_event = {#BRF informed that member has accepted their offer
	id = brodfeld_rework.103
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.103"}
	title = brodfeld_rework.103.t
	desc = brodfeld_rework.103.d
	picture = GFX_event_medieval_city_3

	is_triggered_only = yes

	option = {#Good
		name = brodfeld_rework.103.a
		effect_tooltip = {
			add_to_faction = FROM
		}
	}
}

country_event = {#BRF informed that member has refused their offer
	id = brodfeld_rework.104
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.104"}
	title = brodfeld_rework.104.t
	desc = brodfeld_rework.104.d
	picture = GFX_event_griffon_royal_guard

	is_triggered_only = yes

	option = {#Shit
		name = brodfeld_rework.104.a
	}
}

country_event = {
	id = brodfeld_rework.106
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.106"}
	title = brodfeld_rework.106.t
	desc = brodfeld_rework.106.d
	picture = GFX_event_griffon_royal_guard
	is_triggered_only = yes
	option = { #accept
		name = brodfeld_rework.106.a
		diplomatic_relation = {
			country = BRF
			relation = non_aggression_pact
			active = yes
		}
		BRF = {
			country_event = { id = brodfeld_rework.107 days = 1 }
		}
	}
	option = { #refuse
		name = brodfeld_rework.106.b
		BRF = {
			country_event = { id = brodfeld_rework.108 days = 2 }
		}
	}
}

country_event = {
	id = brodfeld_rework.107
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.107"}
	title = brodfeld_rework.107.t
	desc = brodfeld_rework.107.d
	picture = GFX_event_medieval_city_3
	is_triggered_only = yes
	option = { #good
		name = brodfeld_rework.107.a
		add_political_power = 150
		add_stability = 0.05
	}
}

country_event = {
	id = brodfeld_rework.108
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.108"}
	title = brodfeld_rework.108.t
	desc = brodfeld_rework.108.d
	picture = GFX_event_griffons_machine_gun
	is_triggered_only = yes
	option = { #this means war!
		name = brodfeld_rework.108.a
		add_stability = -0.05
		add_war_support = 0.05
		create_wargoal = {
			type = annex_everything
			target = FROM
		}
	}
}

country_event = {
	id = brodfeld_rework.109
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.109"}
	title = brodfeld_rework.109.t
	desc = brodfeld_rework.109.d
	picture = GFX_event_griffon_royal_guard
	is_triggered_only = yes
	option = { #bend the knee
		name = brodfeld_rework.109.a
		BRF = {
			country_event = { id = brodfeld_rework.110 days = 1 }
		}
		ai_chance = {
			factor = 10
		}
	}
	option = { #suck my barbed cock
		name = brodfeld_rework.109.b
		BRF = {
			country_event = { id = brodfeld_rework.111 days = 2 }
		}
		ai_chance = {
			factor = 20
			modifier = {
				factor = 0
				has_country_flag = daughter_married_to_brf
			}
		}
	}
}

country_event = {
	id = brodfeld_rework.110
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.110"}
	title = brodfeld_rework.110.t
	desc = brodfeld_rework.110.d
	picture = GFX_event_griffon_royal_guard
	is_triggered_only = yes
	option = { #good
		name = brodfeld_rework.110.a
		add_political_power = 150
		add_stability = 0.05
		FROM = {
			get_current_government_type = yes
		}
		puppet = FROM
		hidden_effect = {
			if = {
				limit = { has_dlc = "Together for Victory" }
				set_autonomy = { target = FROM autonomy_state = autonomy_subjugated_vassal }
			}
		}
		FROM = {
			restore_previous_government_type = yes 
		}
	}
}

country_event = {
	id = brodfeld_rework.111
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.111"}
	title = brodfeld_rework.111.t
	desc = brodfeld_rework.111.d
	picture = GFX_event_griffon_soldier
	is_triggered_only = yes
	option = { #this means war!
		name = brodfeld_rework.111.a
		add_stability = -0.05
		add_war_support = 0.05
		create_wargoal = {
			type = annex_everything
			target = FROM
		}
	}
}

country_event = {
	id = brodfeld_rework.112
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.112"}
	title = brodfeld_rework.112.t
	desc = brodfeld_rework.112.d
	picture = GFX_event_griffon_royal_guard
	is_triggered_only = yes
	option = {
		ai_chance = {
			factor = 40
			modifier = {
				factor = 0
				OR = {
					has_completed_focus = LUS_claim_prywhen_north
					owns_state = 507
				}
			}
		}
		name = brodfeld_rework.112.a
		every_owned_state = {
			limit = {
				is_core_of = BRF
			}
			BRF = { transfer_state = PREV }
		}
		BRF = {
			add_political_power = -75
			add_timed_idea = { idea = BRF_payment  days = 365 }
		}
		add_timed_idea = { idea = BRF_payment_received  days = 365 }
		add_political_power = 150
	}
	option = { # No you fuck off
		ai_chance = {
			factor = 5
			modifier = {
				factor = 8
				OR = {
					has_completed_focus = LUS_claim_prywhen_north
					owns_state = 507
				}
			}
		}
		name = brodfeld_rework.112.b
		BRF = {
			country_event = { id = brodfeld_rework.115 days = 2 }
		}
	}
}

country_event = {
	id = brodfeld_rework.113
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.113"}
	title = brodfeld_rework.113.t
	desc = {
		text = brodfeld_rework.113_d_commie
		trigger = { has_government = communism  }
	}
	desc = {
		text = brodfeld_rework.113_d_notcommie
		trigger = { NOT = { has_government = communism } }
	}
	picture = GFX_event_griffon_soldier
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.113.a
		trigger = {
			has_government = communism
		}
		effect_tooltip = {
			GRW_comradegeneral_filip_redglad = {
				set_nationality = BAN
			}
		}
		add_political_power = 100
		add_popularity = {
			ideology = communism
			popularity = 0.05
		}
	}
	option = {
		name = brodfeld_rework.113.b
		trigger = {
			NOT = { has_government = communism }
		}
		hidden_effect = {
			GRW_comradegeneral_filip_redglad = {
				remove_unit_leader_role = yes
			}
		}
		add_popularity = {
			ideology = communism
			popularity = 0.15
		}
		add_stability = -0.1
		add_manpower = -32
	}
}

country_event = {
	id = brodfeld_rework.114
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.114"}
	title = brodfeld_rework.114.t
	desc = brodfeld_rework.114.d
	picture = GFX_event_boat_in_runined_dock
	is_triggered_only = yes
	fire_only_once = yes
	option = {
		name = brodfeld_rework.114.a
	}
}

country_event = {
	id = brodfeld_rework.115
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.115"}
	title = brodfeld_rework.115.t
	desc = brodfeld_rework.115.d
	picture = GFX_event_griffon_royal_guard
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.115.a
		add_political_power = -50
		add_stability = -0.1
		add_war_support = 0.3
		create_wargoal = {
			type = annex_everything
			target = FROM
		}
	}
}


###mason things###
###Nothing to see here###
#c'mon, be a cutie you who had a deep plan to bypass solving the quests. you don't wanna spoil all the fun sweet cheater, right? :gallus:

country_event = {
	id = brodfeld_rework.150
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.150"}
	title = brodfeld_rework.150.t
	desc = brodfeld_rework.150.d
	#picture = GFX_mason_eye_snake
	#picture = GFX_mason_eye_pony
	picture = GFX_mason_eye_wider

	is_triggered_only = yes
	fire_only_once = yes

	option = { #failed
		name = brodfeld_rework.150.b
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
	option = { #decrypted
		name = brodfeld_rework.150.e
		hidden_effect = {
			set_country_flag = BRF_completed1
			country_event = { id = brodfeld_rework.151  days = 75 } #call next encrypted event in ~75 (7+5=12 -> 1+2=3) days
		}
	}
	option = { #failed
		name = brodfeld_rework.150.c
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
	option = { #failed
		name = brodfeld_rework.150.f
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
}

country_event = {
	id = brodfeld_rework.151
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.151"}
	title = brodfeld_rework.151.t
	desc = brodfeld_rework.151.d
	picture = GFX_mason_eye_wider

	is_triggered_only = yes
	fire_only_once = yes

	option = { #decrypted
		name = brodfeld_rework.151.b
		hidden_effect = {
			set_country_flag = BRF_completed2
			country_event = {  id = brodfeld_rework.152  days = 75 } #call next encrypted event in ~75 (7+5=12 -> 1+2=3) days
		}
	}
	option = { #failed
		name = brodfeld_rework.151.c
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
	option = { #failed
		name = brodfeld_rework.151.e
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
	option = { #failed
		name = brodfeld_rework.151.f
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
}

country_event = {
	id = brodfeld_rework.152
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.152"}
	title = brodfeld_rework.152.t
	desc = brodfeld_rework.152.d
	picture = GFX_mason_eye_wider

	is_triggered_only = yes
	fire_only_once = yes

	option = { #failed
		name = brodfeld_rework.152.c
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
	option = { #failed
		name = brodfeld_rework.152.e
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
	option = { #correct
		name = brodfeld_rework.152.b
		hidden_effect = {
			set_country_flag = BRF_completed3
			country_event = { id = brodfeld_rework.153  hours = 1 }
		}
	}
	option = { #failed
		name = brodfeld_rework.152.f
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
}

country_event = {
	id = brodfeld_rework.153
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.153"}
	title = brodfeld_rework.153.t
	desc = brodfeld_rework.153.d
	picture = GFX_mason_questfour

	is_triggered_only = yes
	fire_only_once = yes

	option = { #failed
		name = brodfeld_rework.153.b
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
		}
	option = { #failed
		name = brodfeld_rework.153.c
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
	option = { #failed
		name = brodfeld_rework.153.e
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
	option = { #correct
		name = brodfeld_rework.153.f
		hidden_effect = {
			set_country_flag = BRF_completed4
			country_event = { id = brodfeld_rework.154  hours = 1 }
		}
	}
}

country_event = {
	id = brodfeld_rework.154
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.154"}
	title = brodfeld_rework.154.t
	desc = brodfeld_rework.154.d
	picture = GFX_mason_eye_wider

	is_triggered_only = yes
	fire_only_once = yes

	option = { #failed
		name = brodfeld_rework.154.b
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
	option = { #failed
		name = brodfeld_rework.154.e
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
	option = { #failed
		name = brodfeld_rework.154.f
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
	option = { #correct
		name = brodfeld_rework.154.c
		hidden_effect = {
			set_country_flag = BRF_completed5
			country_event = { id = brodfeld_rework.155  days = 75 } #call next encrypted event in ~75 (7+5=12 -> 1+2=3) days
		}
	}
}

country_event = {
	id = brodfeld_rework.155
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.155"}
	title = brodfeld_rework.155.t
	desc = brodfeld_rework.155.d
	picture = GFX_mason_eye_wider

	is_triggered_only = yes
	fire_only_once = yes

	option = { #failed
		name = brodfeld_rework.155.b
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
		}
	option = { #correct
		name = brodfeld_rework.155.c
		trigger = { has_completed_focus = BRF_mason_special }
		hidden_effect = {
			set_country_flag = BRF_completed6
			add_tech_bonus = {
				name = nuclear_bonus
				bonus = -100.00
				uses = 99
				category = nuclear
			}
			country_event = { id = brodfeld_rework.156  days = 75 } #call next encrypted event in ~75 (7+5=12 -> 1+2=3) days
		}
	}
	option = { #failed
		name = brodfeld_rework.155.e
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
	option = { #failed
		name = brodfeld_rework.155.f
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
}

country_event = {
	id = brodfeld_rework.156
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.156"}
	title = brodfeld_rework.156.t
	desc = brodfeld_rework.156.d
	picture = GFX_mason_eye_wider

	is_triggered_only = yes
	fire_only_once = yes

	option = { #failed
		name = brodfeld_rework.156.b
		hidden_effect = {
			set_country_flag = BRF_masons_failed
			BRF_king_kloseu_de_kissau = {
				retire = yes
			}
			if = {
				limit = {
					NOT = {
						has_global_flag = BRFprince_executed
						has_global_flag = BRFprince_executed_private
						has_global_flag = BRFprince_killed
					}
				}
				add_country_leader_role = {
					character = BRF_Tomado
					country_leader = {
						desc = BRF_Tomado_desc
						expire = "1965.1.1"
						ideology = centrism
						traits = { liberal_democratic_paragon democratic_sympathies }
					}
					promote_leader = yes
				}
				BRF_Tomado = {
					set_character_name = BRF_King_Tomado
				}
				else = {
					add_country_leader_role = {
						character = BRF_Mason_of_Twelt
						country_leader = {
							expire = "1965.1.1"
							ideology = harmonic_theocracy
							traits = { FBK_anti_extremist benevolent_overlord_2 }
						}
						promote_leader = yes
					}
					load_focus_tree = BRF_Mason_Tree
				}
			}
			add_country_leader_role = {
				character = BRF_Ion_Soimescu
				country_leader = {
					expire = "1965.1.1"
					ideology = fascism_ideology
					traits = {  }
				}
				promote_leader = yes
			}
			country_event = { id = brodfeld_rework.172 days = 14 }
		}
		}
	option = { #failed
		name = brodfeld_rework.156.c
		hidden_effect = {
			set_country_flag = BRF_masons_failed
			BRF_king_kloseu_de_kissau = {
				retire = yes
			}
			if = {
				limit = {
					NOT = {
						has_global_flag = BRFprince_executed
						has_global_flag = BRFprince_executed_private
						has_global_flag = BRFprince_killed
					}
				}
				add_country_leader_role = {
					character = BRF_Tomado
					country_leader = {
						desc = BRF_Tomado_desc
						expire = "1965.1.1"
						ideology = centrism
						traits = { liberal_democratic_paragon democratic_sympathies }
					}
					promote_leader = yes
				}
				BRF_Tomado = {
					set_character_name = BRF_King_Tomado
				}
				else = {
					add_country_leader_role = {
						character = BRF_Mason_of_Twelt
						country_leader = {
							expire = "1965.1.1"
							ideology = harmonic_theocracy
							traits = { FBK_anti_extremist benevolent_overlord_2 }
						}
						promote_leader = yes
					}
					load_focus_tree = BRF_Mason_Tree
				}
			}
			add_country_leader_role = {
				character = BRF_Ion_Soimescu
				country_leader = {
					expire = "1965.1.1"
					ideology = fascism_ideology
					traits = {  }
				}
				promote_leader = yes
			}
			country_event = { id = brodfeld_rework.172 days = 14 }
		}
	}
	option = { #correct
		name = brodfeld_rework.156.e
		hidden_effect = {
			set_country_flag = BRF_completed7
			country_event = { id = brodfeld_rework.157  hours = 1 }
		}
	}
	option = { #failed
		name = brodfeld_rework.156.f
		hidden_effect = {
			set_country_flag = BRF_masons_failed
			BRF_king_kloseu_de_kissau = {
				retire = yes
			}
			if = {
				limit = {
					NOT = {
						has_global_flag = BRFprince_executed
						has_global_flag = BRFprince_executed_private
						has_global_flag = BRFprince_killed
					}
				}
				add_country_leader_role = {
					character = BRF_Tomado
					country_leader = {
						desc = BRF_Tomado_desc
						expire = "1965.1.1"
						ideology = centrism
						traits = { liberal_democratic_paragon democratic_sympathies }
					}
					promote_leader = yes
				}
				BRF_Tomado = {
					set_character_name = BRF_King_Tomado
				}
				else = {
					add_country_leader_role = {
						character = BRF_Mason_of_Twelt
						country_leader = {
							expire = "1965.1.1"
							ideology = harmonic_theocracy
							traits = { FBK_anti_extremist benevolent_overlord_2 }
						}
						promote_leader = yes
					}
					load_focus_tree = BRF_Mason_Tree
				}
			}
			add_country_leader_role = {
				character = BRF_Ion_Soimescu
				country_leader = {
					expire = "1965.1.1"
					ideology = fascism_ideology
					traits = {  }
				}
				promote_leader = yes
			}
			country_event = { id = brodfeld_rework.172 days = 14 }
		}
	}
}

country_event = {
	id = brodfeld_rework.157
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.157"}
	title = brodfeld_rework.157.t
	desc = brodfeld_rework.157.d
	picture = GFX_mason_eye_wider

	is_triggered_only = yes
	fire_only_once = yes

	option = { #correct
		name = brodfeld_rework.157.b
		hidden_effect = {
			set_country_flag = BRF_completed8
			country_event = { id = brodfeld_rework.158  hours = 1 }
		}
		}
	option = { #failed
		name = brodfeld_rework.157.c
		hidden_effect = {
			set_country_flag = BRF_masons_failed
			BRF_king_kloseu_de_kissau = {
				retire = yes
			}
			if = {
				limit = {
					NOT = {
						has_global_flag = BRFprince_executed
						has_global_flag = BRFprince_executed_private
						has_global_flag = BRFprince_killed
					}
				}
				add_country_leader_role = {
					character = BRF_Tomado
					country_leader = {
						desc = BRF_Tomado_desc
						expire = "1965.1.1"
						ideology = centrism
						traits = { liberal_democratic_paragon democratic_sympathies }
					}
					promote_leader = yes
				}
				BRF_Tomado = {
					set_character_name = BRF_King_Tomado
				}
				else = {
					add_country_leader_role = {
						character = BRF_Mason_of_Twelt
						country_leader = {
							expire = "1965.1.1"
							ideology = harmonic_theocracy
							traits = { FBK_anti_extremist benevolent_overlord_2 }
						}
						promote_leader = yes
					}
					load_focus_tree = BRF_Mason_Tree
				}
			}
			add_country_leader_role = {
				character = BRF_Ion_Soimescu
				country_leader = {
					expire = "1965.1.1"
					ideology = fascism_ideology
					traits = {  }
				}
				promote_leader = yes
			}
			country_event = { id = brodfeld_rework.172 days = 14 }
		}
	}
	option = { #failed
		name = brodfeld_rework.157.e
		hidden_effect = {
			set_country_flag = BRF_masons_failed
			BRF_king_kloseu_de_kissau = {
				retire = yes
			}
			if = {
				limit = {
					NOT = {
						has_global_flag = BRFprince_executed
						has_global_flag = BRFprince_executed_private
						has_global_flag = BRFprince_killed
					}
				}
				add_country_leader_role = {
					character = BRF_Tomado
					country_leader = {
						desc = BRF_Tomado_desc
						expire = "1965.1.1"
						ideology = centrism
						traits = { liberal_democratic_paragon democratic_sympathies }
					}
					promote_leader = yes
				}
				BRF_Tomado = {
					set_character_name = BRF_King_Tomado
				}
				else = {
					add_country_leader_role = {
						character = BRF_Mason_of_Twelt
						country_leader = {
							expire = "1965.1.1"
							ideology = harmonic_theocracy
							traits = { FBK_anti_extremist benevolent_overlord_2 }
						}
						promote_leader = yes
					}
					load_focus_tree = BRF_Mason_Tree
				}
			}
			add_country_leader_role = {
				character = BRF_Ion_Soimescu
				country_leader = {
					expire = "1965.1.1"
					ideology = fascism_ideology
					traits = {  }
				}
				promote_leader = yes
			}
			country_event = { id = brodfeld_rework.172 days = 14 }
		}
	}
	option = { #failed
		name = brodfeld_rework.157.f
		hidden_effect = {
			set_country_flag = BRF_masons_failed
			BRF_king_kloseu_de_kissau = {
				retire = yes
			}
			if = {
				limit = {
					NOT = {
						has_global_flag = BRFprince_executed
						has_global_flag = BRFprince_executed_private
						has_global_flag = BRFprince_killed
					}
				}
				add_country_leader_role = {
					character = BRF_Tomado
					country_leader = {
						desc = BRF_Tomado_desc
						expire = "1965.1.1"
						ideology = centrism
						traits = { liberal_democratic_paragon democratic_sympathies }
					}
					promote_leader = yes
				}
				BRF_Tomado = {
					set_character_name = BRF_King_Tomado
				}
				else = {
					add_country_leader_role = {
						character = BRF_Mason_of_Twelt
						country_leader = {
							expire = "1965.1.1"
							ideology = harmonic_theocracy
							traits = { FBK_anti_extremist benevolent_overlord_2 }
						}
						promote_leader = yes
					}
					load_focus_tree = BRF_Mason_Tree
				}
			}
			add_country_leader_role = {
				character = BRF_Ion_Soimescu
				country_leader = {
					expire = "1965.1.1"
					ideology = fascism_ideology
					traits = {  }
				}
				promote_leader = yes
			}
			country_event = { id = brodfeld_rework.172 days = 14 }
		}
	}
}

country_event = {
	id = brodfeld_rework.158
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.158"}
	title = brodfeld_rework.158.t
	desc = brodfeld_rework.158.d
	picture = GFX_mason_eye_wider

	is_triggered_only = yes
	fire_only_once = yes

	option = { #correct
		name = brodfeld_rework.158.b
		hidden_effect = {
			add_ideas = BRF_masonic_king
			set_country_flag = BRF_completed9
			#go masons
			set_politics = {
				ruling_party = democratic
				elections_allowed = no
			}
			add_country_leader_role = {
				character = BRF_Mason_of_Twelt
				country_leader = {
					expire = "1965.1.1"
					ideology = harmonic_theocracy
					traits = { FBK_anti_extremist benevolent_overlord_2 }
				}
				promote_leader = yes
			}
			#more anticheat can be added here with IFs, not worth the time and the potential bugs 7 hours from release thow :whale:
			load_focus_tree = BRF_Mason_Tree
		}
	}

	option = { #failed
		name = brodfeld_rework.158.c
		hidden_effect = {
			set_country_flag = BRF_masons_failed
		}
	}
}

country_event = {
	id = brodfeld_rework.159
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.159"}
	title = brodfeld_rework.159.t
	desc = brodfeld_rework.159.d
	picture = GFX_mason_eye_wider
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.159.a
		custom_effect_tooltip = brodfeld_rework.159.b
		add_stability = 0.09
		BRF_Prelate = {
			retire = yes
		}
		set_country_flag = BRF_prelate_gone
	}
}

country_event = {
	id = brodfeld_rework.160
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.160"}
	title = brodfeld_rework.160.t
	desc = brodfeld_rework.160.d
	picture = GFX_mason_eye_wider
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.160.a
		add_stability = -0.21
		add_political_power = -100
	}
}

country_event = {
	id = brodfeld_rework.161
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.161"}
	title = brodfeld_rework.161.t
	desc = brodfeld_rework.161.d
	picture = GFX_event_medieval_city_winter
	is_triggered_only = yes
	option = { #Accept invitation
		name = brodfeld_rework.161.a
		custom_effect_tooltip = brodfeld_rework.161.b
		diplomatic_relation = {
			country = BRF
			relation = non_aggression_pact
			active = yes
		}
		BRF = { country_event = { id = brodfeld_rework.162 } }
		set_country_flag = BRF_lon_member
		if = {
			limit = {
				BRF = { has_completed_focus = BRF_found_isco }
			}
			add_ideas = BRF_found_isco_idea
		}
		if = {
			limit = {
				BRF = { has_completed_focus = BRF_found_iho }
			}
			add_ideas = BRF_found_iho_idea
		}
		if = {
			limit = {
				BRF = { has_completed_focus = BRF_found_ito }
			}
			add_ideas = BRF_found_ito_idea
		}
		if = {
			limit = {
				BRF = { has_completed_focus = BRF_found_iff }
			}
			add_ideas = BRF_found_iff_idea
		}
		ai_chance = {
			factor = 5
			modifier = {
				factor = 3
				BRF = { has_completed_focus = BRF_found_isco }
			}
			modifier = {
				factor = 3
				BRF = { has_completed_focus = BRF_found_iho }
			}
			modifier = {
				factor = 3
				BRF = { has_completed_focus = BRF_found_ito }
			}
			modifier = {
				factor = 3
				BRF = { has_completed_focus = BRF_found_iff }
			}
		}
	}
	option = { #Refuse
		name = brodfeld_rework.161.c
		BRF = { country_event = { id = brodfeld_rework.163 } }
		ai_chance = {
			factor = 50
		}
	}
}

country_event = {
	id = brodfeld_rework.162
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.162"}
	title = brodfeld_rework.162.t
	desc = brodfeld_rework.162.d
	picture = GFX_mason_eye_wider
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.162.a
		custom_effect_tooltip = brodfeld_rework.162.b
	}
}

country_event = {
	id = brodfeld_rework.163
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.163"}
	title = brodfeld_rework.163.t
	desc = brodfeld_rework.163.d
	picture = GFX_mason_eye_wider
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.163.a
	}
}

country_event = {
	id = brodfeld_rework.164
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.164"}
	title = brodfeld_rework.164.t
	desc = brodfeld_rework.164.d
	picture = GFX_mason_eye_wider
	is_triggered_only = yes
	option = { #Yes annex me daddy
		name = brodfeld_rework.164.a
		custom_effect_tooltip = brodfeld_rework.162.b
		BRF = { annex_country = { target = ROOT transfer_troops = yes } }
		ai_chance = {
			factor = 50
		}
	}
	option = { #wait wtf no
		name = brodfeld_rework.164.c
		remove_ideas = BRF_found_isco_idea
		remove_ideas = BRF_found_iho_idea
		remove_ideas = BRF_found_ito_idea
		remove_ideas = BRF_found_iff_idea
		set_country_flag = BRF_masons_discovered
		clr_country_flag = BRF_lon_member
		add_political_power = -200
		add_stability = -0.15
		create_wargoal = {
			type = puppet_wargoal_focus
			target = BRF
		}
		diplomatic_relation = {
			country = BRF
			relation = non_aggression_pact
			active = no
		}
		ai_chance = {
			factor = 5
		}
	}
}

country_event = {
	id = brodfeld_rework.165
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.165"}
	title = brodfeld_rework.165.t
	desc = brodfeld_rework.165.d
	picture = GFX_mason_eye_wider
	is_triggered_only = yes
	option = { # blame lus
		trigger = {
			LUS = {
				exists = yes
				is_subject = no
				NOT = { has_war_with = ROOT }  
			}
		}
		name = brodfeld_rework.165.a
		#custom_effect_tooltip = brodfeld_rework.165.b
		create_wargoal = {
			type = annex_everything
			target = LUS
		}
	}
	option = { # blame gry
		trigger = {
			GRY = {
				exists = yes
				is_subject = no
				NOT = { has_war_with = ROOT }  
			}
		}
		name = brodfeld_rework.165.c
		#custom_effect_tooltip = brodfeld_rework.165.e
		create_wargoal = {
			type = annex_everything
			target = GRY
		}
	}
	option = { # blame gru
		trigger = {
			GRU = {
				exists = yes
				is_subject = no
				NOT = { has_war_with = ROOT }  
			}
		}
		name = brodfeld_rework.165.f
		#custom_effect_tooltip = brodfeld_rework.165.g
		create_wargoal = {
			type = annex_everything
			target = GRU
		}
	}
	option = { # blame cya
		trigger = {
			CYA = {
				exists = yes
				is_subject = no
				NOT = { has_war_with = ROOT }  
			}
		}
		name = brodfeld_rework.165.h
		#custom_effect_tooltip = brodfeld_rework.165.i
		create_wargoal = {
			type = annex_everything
			target = CYA
		}
	}
	option = { # blame someone else
		trigger = {
			AND = {
				LUS = {
					OR = {
						exists = no
						is_subject = yes
						has_war_with = ROOT
					}
				}
				GRY = {
					OR = {
						exists = no
						is_subject = yes
						has_war_with = ROOT
					}
				}
				GRU = {
					OR = {
						exists = no
						is_subject = yes
						has_war_with = ROOT
					}
				}
				CYA = {
					OR = {
						exists = no
						is_subject = yes
						has_war_with = ROOT
					}
				}
			}
		}
		name = brodfeld_rework.165.j
		#custom_effect_tooltip = brodfeld_rework.165.k
		random_neighbor_country = {
			ROOT = {
				create_wargoal = {
					type = annex_everything
					target = PREV
				}
			}
		}
	}
}

country_event = {
	id = brodfeld_rework.166
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.166"}
	title = brodfeld_rework.166.t
	desc = brodfeld_rework.166.d
	picture = GFX_mason_eye_wider
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.166.a
		add_political_power = 100
	}
}

country_event = {
	id = brodfeld_rework.167
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.167"}
	title = brodfeld_rework.167.t
	desc = brodfeld_rework.167.d
	picture = GFX_mason_eye_wider
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.167.a
		custom_effect_tooltip = UNLOCK_ANNEX
	}
}

country_event = {
	id = brodfeld_rework.168
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.168"}
	title = brodfeld_rework.168.t
	desc = brodfeld_rework.168.d
	picture = GFX_mason_eye_wider
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.168.a
		remove_ideas = BRF_found_isco_idea
		remove_ideas = BRF_found_iho_idea
		remove_ideas = BRF_found_ito_idea
		remove_ideas = BRF_found_iff_idea
		set_country_flag = BRF_masons_discovered
		clr_country_flag = BRF_lon_member
		add_political_power = -200
		add_stability = -0.15
		diplomatic_relation = {
			country = BRF
			relation = non_aggression_pact
			active = no
		}
		create_wargoal = {
			type = puppet_wargoal_focus
			target = BRF
		}
		BRF = { country_event = { id = brodfeld_rework.169 } }
	}
}

country_event = {
	id = brodfeld_rework.169
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.169"}
	title = brodfeld_rework.169.t
	desc = brodfeld_rework.169.d
	picture = GFX_mason_eye_wider
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.169.a
		add_political_power = -50
		add_stability = -0.05
	}
}

country_event = {
	id = brodfeld_rework.172
	immediate = {log = "[GetDateText]: [Root.GetName]: event brodfeld_rework.172"}
	title = brodfeld_rework.172.t
	desc = brodfeld_rework.172.d
	picture = GFX_mason_eye_wider
	is_triggered_only = yes
	option = {
		name = brodfeld_rework.172.a
		custom_effect_tooltip = brodfeld_rework.172.b
		set_global_flag = BRFlord_killed
		}
}

##end mason things###




##end
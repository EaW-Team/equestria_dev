add_namespace = deadempire

###Intro

country_event = {
	id = deadempire.1
	immediate = {log = "[Root.GetName]: event deadempire.1"}#Auto-logging
	title = deadempire.1.t
	desc = deadempire.1.d
	picture = GFX_event_magehold

	fire_only_once = yes
	is_triggered_only = no

	trigger = {
		tag = DED
		date > 1007.1.1
	}

	mean_time_to_happen = {
		days = 1
	}

	option = {
		name = deadempire.1.a
		add_political_power = 5
	}

}

###Challice quest chain

country_event = {
	id = deadempire.2
	immediate = {log = "[Root.GetName]: event deadempire.2"}#Auto-logging
	title = deadempire.2.t
	desc = deadempire.2.d
	picture = GFX_event_magehold

	fire_only_once = yes
	is_triggered_only = yes


	option = {
		name = deadempire.2.a
		hidden_effect = {
			kill_country_leader = yes
		}

		add_stability = 0.10
		add_research_slot = 1
		add_ideas = DED_Blood_Queen_Idea

		create_country_leader = {
			name = "Rosa Maledicta The Queen of Blood"
			desc = "POLITICS_DITAFASH"
			picture = "Rosa_vampire.tga"
			expire = "1965.1.1"
			ideology = falangism
			traits = {
				queen_of_dead
			}
		}
	}

}

country_event = {
	id = deadempire.3
	immediate = {log = "[Root.GetName]: event deadempire.3"}#Auto-logging
	title = deadempire.3.t

	desc = deadempire.3.d

	picture = GFX_event_magehold

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = deadempire.3.a
		country_event = { id = deadempire.4 days = 1 }
	}

}

country_event = {
	id = deadempire.4
	immediate = {log = "[Root.GetName]: event deadempire.4"}#Auto-logging
	title = deadempire.4.t
	desc = deadempire.4.d
	picture = GFX_event_magehold

	fire_only_once = no
	is_triggered_only = yes

	option = {
		name = deadempire.4.a
		hidden_effect = {
			country_event = { id = deadempire.5 days = 1 }
		}
	}
	option = {
		name = deadempire.4.b
		hidden_effect = {
			country_event = { id = deadempire.4 days = 1 }
		}
	}
	option = {
		name = deadempire.4.c
		hidden_effect = {
			country_event = { id = deadempire.4 days = 1 }
		}
	}

}

country_event = {
	id = deadempire.5
	immediate = {log = "[Root.GetName]: event deadempire.5"}#Auto-logging
	title = deadempire.5.t
	desc = deadempire.5.d
	picture = GFX_event_magehold

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = deadempire.5.a

		DED = {
			if = {
				limit = {
					has_country_flag = DED_Went_Blood

				}
				country_event = { id = deadempire.2 days = 1 }
				else = {
					country_event = { id = deadempire.12 days = 1 }

				}
			}
		}

	}

}

country_event = {
	id = deadempire.12
	immediate = {log = "[Root.GetName]: event deadempire.12"}#Auto-logging
	title = deadempire.12.t
	desc = deadempire.12.d
	picture = GFX_event_magehold

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = deadempire.12.a

		add_stability = 0.10
		add_ideas = DED_Queen_Bone_Idea
		add_research_slot = 1
		hidden_effect = {
			kill_country_leader = yes

		}

		create_country_leader = {
			name = "Rosa Maledicta The Queen of Bones"
			desc = "POLITICS_DITAFASH"
			picture = "Rosa_lich.tga"
			expire = "1965.1.1"
			ideology = falangism
			traits = {
				queen_of_dead
			}
		}
	}

}

####Reaction events to choice

country_event = {
	id = deadempire.6
	immediate = {log = "[Root.GetName]: event deadempire.6"}#Auto-logging
	title = deadempire.6.t
	desc = deadempire.6.d
	picture = GFX_event_magehold

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = deadempire.6.a
		add_political_power = -50
	}

}



country_event = {
	id = deadempire.7
	immediate = {log = "[Root.GetName]: event deadempire.7"}#Auto-logging
	title = deadempire.7.t
	desc = deadempire.7.d
	picture = GFX_event_magehold

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = deadempire.7.a
		add_political_power = -50
	}

}

####HLR Dead warning event

country_event = {
	id = deadempire.8
	immediate = {log = "[Root.GetName]: event deadempire.8"}#Auto-logging
	title = deadempire.8.t
	desc = deadempire.8.d
	picture = GFX_event_magehold

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = deadempire.8.a
	}

}

###Necromancy council explanation event

country_event = {
	id = deadempire.9
	immediate = {log = "[Root.GetName]: event deadempire.9"}#Auto-logging
	title = deadempire.9.t
	desc = deadempire.9.d
	picture = GFX_event_magehold

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = deadempire.9.a
	}

}

###Choice events

country_event = {
	id = deadempire.10
	immediate = {log = "[Root.GetName]: event deadempire.10"}#Auto-logging
	title = deadempire.10.t
	desc = deadempire.10.d
	picture = GFX_event_magehold

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = deadempire.10.a
	}

}

country_event = {
	id = deadempire.11
	immediate = {log = "[Root.GetName]: event deadempire.11"}#Auto-logging
	title = deadempire.11.t
	desc = deadempire.11.d
	picture = GFX_event_magehold

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = deadempire.11.a
	}

}


#Doodlets
country_event = {
	id = deadempire.13
	immediate = {log = "[Root.GetName]: event deadempire.13"}#Auto-logging
	title = deadempire.13.t
	desc = deadempire.13.d
	picture = GFX_event_magehold

	fire_only_once = yes
	is_triggered_only = yes

	trigger = {
		tag = DED
		382 = {
			is_owned_by = DED
		}
	}

	option = {
		name = deadempire.13.a

		create_corps_commander = {
			name = "Mister Doodets"
			picture = "Doodets.tga"
			traits = { }
			skill = 1
			attack_skill = 1
			defense_skill = 2
			planning_skill = 1
			logistics_skill = 3
		}
	}

}

###Yard necromancy events
country_event = {
	id = deadempire.29
	immediate = {log = "[Root.GetName]: event deadempire.29"}#Auto-logging
	title = deadempire.29.t
	desc = {
		trigger = { NOT = { country_exists = HLR } }
		text = deadempire.29.d
	}
	desc = {
		trigger = { country_exists = HLR }
		text = deadempire.29.d_hlr
	}
	picture = GFX_event_magehold

	trigger = {
		NOT = { tag = DED }
		OR = {
			tag = HLR
			NOT = { country_exists = HLR }
		}
		OR = {
			NOT = { country_exists = DED }
			NOT = { has_war_with = DED }
		}
		owns_state = 415
	}

	mean_time_to_happen = { days = 2 }
	fire_only_once = yes

	immediate = {
		if = {
			limit = { country_exists = DED }
			annex_country = { target = DED transfer_troops = no }
		}
	}
	option = {
		trigger = {
			country_exists = HLR
		}
		name = deadempire.29.a
		every_state = {
			limit = { is_core_of = DED }
			remove_core_of = DED
			HLR = { transfer_state = PREV }
		}
		ai_chance = {
			factor = 100
		}
	}
	option = {
		trigger = {
			NOT = { country_exists = HLR }
		}
		name = deadempire.29.b
		if = {
			limit = {
				any_owned_state = {
					is_core_of = HLR
				}
			}
			release = HLR
		}
		every_state = {
			limit = { is_core_of = DED }
			remove_core_of = DED
			HLR = { transfer_state = PREV }
		}
		ai_chance = {
			factor = 100
		}
	}
	option = {
		trigger = {
			can_remove_DED = yes
		}
		name = deadempire.29.c
		every_state = {
			limit = { is_core_of = DED }
			remove_core_of = DED
			set_state_flag = DED_former_state
			remove_building = { type = arms_factory level = 10 }
			remove_building = { type = industrial_complex level = 10 }
			remove_building = { type = infrastructure level = 10 }
		}
		hidden_effect = { set_country_flag = DED_is_being_removed }
		ai_chance = {
			factor = 100
		}
	}
}

country_event = {
	id = deadempire.32
	immediate = {log = "[Root.GetName]: event deadempire.32"}#Auto-logging
	hidden = yes

	mean_time_to_happen = {
		days = 1
	}

	trigger = {
		tag = DED
		has_completed_focus = DED_Black_Crusade
		any_neighbor_country = {
			NOT = { has_war_with = ROOT }
		}
	}

	option = {
		every_neighbor_country = {
			limit = { NOT = { has_war_with = ROOT } }
			ROOT = { declare_war_on = { target = PREV type = annex_everything } }
		}
	}

}

country_event = {
	id = deadempire.33
	immediate = {log = "[Root.GetName]: event deadempire.33"}#Auto-logging
	title = deadempire.33.t
	desc = deadempire.33.d
	picture = GFX_event_magehold

	mean_time_to_happen = {
		days = 7
	}

	trigger = {
		NOT = { tag = DED }
		country_exists = DED
		OR = {
			is_major = yes
			is_faction_leader = yes
		}
		NOT = {
			has_annex_war_goal = DED
			has_war_with = DED
			has_country_flag = DED_wargoal_flag
		}
		DED = {
			has_completed_focus = DED_Black_Crusade
			has_country_flag = { flag = DED_killed_nations value > 9 }
		}
	}

	option = {
		name = deadempire.33.a
		declare_war_on = { target = DED type = annex_everything }
		hidden_effect = { set_country_flag = DED_wargoal_flag }
		ai_chance = { factor = 100 }
	}
	option = {
		name = deadempire.33.b
		add_political_power = -100
		hidden_effect = { set_country_flag = { flag = DED_wargoal_flag days = 180 } }
		ai_chance = { factor = 0 }
	}
}

country_event = {
	id = deadempire.34
	immediate = {log = "[Root.GetName]: event deadempire.34"}#Auto-logging
	hidden = yes

	mean_time_to_happen = {
		days = 8
	}

	trigger = {
		OR = {
			tag = DED
			NOT = { country_exists = DED }
		}
		any_owned_state = {
			is_controlled_by = ROOT
			check_variable = { DED_used_crystals > 0 }
		}
	}

	option = {
		random_owned_controlled_state = {
			limit = { check_variable = { DED_used_crystals > 0 } }
			log = "Add 1 crystal to [This.GetName]"
			subtract_from_variable = { DED_used_crystals = 1 }
			add_resource = { type = crystals amount = 1 }
		}
	}

}

country_event = {
	id = deadempire.35
	immediate = {log = "[Root.GetName]: event deadempire.35"}#Auto-logging
	hidden = yes

	trigger = {
		has_country_flag = DED_is_being_removed
	}

	mean_time_to_happen = {
		days = 30
	}

	option = {
		set_country_flag = DED_stop_remove
		every_owned_state = {
			limit = { has_state_flag = DED_former_state }
			decrease_population_on_nuke = yes
			if = {
				limit = { state_population > 500 }
				clr_state_flag = DED_stop_remove
			}
		}
		if = {
			limit = { has_country_flag = DED_stop_remove }
			clr_country_flag = DED_is_being_removed
		}
	}
}

country_event = {
	id = deadempire.36
	immediate = {log = "[Root.GetName]: event deadempire.36"}#Auto-logging
	hidden = yes

	trigger = {
		has_opinion = { target = DED value > 0 }
		NOT = {
			original_tag = DED
		}
	}

	mean_time_to_happen = {
		days = 1
	}

	option = {
		add_opinion_modifier = { target = DED modifier = mortal_enemies }
		add_opinion_modifier = { target = DED modifier = embargo }
		add_opinion_modifier = { target = DED modifier = CHN_Embargo }
		reverse_add_opinion_modifier = { target = DED modifier = mortal_enemies }
		reverse_add_opinion_modifier = { target = DED modifier = embargo }
		reverse_add_opinion_modifier = { target = DED modifier = CHN_Embargo }
	}
}

country_event = {
	id = deadempire.37
	immediate = {log = "[Root.GetName]: event deadempire.37"}#Auto-logging
	hidden = yes

	is_triggered_only = yes

	option = {
		every_state = {
			limit = {
				is_controlled_by = ROOT
				has_resources_amount = { resource = crystals amount > 0 }
			}
			if = {
				limit = { check_variable = { PREV.DED_temp_used_crystals < PREV.DED_temp_used_crystals_limit } }
				add_to_variable = { var = DED_used_crystals value = 1 }
				add_resource = { type = crystals amount = -1 }
				PREV = { add_to_variable = { var = DED_temp_used_crystals value = 1 } }
			}
			else = {
				break = yes
			}
		}
		if = {
			limit = { check_variable = { DED_temp_used_crystals < DED_temp_used_crystals_limit } }
			country_event = deadempire.38
		}
		else = {
			clear_variable = DED_temp_used_crystals
			clear_variable = DED_temp_used_crystals_limit
		}
	}
}

country_event = {
	id = deadempire.38
	immediate = {log = "[Root.GetName]: event deadempire.38"}#Auto-logging
	hidden = yes

	is_triggered_only = yes

	option = {
		every_state = {
			limit = {
				is_controlled_by = ROOT
				has_resources_amount = { resource = crystals amount > 0 }
			}
			if = {
				limit = { check_variable = { PREV.DED_temp_used_crystals < PREV.DED_temp_used_crystals_limit } }
				add_to_variable = { var = DED_used_crystals value = 1 }
				add_resource = { type = crystals amount = -1 }
				PREV = { add_to_variable = { var = DED_temp_used_crystals value = 1 } }
			}
			else = {
				break = yes
			}
		}
		if = {
			limit = { check_variable = { DED_temp_used_crystals < DED_temp_used_crystals_limit } }
			country_event = deadempire.37
		}
		else = {
			clear_variable = DED_temp_used_crystals
			clear_variable = DED_temp_used_crystals_limit
		}
	}
}

on_actions = {
	# country
	on_new_term_election = {
			
	}
	
	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
		random_events = {
			100 = ace_promoted.1
			5 = ace_promoted.2
		}
	}
	
	# country, FROM = ace, PREV = enemy ace
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
		random_events = {
			100 = aces_killed_each_other.1
		}
	}
	
	# country, FROM = our ace,
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
		random_events = {
			100 = ace_killed_by_ace.1
		}
	}
	
	# country, FROM = our ace,
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
		random_events = {
			100 = ace_killed_other_ace.1
		}
	}
	
	# country, FROM = ace
	on_ace_killed = {
		random_events = {
			100 = ace_died.1
		}
	}
	
	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {
		
		random_events = {
			100 = war_justification.1
			100 = war_justification.2
			100 = war_justification.3
			100 = war_justification.4
			100 = war_justification.5
			100 = war_justification.6
			100 = war_justification.7
			100 = war_justification.8
			100 = war_justification.9
			100 = war_justification.10
			100 = war_justification.11
			100 = war_justification.12
			100 = war_justification.13
			100 = war_justification.14
			100 = war_justification.15
			100 = war_justification.16
			100 = war_justification.17
			100 = war_justification.18
			100 = war_justification.19
			17000 = 0
		}
	}
	
	on_wargoal_expire = {
		random_events = {
			100 = war_justification.301
		}
	}
	
	on_nuke_drop = {
		
		effect = {
			set_global_flag = first_nuke_dropped
			if = {
				limit = { NOT = { has_global_flag = first_nuke_dropped } }
				country_event = { id = generic.8 }
			}
			if = {
				limit = { has_idea = race_for_the_bomb_outclassed }
				remove_ideas = race_for_the_bomb_outclassed
			}
			
			
			news_event = { id = nuke_dropped.2 days = 1}
			news_event = { id = nuke_dropped.3 days = 1}
			news_event = { id = nuke_dropped.4 days = 1}
			news_event = { id = nuke_dropped.5 days = 1}
			news_event = { id = nuke_dropped.6 days = 1}
			news_event = { id = nuke_dropped.7 days = 1}
			news_event = { id = nuke_dropped.8 days = 1}
			news_event = { id = nuke_dropped.9 days = 1}
			news_event = { id = nuke_dropped.10 days = 1}
			news_event = { id = nuke_dropped.11 days = 1}
			news_event = { id = nuke_dropped.12 days = 1}
			news_event = { id = nuke_dropped.13 days = 1}
		}
		random_events = {
			100 = nuke_dropped.0
		}
	}
	
	# country random events
	#on_bi_yearly_pulse = {
		#
		#}
	
	#on_five_year_pulse = {
		#
		#}
	
	on_border_war_lost = {
		
	}
	
	on_leave_faction = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_leave_faction FROM = [From.GetName]"
			if = {
				limit = {
					is_river_fed_member = yes
				}
				RIV_leave_fed_no_ally = yes
			}
			FROM = {
				add_opinion_modifier = {
					modifier = faction_traitor
					target = ROOT
					days = 365
				}
				
				add_opinion_modifier = {
					modifier = faction_traitor_trade
					target = ROOT
					days = 365
				}
			}
		}
	}
	
	#FROM is the one that joins the faction
	on_create_faction = {
		
	}
	
	#FROM is country getting invited.
	on_offer_join_faction = {
		effect = {
			if = {
				limit = {
					has_government = communism
					FROM = {
						has_idea = LCT_anti_commie_pact 
					}
				}
				FROM = {
					remove_ideas = LCT_anti_commie_pact
				}
			}
		}		
	}
	
	#FROM is faction leader on join faction requests. THIS DOES NOT FIRE ON ADD_TO_FACTION EFFECT! USE ON_OFFER_JOIN_FACTION!
	on_join_faction = {
		effect = {
			if = {
				limit = {
					has_idea = LCT_anti_commie_pact 
					FROM = {
						has_government = communism
					}
				}
				remove_ideas = LCT_anti_commie_pact
			}
		}		
	}
	
	#FROM is war target
	on_declare_war = {
		effect = {
			FROM = { set_country_flag = had_war }
			ROOT = { set_country_flag = had_war }
			#If prepared by siphoning equipment, receive equipment back
			if = {
				limit = {
					FROM = {
						has_civil_war = yes
						has_country_flag = siphoned_equipment_stockpiles_for_civil_war
					}
					has_civil_war = yes
				}
				FROM = {
					clr_country_flag = siphoned_equipment_stockpiles_for_civil_war
					add_equipment_to_stockpile = {
						type = infantry_equipment
						amount = 1000
					}
				}
			}
			
			#If prepared with surprise attack plan, get bonus
			if = {
				limit = {
					FROM = {
						original_tag = ROOT
						#has_civil_war = yes
						has_country_flag = formulated_surprise_attack_plan_for_civil_war
					}
					#has_civil_war = yes
				}
				FROM = {
					clr_country_flag = formulated_surprise_attack_plan_for_civil_war
					add_timed_idea = {
						idea = civil_war_surprise_attack_plan
						days = 30
					}
				}
			}
			
			#Remove BNPL bills if New Mareland goes to war
			if = {
				limit = {
					ROOT = { original_tag = EQC }
					ROOT = { EQC_has_bnpl_bills = yes }
					NOT = { FROM = { original_tag = EQC } } # Don't remove in a civil war
				}
				ROOT = {
					EQC_remove_bnpl_bills = yes
					set_country_flag = bnpl_bills_removed_through_war
				}
			}

			#Remove BNPL bills if New Mareland is declared war on
			if = {
				limit = {
					FROM = { original_tag = EQC }
					FROM = { EQC_has_bnpl_bills = yes }
				}
				FROM = {
					EQC_remove_bnpl_bills = yes
					set_country_flag = bnpl_bills_removed_through_war
				}
			}

			#Gang up on Lake City
			if = {
				limit = {
					has_global_flag = LCT_holy_pony_empire_founded
					ROOT = { has_idea = griffon_race }
					FROM = { original_tag = LCT }
				}
				ROOT = {
					country_event = { id = lakecity.91 days = 1 }
				}
			}

			#Remove from LCT pact
			if = {
				limit = {
					tag = LCT
					FROM = {
						OR = {
							has_opinion_modifier = anti_comintern_pact_opinion
							has_idea = LCT_anti_commie_pact
						}
					}
				}
				FROM = {
					remove_opinion_modifier = { target = LCT modifier = anti_comintern_pact_opinion }
					remove_ideas = LCT_anti_commie_pact
				}
			}

			#Call LCT Anti-Commie pact members to war
			if = {
				limit = {
					ROOT = { has_government = communism }
					FROM = { has_idea = LCT_anti_commie_pact }
				}
				FROM = {
					country_event = { id = lakecity.81 days = 1 }
				}
				ROOT = {
					save_global_event_target_as = LCT_pact_war_starter
				}
			}
		}		
	}
	
	# When a new faction is formed
	on_faction_formed = {
		effect = {
			news_event = { id = news.159 }
		}
	}
	
	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		effect = {
			news_event = { id = country_capitulated.0 days = 0 }
		}
	}
	
	# ROOT is previously capitulated country
	on_uncapitulation = {
	}
	
	on_government_change = {
		effect = {
			if = {
				limit = { has_government = democratic }
				if = {
					limit = { has_idea = democratic_opposition_voicing_protests }
					remove_ideas = democratic_opposition_voicing_protests
				}
				if = {
					limit = { has_idea = democratic_revolutionaries }
					remove_ideas = democratic_revolutionaries
				}
				if = {
					limit = { has_idea = reign_of_terror }
					remove_ideas = reign_of_terror
				}
			}
			if = {
				limit = { has_government = communism }
				if = {
					limit = { has_idea = communist_partisans_recruiting }
					remove_ideas = communist_partisans_recruiting
				}
				if = {
					limit = { has_idea = communist_revolutionaries }
					remove_ideas = communist_revolutionaries
				}
				if = {
					limit = { has_idea = communism_defeated }
					remove_ideas = communism_defeated
				}
			}
			if = {
				limit = { has_government = fascism }
				if = {
					limit = { has_idea = fascist_assault_divisions }
					remove_ideas = fascist_assault_divisions
				}
				if = {
					limit = { has_idea = fascist_revolutionaries }
					remove_ideas = fascist_revolutionaries
				}
				if = {
					limit = { has_idea = fascism_defeated }
					remove_ideas = fascism_defeated
				}
			}
		}
		
	}
	
	on_coup_succeeded = {
		
	}
	
	#ROOT is winner #FROM gets annexed - This will also fire on_annex
	on_civil_war_end = {
		effect = {
			if = {
				limit = {
					has_country_flag = ideology_civil_war
				}
				country_event = { id = generic.11 days = 1 }
			}
		}
	}
	
	#used when puppeting in a peace conference
	#ROOT = nation being puppeted, FROM = overlord
	
	on_puppet = {
		
	}
	
	#used when puppeting through the occupied territories menu during peace time (or when releasing from non-core but owned territory, f.e. Britain releasing Egypt)
	#ROOT = nation being released, FROM = overlord
	
	on_release_as_puppet = {
		
	}
	
	#ROOT is winner #FROM gets annexed - For civil wars on_civil_war_end is also fired
	on_annex = {
		effect = {
			
		}
	}
	
	#Not run on a specific country.
	on_startup = {
		effect = {
			
		}
	}
	
	on_unit_leader_created = {
		effect = {
		}
	}
	
	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
	}
	
	on_unit_leader_level_up = {
		effect = {
			
		}
	}
	
	# From is owner country
	on_army_leader_daily = {
		effect = {
			if = {
				limit = {
					NOT = { FROM = { tag = DED } }
					check_variable = { random < 0.02 }
					NOT = { has_trait = sick }
					set_temp_variable = { temp = sum_unit_terrain_modifier@sickness_chance }
					divide_temp_variable = { temp = num_units }
					check_variable = { temp > 0.75 }
					NOT = { has_unit_leader_flag = recently_sick }
				}
				add_timed_unit_leader_trait = {
					trait = sick
					days = 30
				}
				unit_leader_event = { id = generic.17 }
			}
		}
	}
	
	# From is owner country
	on_army_leader_won_combat = {
		effect = {
			if = {
				limit = {
					set_temp_variable = { chance = 0.001 }
					set_temp_variable = { factor = 1.0 }
					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor }
					multiply_temp_variable = { chance = factor }
					check_variable = { random < chance }
					NOT = { has_trait = wounded }
				}
				add_timed_unit_leader_trait = {
					trait = wounded
					days = 90
				}
				unit_leader_event = { id = generic.18 }
			}
		}
	}
	
	# From is owner country
	on_army_leader_lost_combat = {
		effect = {
			if = {
				limit = {
					set_temp_variable = { chance = 0.005 }
					set_temp_variable = { factor = 1.0 }
					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor }
					multiply_temp_variable = { chance = factor }
					check_variable = { random < chance }
					NOT = { has_trait = wounded }
				}
				add_timed_unit_leader_trait = {
					trait = wounded
					days = 90
				}
				unit_leader_event = { id = generic.18 }
			}
		}
	}
	
	
	on_army_leader_promoted = {
		effect = {
			add_timed_unit_leader_trait = {
				trait = recently_promoted
				days = 100
			}
		}
	}
}

# Allows you to create your own dynamic keys
# to be called in localization.
# defined_text -> this is it, we're defining the text
# text -> a discrete entry that can be picked to display in loc.
# trigger -> determines if a text entry will be picked or not.
# (The triggers need to be valid for the scope the key is called in
# (eg Root or From.From).)
# localization_key -> points to the localization key
# that'll be used if trigger passes

defined_text = { # Country
	name = GetInDefenceOfX
	text = {
		trigger = {
			original_tag = EQC
			has_government = democratic
		}
		localization_key = EQC_in_defence_of_harmony
	}
	text = {
		trigger = {
			original_tag = EQC
			has_government = communism
		}
		localization_key = EQC_in_defence_of_communism
	}
	text = {
		trigger = {
			original_tag = EQC
			has_government = fascism
		}
		localization_key = EQC_in_defence_of_fascism
	}
	text = {
		localization_key = EQC_defence_of_outsiders
	}
}

defined_text = { # Country
	name = GetEQCMarineTechName
	text = {
		trigger = {
			original_tag = EQC
			OR = {
				is_subject_of = EQS
				has_completed_focus = EQC_strengthen_equestrian_ties
			}
			NOT = { has_government = communism }
		}
		localization_key = GetEQCMarineTechName_loyalist
	}
	text = {
		localization_key = GetEQCMarineTechName_free
	}
}

defined_text = { # Country
	name = GetEQCStratusSpringsName
	text = {
		trigger = {
			original_tag = EQC
			OR = {
				is_subject_of = EQS
				has_completed_focus = EQC_strengthen_equestrian_ties
			}
			NOT = { has_government = communism }
		}
		localization_key = GetEQCStratusSpringsName_loyalist
	}
	text = {
		localization_key = GetEQCStratusSpringsName_free
	}
}

defined_text = { # Country
	name = GetEQCCommonwelthDefenceName
	text = {
		trigger = {
			original_tag = EQC
			has_government = communism
			has_country_flag = equalist_eqc
		}
		localization_key = EQCCommonwelthDefenceName_equalist
	}
	text = {
		localization_key = EQCCommonwelthDefenceName_normal
	}
}

defined_text = { # Country
	name = GetEQCSubmarineFocusName
	text = {
		trigger = {
			original_tag = EQC
			OR = {
				is_subject_of = EQS
				has_completed_focus = EQC_strengthen_equestrian_ties
			}
			NOT = { has_government = communism }
		}
		localization_key = EQC_royal_new_marelander_submarine_service_loyalist
	}
	text = {
		localization_key = EQC_royal_new_marelander_submarine_service_free
	}
}

defined_text = { # Country
	name = GetEQCSunsetAcademyName
	text = {
		trigger = {
			original_tag = EQC
			OR = {
				is_subject_of = EQS
				has_completed_focus = EQC_strengthen_equestrian_ties
			}
			NOT = { has_government = communism }
		}
		localization_key = EQC_royal_military_academy_sunset_loyalist
	}
	text = {
		localization_key = EQC_royal_military_academy_sunset_free
	}
}

defined_text = { # Country
	name = GetEQCSunsetAcademyName
	text = {
		trigger = {
			original_tag = EQC
			OR = {
				is_subject_of = EQS
				has_completed_focus = EQC_strengthen_equestrian_ties
			}
			NOT = { has_government = communism }
		}
		localization_key = EQC_royal_military_academy_sunset_loyalist
	}
	text = {
		localization_key = EQC_royal_military_academy_sunset_free
	}
}

defined_text = { # Country
	name = GetEQCArtilleryName
	text = {
		trigger = {
			original_tag = EQC
			OR = {
				is_subject_of = EQS
				has_completed_focus = EQC_strengthen_equestrian_ties
			}
			NOT = { has_government = communism }
		}
		localization_key = EQC_new_mareland_artillery_loyalist
	}
	text = {
		localization_key = EQC_new_mareland_artillery_free
	}
}

defined_text = {
	name = GetEQCPartyOpinion
	text = {
		trigger = {
			check_variable = { EQC_selected_party = w }
		}
		localization_key = EQC_your_party_text
	}
	text = {
		localization_key = EQC_party_opinion_text
	}
}

defined_text = {
	name = GetEQCPartyOpinionTT
	text = {
		trigger = {
			check_variable = { EQC_selected_party = w }
		}
		localization_key = ""
	}
	text = {
		localization_key = EQC_total_party_opinion
	}
}
defined_text = {
	name = GetEQCPartyOpinionBreakdown
	text = {
		trigger = {
			if = {
				limit = { 
					OR = {
						NOT = { has_variable = temp_counter }
						check_variable = { temp_counter = -1 }
					}
				}
				set_temp_variable = { temp_counter = 0 }
			}
			else = {
				add_to_temp_variable = { temp_counter = 1 }
			}
			if = { 
				limit = { 
					check_variable = { 
						var = temp_counter 
						value = EQC_party_opinion_loc@var:w^num 
						compare = greater_than_or_equals
					} 
				}
				set_temp_variable = { temp_counter = -1 }	#Can't clear temp variables for some stupid reason
				always = no
			}
		}
		localization_key = EQC_party_opinion_breakdown_tt_line
	}
	text = {
		localization_key = ""
	}
}
defined_text = {
	name = GetEQCPartyOpinionBreakdownPopup
	text = {
		trigger = {
			if = {
				limit = { 
					OR = {
						NOT = { has_variable = temp_counter }
						check_variable = { temp_counter = -1 }
					}
				}
				set_temp_variable = { temp_counter = 0 }
			}
			else = {
				add_to_temp_variable = { temp_counter = 1 }
			}
			if = { 
				limit = { 
					check_variable = { 
						var = temp_counter 
						value = EQC_party_opinion_loc@var:EQC_popup_target^num 
						compare = greater_than_or_equals
					}
				}
				set_temp_variable = { temp_counter = -1 }	#Can't clear temp variables for some stupid reason
				always = no
			}
		}
		localization_key = EQC_party_opinion_breakdown_popup_tt_line
	}
	text = {
		localization_key = ""
	}
}
defined_text = {
	name = GetEQCCoalitionTT
	text = {
		trigger = {
			check_variable = { EQC_selected_party = w }
		}
		localization_key = EQC_coalition_own_party_tt
	}
	text = {
		trigger = {
			check_variable = { EQC_coalition_partner = w }
		}
		localization_key = EQC_break_coalition_tt
	}
	text = {
		trigger = {
			NOT = { has_variable = EQC_coalition_partner }
		}
		localization_key = EQC_form_coalition_tt
	}
	text = {
		localization_key = EQC_already_in_coalition_tt
	}
}
defined_text = {
	name = GetEQCParliamentPopupBody
	text = {
		trigger = {
			check_variable = { EQC_popup_header = token:break_coalition_with }
		}
		localization_key = EQC_break_coalition_desc
	}
	text = {
		localization_key = EQC_form_coalition_desc
	}
}
defined_text = {
	name = GetEQCPartyRelationsText
	text = {
		trigger = {
			check_variable = { EQC_popup_header = token:break_coalition_with }
		}
		localization_key = EQC_current_relations
	}
	text = {
		trigger = {
			check_variable = { EQC_party_opinion_array^EQC_coalition_party_index > 49 }
		}
		localization_key = EQC_party_will_accept
	}
	text = {
		localization_key = EQC_party_will_not_accept
	}
}
defined_text = {
	name = GetEQCPartyRelationsTTPrefix
	text = {
		trigger = {
			check_variable = { EQC_popup_header = token:form_coalition_with }
		}
		localization_key = EQC_party_opinion_popup_tt_prefix_form
	}
	text = {
		localization_key = ""
	}
}
defined_text = {
	name = GetEQCPartyRepList
	text = {
		trigger = {
			if = {
				limit = { 
					OR = {
						NOT = { has_variable = temp_counter2 }
					}
				}
				set_temp_variable = { temp_counter2 = 0 }
			}
			else = {
				add_to_temp_variable = { temp_counter2 = 1 }
			}
			set_temp_variable = { temp_token = EQC_party_token_array^temp_counter2 }
			if = { 
				limit = { 
					check_variable = { 
						var = temp_counter2 
						value = EQC_party_token_array^num 
						compare = greater_than_or_equals
					}
				}
				always = no
			}
		}
		localization_key = EQC_parliament_rep_parties_tt_line
	}
	text = {
		localization_key = ""
	}
}
defined_text = {
	name = GetEQCPartySupportList
	text = {
		trigger = {
			if = {
				limit = { 
					OR = {
						NOT = { has_variable = temp_counter2 }
					}
				}
				set_temp_variable = { temp_counter2 = 0 }
			}
			else = {
				add_to_temp_variable = { temp_counter2 = 1 }
			}
			set_temp_variable = { temp_token = EQC_party_token_array^temp_counter2 }
			if = { 
				limit = { 
					check_variable = { 
						var = temp_counter2 
						value = EQC_party_token_array^num 
						compare = greater_than_or_equals
					}
				}
				always = no
			}
		}
		localization_key = EQC_parliament_support_parties_tt_line
	}
	text = {
		localization_key = ""
	}
}
# Allows you to create your own dynamic keys
# to be called in localization.
# defined_text -> this is it, we're defining the text
# text -> a discrete entry that can be picked to display in loc.
# trigger -> determines if a text entry will be picked or not.
# (The triggers need to be valid for the scope the key is called in
# (eg Root or From.From).)
# localization_key -> points to the localization key
# that'll be used if trigger passes

defined_text = { # Country
	name = GetEvilPrincessFocusName
	text = {
		trigger = {
			NOT = { has_country_flag = VED_Princess_Died }
		}
		localization_key = VED_Evil_Princess_pr
	}
	text = {
		trigger = {
			has_country_flag = VED_Princess_Died
		}
		localization_key = VED_Evil_Princess_od
	}
}

defined_text = { # Country
	name = GetEvilPrincessFocusDesc
	text = {
		trigger = {
			NOT = { has_country_flag = VED_Princess_Died }
		}
		localization_key = VED_Evil_Princess_pr_desc
	}
	text = {
		trigger = {
			has_country_flag = VED_Princess_Died
		}
		localization_key = VED_Evil_Princess_od_desc
	}
}

defined_text = {
	name = DebugInterfaceGetCurrentEntry
	text = {
		trigger = {
			meta_trigger = {
				text = {
					set_temp_variable = { t_displayed_entry = token:VED_diary_log_entry_[QUEST_ID]_[ENTRY_ID]_text}
				}
				QUEST_ID = "[?VED_debug_interface_diary_log_selected_quest]"
				ENTRY_ID = "[?VED_debug_interface_diary_log_selected_entry]"
			}
		}
		localization_key = VED_debug_interface_diary_entry_current_entry
	}
}
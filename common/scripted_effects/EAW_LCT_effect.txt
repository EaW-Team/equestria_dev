
LCT_DIET_initiate = {
	clear_array = LCT_DIET_seats_array
	
	add_to_array = { LCT_DIET_seats_array = 40 }
	add_to_array = { LCT_DIET_seats_array = 67 }
	add_to_array = { LCT_DIET_seats_array = 26 }
	add_to_array = { LCT_DIET_seats_array = 27 }
	
	set_variable = { LCT_UMJ_leader_status = token:LCT_UMJ_Leader_Deirdra_Skye }
	set_variable = { LCT_UMJ_leader_status_full = token:LCT_UMJ_Leader_Deirdra_Skye_Full }
	set_variable = { LCT_TJS_leader_status = token:LCT_TJS_Leader_Springtime_Frost }
	set_variable = { LCT_TJS_leader_status_full = token:LCT_TJS_Leader_Springtime_Frost_Full }
	set_variable = { LCT_PD_leader_status = token:LCT_PD_Leader_Wild_Tree }
	set_variable = { LCT_PD_leader_status_full = token:LCT_PD_Leader_Wild_Tree_Full }
	
	clear_array = LCT_DIET_seats_display_array
	
	resize_array = { LCT_DIET_seats_display_array = 40 value = 0 }
	resize_array = { LCT_DIET_seats_display_array = 107 value = 1 }
	resize_array = { LCT_DIET_seats_display_array = 133 value = 2 }
	resize_array = { LCT_DIET_seats_display_array = 160 value = 3 }
	
	set_country_flag = LCT_Diet_Visible
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
}

LCT_DIET_kill = {
	clear_array = LCT_DIET_seats_array
	clear_array = LCT_DIET_seats_display_array
	clr_country_flag = LCT_Diet_Visible
}

#### Indexes
# 0 = TBD
# 1 = LDP
# 2 = CTT
# 3 = Independents

## How to use:
# set_temp_variable = { temp_faction = 1 }
# set_temp_variable = { temp_seats = 10 }
# LCT_DIET_change_seats = yes

## This will change the LDP's (1) seat count by 10, deducting it from other factions.
## The scripted effect will generate its own tooltip so don't worry about that.

LCT_DIET_change_seats = {
	
	## Normalize values
	set_temp_variable = { future_value = LCT_DIET_seats_array^temp_faction }
	add_to_temp_variable = { future_value = temp_seats }
	if = {
		limit = {
			check_variable = { future_value > 160 }
		}
		set_temp_variable = { min_temp_seats = future_value }
		subtract_from_temp_variable = { min_temp_seats = 160 }
		subtract_from_temp_variable = { temp_seats = min_temp_seats }
	}
	else_if = {
		limit = {
			check_variable = { future_value < 0 }
		}
		subtract_from_temp_variable = { temp_seats = future_value }
	}
	
	## Tooltip generation + seperating positive/negative
	if = {
		limit = {
			check_variable = { temp_seats > 0 }
		}
		set_temp_variable = { positive_negative = 1 }
		custom_effect_tooltip = LCT_DIET_change_seats_positive_tt
	}
	else = {
		set_temp_variable = { positive_negative = -1 }
		multiply_temp_variable = { temp_seats = -1 }
		custom_effect_tooltip = LCT_DIET_change_seats_negative_tt
	}
	
	## Subtracting seats from other factions based on:
	#	if positive: more seats means you are more likely to be subtracted from
	#	if negative: less seats means you are more likely to be added upon
	for_loop_effect = {
		start = 0
		end = temp_seats

		for_each_loop = {
			array = LCT_DIET_seats_array
			value = x
			index = y
			
			if = {
				limit = {
					check_variable = { positive_negative = 1 }
				}
				add_to_temp_array = { chance = x }
			}
			else = {
				set_temp_variable = { chance_n = 160 }
				subtract_from_temp_variable = { chance_n = x }
				add_to_temp_array = { chance = chance_n }
			}

			if = {
				limit = {
					OR = {
						check_variable = { temp_faction = y }
						AND = {
							check_variable = { positive_negative = 1 }
							check_variable = { x = 0 }
						}
					}
				}
				set_temp_variable = { chance^y = 0 }
			}
		}
		
		random_list = {
			chance^0 = {
				subtract_from_variable = { LCT_DIET_seats_array^0 = positive_negative }
			}
			chance^1 = {
				subtract_from_variable = { LCT_DIET_seats_array^1 = positive_negative }
			}
			chance^2 = {
				subtract_from_variable = { LCT_DIET_seats_array^2 = positive_negative }
			}
			chance^3 = {
				subtract_from_variable = { LCT_DIET_seats_array^3 = positive_negative }
			}
		}
		clear_temp_array = chance
	}
	multiply_temp_variable = { temp_seats = positive_negative }
	add_to_variable = { LCT_DIET_seats_array^temp_faction = temp_seats }
	
	LCT_DIET_re_render = yes
	
	clear_variable = temp_seats
	clear_variable = temp_faction
}

## How to use:
# add_to_temp_array = { bill_support_ratio = 0.8 } # This is for the UMJ
# add_to_temp_array = { bill_support_ratio = 0.3 } # This is for the TJS
# add_to_temp_array = { bill_support_ratio = 0.6 } # This is for the PD
# add_to_temp_array = { bill_support_ratio = 0.5 } # This is for the Independents
# LCT_initiate_new_bill = yes
# hidden_effect = {
# 	 activate_mission = LCT_Bill_Mandatory_Cheeseburgers
# }

LCT_initiate_new_bill = {
	custom_effect_tooltip = LCT_initiate_new_bill_tt

	for_each_loop = {
		array = LCT_DIET_seats_array
		add_to_array = { LCT_DIET_support = v }
		multiply_variable = { LCT_DIET_support^i = bill_support_ratio^i }
		round_variable = LCT_DIET_support^i
	}
	set_country_flag = LCT_bill_on_the_floor
	LCT_re_calculate_support_for_bill = yes
}

## How to use:
# set_temp_variable = { temp_faction = 1 }
# set_temp_variable = { temp_support = 10 }
# LCT_change_support_for_bill = yes

## This will change the TJS's (1) support for the current bill by 10, maxing out at the TJS's total seat count.
## The scripted effect will generate its own tooltip so don't worry about that.

LCT_change_support_for_bill = {
	set_temp_variable = { hard_cap = LCT_DIET_seats_array^temp_faction }
	set_temp_variable = { future_value = LCT_DIET_support^temp_faction }
	add_to_temp_variable = { future_value = temp_support }
	
	if = {
		limit = {
			check_variable = { future_value > hard_cap }
		}
		set_temp_variable = { normalizer = future_value }
		subtract_from_temp_variable = { normalizer = hard_cap }
		subtract_from_temp_variable = { temp_support = normalizer }
	}

	custom_effect_tooltip = LCT_change_support_for_bill_tt

	add_to_variable = { LCT_DIET_support^temp_faction = temp_support }
	LCT_re_calculate_support_for_bill = yes
	
	clear_variable = temp_faction
	clear_variable = temp_support
}

LCT_change_UMJ_leader = {
	set_variable = { LCT_UMJ_leader_status = temp_new_leader }
	meta_effect = {
		text = {
			set_variable = { LCT_UMJ_leader_status_full = token:[LEADER]_Full }
		}
		LEADER = "[?temp_new_leader.GetTokenKey]"
	}
	custom_effect_tooltip = LCT_UMJ_change_leader_CET
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
}

LCT_change_TJS_leader = {
	set_variable = { LCT_TJS_leader_status = temp_new_leader }
	meta_effect = {
		text = {
			set_variable = { LCT_TJS_leader_status_full = token:[LEADER]_Full }
		}
		LEADER = "[?temp_new_leader.GetTokenKey]"
	}
	custom_effect_tooltip = LCT_TJS_change_leader_CET
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
}

LCT_change_PD_leader = {
	set_variable = { LCT_PD_leader_status = temp_new_leader }
	meta_effect = {
		text = {
			set_variable = { LCT_PD_leader_status_full = token:[LEADER]_Full }
		}
		LEADER = "[?temp_new_leader.GetTokenKey]"
	}
	custom_effect_tooltip = LCT_PD_change_leader_CET
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
}

### BACKEND STUFF, don't worry about these

LCT_DIET_re_render = {
	set_temp_variable = { seats_1 = LCT_DIET_seats_array^0 }
	add_to_temp_variable = { seats_1 = LCT_DIET_seats_array^1 }

	set_temp_variable = { seats_2 = seats_1 }
	add_to_temp_variable = { seats_2 = LCT_DIET_seats_array^2 }

	set_temp_variable = { seats_3 = seats_2 }
	add_to_temp_variable = { seats_3 = LCT_DIET_seats_array^3 }
	
	clear_array = LCT_DIET_seats_display_array
	
	resize_array = { LCT_DIET_seats_display_array = LCT_DIET_seats_array^0 value = 0 }
	resize_array = { LCT_DIET_seats_display_array = seats_1 value = 1 }
	resize_array = { LCT_DIET_seats_display_array = seats_2 value = 2 }
	resize_array = { LCT_DIET_seats_display_array = seats_3 value = 3 }
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
	
	if = {
		limit = {
			has_country_flag = LCT_bill_on_the_floor
		}
		LCT_re_calculate_support_for_bill = yes
	}
	
	log = "LCT: Re render GUI"
	log = "LCT_DIET_seats_array^0 = [?LCT_DIET_seats_array^0]"
	log = "LCT_DIET_seats_array^1 = [?LCT_DIET_seats_array^1]"
	log = "LCT_DIET_seats_array^2 = [?LCT_DIET_seats_array^2]"
	log = "LCT_DIET_seats_array^3 = [?LCT_DIET_seats_array^3]"
	log = "TOTAL = [?LCT_DIET_seats_display_array^num]"
}

LCT_re_calculate_support_for_bill = {
	clear_variable = LCT_Current_Support_for_Bill
	for_each_loop = {
		array = LCT_DIET_support

		clamp_variable = { var = LCT_DIET_support^i min = 0 max = LCT_DIET_seats_array^i }
		add_to_variable = { LCT_Current_Support_for_Bill = v }
	}
	
	resize_array = { LCT_DIET_is_seat_supporting = LCT_DIET_support^0 value = 1 }
	resize_array = { LCT_DIET_is_seat_supporting = LCT_DIET_seats_array^0 value = 0 }
	
	set_temp_variable = { supporting_1 = LCT_DIET_is_seat_supporting^num }
	add_to_temp_variable = { supporting_1 = LCT_DIET_support^1 }
	resize_array = { LCT_DIET_is_seat_supporting = supporting_1 value = 1 }
	subtract_from_temp_variable = { supporting_1 = LCT_DIET_support^1 }
	add_to_temp_variable = { supporting_1 = LCT_DIET_seats_array^1 }
	resize_array = { LCT_DIET_is_seat_supporting = supporting_1 value = 0 }
	
	set_temp_variable = { supporting_2 = LCT_DIET_is_seat_supporting^num }
	add_to_temp_variable = { supporting_2 = LCT_DIET_support^2 }
	resize_array = { LCT_DIET_is_seat_supporting = supporting_2 value = 1 }
	subtract_from_temp_variable = { supporting_2 = LCT_DIET_support^2 }
	add_to_temp_variable = { supporting_2 = LCT_DIET_seats_array^2 }
	resize_array = { LCT_DIET_is_seat_supporting = supporting_2 value = 0 }
	
	set_temp_variable = { supporting_3 = LCT_DIET_is_seat_supporting^num }
	add_to_temp_variable = { supporting_3 = LCT_DIET_support^3 }
	resize_array = { LCT_DIET_is_seat_supporting = supporting_3 value = 1 }
	subtract_from_temp_variable = { supporting_3 = LCT_DIET_support^3 }
	add_to_temp_variable = { supporting_3 = LCT_DIET_seats_array^3 }
	resize_array = { LCT_DIET_is_seat_supporting = supporting_3 value = 0 }
	
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
}

LCT_clean_up_bill = {
	clear_array = LCT_DIET_support
	clear_array = LCT_DIET_is_seat_supporting
	clear_variable = LCT_Current_Support_for_Bill
	clr_country_flag = LCT_bill_on_the_floor
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
}

# Demands thingy #

LCT_do_demand_random = {
	#log = "[?LCT_active_demands_var]"
	if = {
		limit = {
			check_variable = {
				var = LCT_active_demands_var
				value = 2
				compare = less_than
			}
		}
		random = {
			chance = 33
			LCT_select_demand = yes
		}
	}
	else = {
		log = "Nothing"
	}
}

LCT_select_demand = {

	#Reset Chance To Happen Variables
	set_variable = { LCT_fort_build_chance_var = 0 }
	set_variable = { LCT_raise_rhetoric_chance_var = 0 }
	set_variable = { LCT_diplomacy_chance_var = 0 }
	set_variable = { LCT_artillery_stockpile_chance_var = 0 }
	set_variable = { LCT_build_factory_chance_var = 0 }
	set_variable = { LCT_war_strategy_chance_var = 0 }
	
	#Fort Building Demand
	if = {
		limit = {
			NOT = {
				has_country_flag = LCT_construction_demand_in_progress
			}
		}
		random_owned_state = {
			limit = {
				NOT = {
					all_neighbor_state  = {
						is_owned_by = LCT
					}
					has_state_flag = LCT_fortified_border
				}
			}
			set_variable = { ROOT.LCT_bordering_state_target_var = THIS.id }
			set_variable = { ROOT.LCT_fort_build_chance_var = 10 }
		}
	}
	
	#Raise Rhetoric Demand
	if = {
		limit = {
			OR = {
				AND = {
					check_variable = {
						var = lct_unity_rhetoric_var
						value = 0.2
						compare = less_than
					}
					has_country_flag = LCT_unlocked_stability_rhetoric
				}
				AND = {
					check_variable = {
						var = lct_productivity_rhetoric_var
						value = 0.2
						compare = less_than
					}
					has_country_flag = LCT_Propaganda_Campaign_Visible
				}
				AND = {
					check_variable = {
						var = lct_war_support_rhetoric_var
						value = 0.2
						compare = less_than
					}
					has_country_flag = LCT_unlocked_war_support_rhetoric
				}
			}
			NOT = {
				has_country_flag = LCT_propaganda_demand_in_progress
			}
		}
		set_variable = { LCT_raise_rhetoric_chance_var = 10 }
	}
	
	#Diplomacy
	if = {
		limit = {
			NOT = {
				has_country_flag = LCT_diplomacy_demand_in_progress
			}
		}
		random_other_country = {
			limit = {
				exists = yes
				is_pony_race = yes
				has_opinion = {
					target = ROOT
					value < 16
				}
				has_opinion = {
					target = ROOT
					value > -51
				}
				NOT = {
					has_war_with = ROOT
					has_government = communism
					tag = BAR
					tag = NTR
				}
				is_zebrican_continent_country = no
			}
			set_variable = { ROOT.LCT_diplomacy_target_var = THIS.id }
			set_variable = { ROOT.LCT_diplomacy_chance_var = 10 }
		}
	}
	
	#Artillery Stockpile
	if = {
		limit = {
			has_equipment = {
				artillery_equipment < 1000
			}
			NOT = {
				has_country_flag = LCT_artillery_demand_in_progress
			}
		}
		set_variable = { LCT_artillery_stockpile_chance_var = 10 }
	}
	
	#Build Military Factories
	if = {
		limit = {
			any_owned_state = {
				free_building_slots = {
					building = arms_factory
					size > 0
					include_locked = no
				}
			}
			NOT = {
				has_country_flag = LCT_construction_demand_in_progress
			}
		}
		if = {
			limit = {
				has_country_flag = LCT_glory_awaits
			}
			set_variable_to_random = {
				var = num_new_factories
				min = 2
				max = 3
				integer = yes
			}
		}
		else = {
			set_variable_to_random = {
				var = num_new_factories
				min = 1
				max = 2
				integer = yes
			}
		}
		set_variable = { LCT_target_factories_num = num_of_military_factories }
		add_to_variable = { LCT_target_factories_num = num_new_factories }
		set_variable = { LCT_build_factory_chance_var = 10 }
	}
	
	#War strategy
	random_state = {
		limit = {
			any_neighbor_state = {
				NOT = {
					is_controlled_by = LCT
				}
				any_neighbor_state = {
					is_controlled_by = LCT
				}
			}
			controller = {
				has_war_with = LCT
			}
			NOT = {
				LCT = {
					has_country_flag = LCT_strategy_demand_in_progress
				}
			}
		}
		set_variable = { ROOT.LCT_war_strategy_chance_var = 10 }
		set_variable = { ROOT.LCT_war_target_state_var = THIS.id }
	}
	
	#log = "New Factories: [?num_new_factories]"
	#log = "[?LCT_fort_build_chance_var]"
	#log = "[?LCT_raise_rhetoric_chance_var]"
	#log = "[?LCT_diplomacy_chance_var]"
	#log = "[?LCT_artillery_stockpile_chance_var]"
	#log = "[?LCT_build_factory_chance_var]"
	#log = "[?LCT_war_strategy_chance_var]"
	
	#set_variable = { LCT_fort_build_chance_var = 0 }
	#set_variable = { LCT_raise_rhetoric_chance_var = 0 }
	#set_variable = { LCT_diplomacy_chance_var = 0 }
	#set_variable = { LCT_artillery_stockpile_chance_var = 0 }
	#set_variable = { LCT_build_factory_chance_var = 0 }
	#set_variable = { LCT_war_strategy_chance_var = 0 }
	
	#Random Mission List
	random_list = {
		LCT_fort_build_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.1
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_construction_demand_in_progress
			add_to_variable = { LCT_active_demands_var = 1 }
			log = "Build Forts"
		}
		LCT_raise_rhetoric_chance_var = {
			LCT_raise_rhetoric_demand_selection = yes
			set_country_flag = LCT_propaganda_demand_in_progress
			add_to_variable = { LCT_active_demands_var = 1 }
			log = "Raise Rhetoric"
		}
		LCT_diplomacy_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.5
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_diplomacy_demand_in_progress
			add_to_variable = { LCT_active_demands_var = 1 }
			log = "Diplomacy"
		}
		LCT_artillery_stockpile_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.12
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_artillery_demand_in_progress
			add_to_variable = { LCT_active_demands_var = 1 }
			log = "Artillery"
		}
		LCT_build_factory_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.13
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_construction_demand_in_progress
			add_to_variable = { LCT_active_demands_var = 1 }
			log = "Build Factories"
		}
		LCT_war_strategy_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.14
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_strategy_demand_in_progress
			log = "Take Territory"
		}
	}
}

LCT_raise_rhetoric_demand_selection = {
	set_temp_variable = { LCT_unity_chance_var = 0 }
	set_temp_variable = { LCT_productivity_chance_var = 0 }
	set_temp_variable = { LCT_war_support_chance_var = 0 }
	
	if = {
		limit = {
			check_variable = {
				var = lct_unity_rhetoric_var
				value = 0.2
				compare = less_than
			}
			has_country_flag = LCT_unlocked_stability_rhetoric
		}
		set_temp_variable = { LCT_unity_chance_var = 10 }
	}
	if = {
		limit = {
			check_variable = {
				var = lct_productivity_rhetoric_var
				value = 0.2
				compare = less_than
			}
			has_country_flag = LCT_Propaganda_Campaign_Visible
		}
		set_temp_variable = { LCT_productivity_chance_var = 10 }
	}
	if = {
		limit = {
			check_variable = {
				var = lct_war_support_rhetoric_var
				value = 0.2
				compare = less_than
			}
			has_country_flag = LCT_unlocked_war_support_rhetoric
		}
		set_temp_variable = { LCT_war_support_chance_var = 10 }
	}
	
	random_list = {
		LCT_unity_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.2
				days = 5
				random_hours = 24
				random_days = 13
			}
		}
		LCT_productivity_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.3
				days = 5
				random_hours = 24
				random_days = 13
			}
		}
		LCT_war_support_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.4
				days = 5
				random_hours = 24
				random_days = 13
			}
		}
	}
}

###Resistance System###

LCT_resistance_initiate = {
	set_country_flag = LCT_resistance_active
	
	set_variable = { LCT_global_government_support_growth = 0 }
	set_variable = { LCT_global_harmonist_support_growth = 0 }
	set_variable = { LCT_global_communist_support_growth = 0 }
	set_variable = { LCT_global_non_aligned_support_growth = 0 }
	set_variable = { LCT_global_supremacist_support_growth = 0 }

	add_to_array = { LCT_resistance_map_array = 387 }
	add_to_array = { LCT_resistance_map_array_id = 387.id }
	add_to_array = { LCT_resistance_map_array_x = 209 }
	add_to_array = { LCT_resistance_map_array_y = 98 }

	add_to_array = { LCT_resistance_map_array = 499 }
	add_to_array = { LCT_resistance_map_array_id = 499.id }
	add_to_array = { LCT_resistance_map_array_x = 177 }
	add_to_array = { LCT_resistance_map_array_y = 135 }

	add_to_array = { LCT_resistance_map_array = 505 }
	add_to_array = { LCT_resistance_map_array_id = 505.id }
	add_to_array = { LCT_resistance_map_array_x = 62 }
	add_to_array = { LCT_resistance_map_array_y = 161 }

	add_to_array = { LCT_resistance_map_array = 537 }
	add_to_array = { LCT_resistance_map_array_id = 537.id }
	add_to_array = { LCT_resistance_map_array_x = 78 }
	add_to_array = { LCT_resistance_map_array_y = 77 }

	add_to_array = { LCT_resistance_map_array = 540 }
	add_to_array = { LCT_resistance_map_array_id = 540.id }
	add_to_array = { LCT_resistance_map_array_x = 44 }
	add_to_array = { LCT_resistance_map_array_y = 126 }

	add_to_array = { LCT_resistance_map_array = 541 }
	add_to_array = { LCT_resistance_map_array_id = 541.id }
	add_to_array = { LCT_resistance_map_array_x = 143 }
	add_to_array = { LCT_resistance_map_array_y = 92 }

	add_to_array = { LCT_resistance_map_array = 550 }
	add_to_array = { LCT_resistance_map_array_id = 550.id }
	add_to_array = { LCT_resistance_map_array_x = 257 }
	add_to_array = { LCT_resistance_map_array_y = 96 }

	add_to_array = { LCT_resistance_map_array = 551 }
	add_to_array = { LCT_resistance_map_array_id = 551.id }
	add_to_array = { LCT_resistance_map_array_x = 219 }
	add_to_array = { LCT_resistance_map_array_y = 140 }

	add_to_array = { LCT_resistance_map_array = 552 }
	add_to_array = { LCT_resistance_map_array_id = 552.id }
	add_to_array = { LCT_resistance_map_array_x = 84 }
	add_to_array = { LCT_resistance_map_array_y = 113 }

	add_to_array = { LCT_resistance_map_array = 553 }
	add_to_array = { LCT_resistance_map_array_id = 553.id }
	add_to_array = { LCT_resistance_map_array_x = 9 }
	add_to_array = { LCT_resistance_map_array_y = 65 }

	add_to_array = { LCT_resistance_map_array = 560 }
	add_to_array = { LCT_resistance_map_array_id = 560.id }
	add_to_array = { LCT_resistance_map_array_x = 138 }
	add_to_array = { LCT_resistance_map_array_y = 134 }

	add_to_array = { LCT_resistance_map_array = 633 }
	add_to_array = { LCT_resistance_map_array_id = 633.id }
	add_to_array = { LCT_resistance_map_array_x = 5 }
	add_to_array = { LCT_resistance_map_array_y = 5 }

	add_to_array = { LCT_resistance_map_array = 634 }
	add_to_array = { LCT_resistance_map_array_id = 634.id }
	add_to_array = { LCT_resistance_map_array_x = 68 }
	add_to_array = { LCT_resistance_map_array_y = 15 }
	
	set_variable = { LCT_selected_resistance_state = 387 }
	
	add_to_array = { LCT_resistance_dummy_array = 0 }
	
	set_variable = { LCT_tab_resistance_bg = 2 }
	
	387 = { #Jezeragrad
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 58 } #Government
			add_to_array = { LCT_resistance_control = 16 } #Harmonists
			add_to_array = { LCT_resistance_control = 14 } #Non-Aligned
			add_to_array = { LCT_resistance_control = 12 } #Communists
			add_to_array = { LCT_resistance_control = 0 }  #Supremacists
		}
		else = {
			add_to_array = { LCT_resistance_control = 58 }
			add_to_array = { LCT_resistance_control = 16 }
			add_to_array = { LCT_resistance_control = 14 }
			add_to_array = { LCT_resistance_control = 12 }
		}
	}
	499 = { #Bucka
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 13 }
			add_to_array = { LCT_resistance_control = 7 }
			add_to_array = { LCT_resistance_control = 62 }
			add_to_array = { LCT_resistance_control = 18 }
			add_to_array = { LCT_resistance_control = 0 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 13 }
			add_to_array = { LCT_resistance_control = 7 }
			add_to_array = { LCT_resistance_control = 62 }
			add_to_array = { LCT_resistance_control = 18 }
		}
	}
	505 = { #Longbowgriff
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 3 }
			add_to_array = { LCT_resistance_control = 22 }
			add_to_array = { LCT_resistance_control = 5 }
			add_to_array = { LCT_resistance_control = 57 }
			add_to_array = { LCT_resistance_control = 13 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 6 }
			add_to_array = { LCT_resistance_control = 23 }
			add_to_array = { LCT_resistance_control = 8 }
			add_to_array = { LCT_resistance_control = 63 }
		}
	}
	537 = { #Hellquill
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 33 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 18 }
			add_to_array = { LCT_resistance_control = 11 }
			add_to_array = { LCT_resistance_control = 26 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 39 }
			add_to_array = { LCT_resistance_control = 20 }
			add_to_array = { LCT_resistance_control = 28 }
			add_to_array = { LCT_resistance_control = 13 }
		}
	}
	540 = { #Panacea
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 2 }
			add_to_array = { LCT_resistance_control = 18 }
			add_to_array = { LCT_resistance_control = 13 }
			add_to_array = { LCT_resistance_control = 53 }
			add_to_array = { LCT_resistance_control = 14 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 6 }
			add_to_array = { LCT_resistance_control = 20 }
			add_to_array = { LCT_resistance_control = 15 }
			add_to_array = { LCT_resistance_control = 59 }
		}
	}
	541 = { #Coltsovo
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 36 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 38 }
			add_to_array = { LCT_resistance_control = 14 }
			add_to_array = { LCT_resistance_control = 0 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 38 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 36 }
			add_to_array = { LCT_resistance_control = 14 }
		}
	}
	550 = { #Svetazemlja
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 8 }
			add_to_array = { LCT_resistance_control = 64 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 16 }
			add_to_array = { LCT_resistance_control = 0 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 8 }
			add_to_array = { LCT_resistance_control = 64 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 16 }
		}
	}
	551 = { #Shayrmia
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 36 }
			add_to_array = { LCT_resistance_control = 24 }
			add_to_array = { LCT_resistance_control = 28 }
			add_to_array = { LCT_resistance_control = 0 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 36 }
			add_to_array = { LCT_resistance_control = 24 }
			add_to_array = { LCT_resistance_control = 28 }
		}
	}
	552 = { #Swordsson
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 28 }
			add_to_array = { LCT_resistance_control = 13 }
			add_to_array = { LCT_resistance_control = 4 }
			add_to_array = { LCT_resistance_control = 14 }
			add_to_array = { LCT_resistance_control = 41 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 24 }
			add_to_array = { LCT_resistance_control = 23 }
			add_to_array = { LCT_resistance_control = 28 }
			add_to_array = { LCT_resistance_control = 25 }
		}
	}
	553 = { #Lone Domain
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 13 }
			add_to_array = { LCT_resistance_control = 6 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 15 }
			add_to_array = { LCT_resistance_control = 54 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 24 }
			add_to_array = { LCT_resistance_control = 13 }
			add_to_array = { LCT_resistance_control = 26 }
			add_to_array = { LCT_resistance_control = 37 }
		}
	}
	560 = { #Coltubar
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 14 }
			add_to_array = { LCT_resistance_control = 18 }
			add_to_array = { LCT_resistance_control = 51 }
			add_to_array = { LCT_resistance_control = 17 }
			add_to_array = { LCT_resistance_control = 0 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 14 }
			add_to_array = { LCT_resistance_control = 18 }
			add_to_array = { LCT_resistance_control = 51 }
			add_to_array = { LCT_resistance_control = 17 }
		}
	}
	633 = { #Brightcreeks
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 3 }
			add_to_array = { LCT_resistance_control = 5 }
			add_to_array = { LCT_resistance_control = 24 }
			add_to_array = { LCT_resistance_control = 17 }
			add_to_array = { LCT_resistance_control = 51 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 8 }
			add_to_array = { LCT_resistance_control = 18 }
			add_to_array = { LCT_resistance_control = 43 }
			add_to_array = { LCT_resistance_control = 31 }
		}
	}
	634 = { #Sondersune
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 4 }
			add_to_array = { LCT_resistance_control = 31 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 7 }
			add_to_array = { LCT_resistance_control = 46 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 7 }
			add_to_array = { LCT_resistance_control = 37 }
			add_to_array = { LCT_resistance_control = 28 }
			add_to_array = { LCT_resistance_control = 28 }
		}
	}
	
	set_variable = { LCT_resistance_relations_1_2 = 40 }
	set_variable = { LCT_resistance_relations_1_3 = 80 }
	set_variable = { LCT_resistance_relations_2_3 = 10 }
	
	if = {
		limit = {
			has_country_flag = LCT_resistance_with_reformisten
		}
		set_variable = { LCT_resistance_relations_1_4 = 0 }
		set_variable = { LCT_resistance_relations_2_4 = 15 }
		set_variable = { LCT_resistance_relations_3_4 = 0 }
	}
	
	for_each_loop = {
		array = LCT_resistance_map_array
		var:v = {
			find_highest_in_array = {
				array = LCT_resistance_control
				index = most_powerful_index
			}
			set_variable = { LCT_resistance_control_ruling_id = most_powerful_index }
			meta_effect = {
				text = {
					set_variable = { LCT_resistance_control_ruling = token:LCT_resistance_group_[GROUP] }
				}
				GROUP = "[?most_powerful_index]"
			}
		}
	}
	
	LCT_resistance_update_gui = yes
	
	for_each_scope_loop = {
		array = LCT_resistance_map_array_id
		set_variable = { LCT_government_support_growth = 0 }
		set_variable = { LCT_harmonist_support_growth = 0 }
		set_variable = { LCT_communist_support_growth = 0 }
		set_variable = { LCT_non_aligned_support_growth = 0 }
		set_variable = { LCT_supremacist_support_growth = 0 }
	}
}

LCT_resistance_change_mp = {
	add_to_variable = { LCT_military_police = temp_mp }
	custom_effect_tooltip = LCT_resistance_mp_CET
	clamp_variable = { var = LCT_military_police min = 0 }
	add_to_variable = { LCT_resistance_dirty = 0.01 }
}

# Accepted values:
#	temp_state: State ID
#	temp_group:	ID of group
#		- 0 -> The Government
#		- 1 -> PPS (Harmonites)
#		- 2 -> SSO (Non-aligned)
#		- 3 -> JIS (Communist)
#		- 4 -> UGS (Supremacists)
#	temp_value: Change of control value
LCT_resistance_change_control = {
	random_scope_in_array = {
	
		array = LCT_resistance_map_array	#Find temp_state in the array
		limit = { state = temp_state }
		
		if = {
			limit = {
				NOT = {
					AND = {
						check_variable = { temp_group = 1 }
						PREV = { has_country_flag = LCT_harmony_defeated }
					}
					AND = {
						check_variable = { temp_group = 2 }
						PREV = { has_country_flag = LCT_neutrality_defeated }
					}
					AND = {
						check_variable = { temp_group = 3 }
						PREV = { has_country_flag = LCT_communism_defeated }
					}
					AND = {
						check_variable = { temp_group = 4 }
						PREV = { has_country_flag = LCT_supremacy_defeated }
					}
				}
			}
			
			add_to_variable = { LCT_resistance_control^temp_group = temp_value }	#Add temp_value to the resistance level of temp_group
			
			clamp_variable = { var = LCT_resistance_control^temp_group min = 0 max = 100 }	#Clamp resistance value between 0 and 100
			
			### Create tooltip ###
			meta_effect = {
				text = {
					set_temp_variable = { temp_group_token = token:LCT_resistance_group_[GROUP] } # Going to hell for this
					custom_effect_tooltip = LCT_resistance_change_control_CET
				}
				GROUP = "[?temp_group]"
			}
			###
			
			LCT_resistance_calculate =  yes
		
		}
	}
}

# Accepted values:
#	temp_group_1 and temp_group_2: ID of group, smaller id comes first.
#		- 1 -> PPS (Harmonites)
#		- 2 -> SSO (Non-aligned)
#		- 3 -> JIS (Communist)
#		- 4 -> UGS (Supremacists)
#	temp_relations_change: Change of relations value
LCT_resistance_change_relations = {
	meta_effect = {
		text = {
			set_temp_variable = { temp_group_1_token = token:LCT_resistance_group_short_[GROUP1] }
			set_temp_variable = { temp_group_2_token = token:LCT_resistance_group_short_[GROUP2] }
			custom_effect_tooltip = LCT_resistance_change_relations_CET
			add_to_variable = { LCT_resistance_relations_[GROUP1]_[GROUP2] = temp_relations_change }
			clamp_variable = { var = LCT_resistance_relations_[GROUP1]_[GROUP2] min = 0 max = 100 }
		}
		GROUP1 = "[?temp_group_1]"
		GROUP2 = "[?temp_group_2]"
	}
	add_to_variable = { LCT_resistance_dirty = 0.01 }
}

LCT_resistance_calculate = {
	set_temp_variable = { total_value_check = 100 }	
	
	subtract_from_temp_variable = { total_value_check = LCT_resistance_control^temp_group }	#Set total_value_check to 100 - temp_group resistance value
	
	set_temp_variable = { total = 0 }
	
	for_each_loop = {	#Loop over all other resistance groups in state
		array = LCT_resistance_control
		index = o
		value = b
		if = {
			limit = {
				NOT = {
					check_variable = { temp_group = o }
					AND = {
						check_variable = { o = 1 }
						has_country_flag = LCT_harmony_defeated
					}
					AND = {
						check_variable = { o = 2 }
						has_country_flag = LCT_neutrality_defeated
					}
					AND = {
						check_variable = { o = 3 }
						has_country_flag = LCT_communism_defeated
					}
					AND = {
						check_variable = { o = 4 }
						has_country_flag = LCT_supremacy_defeated
					}
				}
			}
			add_to_temp_variable = { total = b }	#Set total to the sum of all other resistance groups
		}
	}
	divide_temp_variable = { total = total_value_check }	#divide total by total_value_check
	
	for_each_loop = {	#Loop over all other resistance groups in state
		array = LCT_resistance_control
		index = o
		value = b
		if = {
			limit = {
				NOT = {
					check_variable = { temp_group = o }
					AND = {
						check_variable = { o = 1 }
						has_country_flag = LCT_harmony_defeated
					}
					AND = {
						check_variable = { o = 2 }
						has_country_flag = LCT_neutrality_defeated
					}
					AND = {
						check_variable = { o = 3 }
						has_country_flag = LCT_communism_defeated
					}
					AND = {
						check_variable = { o = 4 }
						has_country_flag = LCT_supremacy_defeated
					}
				}
			}
			divide_variable = { LCT_resistance_control^o = total }	#divide resistance level of each other group by total to appropriately scale them to the changed value
		}
	}
	
	find_highest_in_array = {	#Find the most powerful faction 
		array = LCT_resistance_control
		index = most_powerful_index
	}
	
	set_variable = { LCT_resistance_control_ruling_id = most_powerful_index }	#Set state ruling faction ID
	
	meta_effect = {		#Set token variable for GUI
		text = {
			set_variable = { LCT_resistance_control_ruling = token:LCT_resistance_group_[GROUP] }
		}
		GROUP = "[?most_powerful_index]"
	}
	
	ROOT = {
		LCT_resistance_update_gui = yes
	}
}

LCT_resistance_update_gui = {
	set_variable = { progressbar_1_frame = LCT_selected_resistance_state:LCT_resistance_control^0 }
	add_to_variable = { progressbar_1_frame = LCT_selected_resistance_state:LCT_resistance_control^1 }
	set_variable = { progressbar_2_frame = progressbar_1_frame }
	add_to_variable = { progressbar_2_frame = LCT_selected_resistance_state:LCT_resistance_control^2 }
	set_variable = { progressbar_3_frame = progressbar_2_frame }
	add_to_variable = { progressbar_3_frame = LCT_selected_resistance_state:LCT_resistance_control^3 }
	set_variable = { progressbar_4_frame = progressbar_3_frame }
	add_to_variable = { progressbar_4_frame = LCT_selected_resistance_state:LCT_resistance_control^4 }
	
	set_variable = { progressbar_txt_0_x = LCT_selected_resistance_state:LCT_resistance_control^0 }
	divide_variable = { progressbar_txt_0_x = 200 }
	multiply_variable = { progressbar_txt_0_x = 404 }
	
	set_variable = { progressbar_txt_1_x = LCT_selected_resistance_state:LCT_resistance_control^1 }
	divide_variable = { progressbar_txt_1_x = 2 }
	add_to_variable = { progressbar_txt_1_x = LCT_selected_resistance_state:LCT_resistance_control^0 }
	divide_variable = { progressbar_txt_1_x = 100 }
	multiply_variable = { progressbar_txt_1_x = 404 }

	set_variable = { progressbar_txt_2_x = LCT_selected_resistance_state:LCT_resistance_control^2 }
	divide_variable = { progressbar_txt_2_x = 2 }
	add_to_variable = { progressbar_txt_2_x = LCT_selected_resistance_state:LCT_resistance_control^0 }
	add_to_variable = { progressbar_txt_2_x = LCT_selected_resistance_state:LCT_resistance_control^1 }
	divide_variable = { progressbar_txt_2_x = 100 }
	multiply_variable = { progressbar_txt_2_x = 404 }

	set_variable = { progressbar_txt_3_x = LCT_selected_resistance_state:LCT_resistance_control^3 }
	divide_variable = { progressbar_txt_3_x = 2 }
	add_to_variable = { progressbar_txt_3_x = LCT_selected_resistance_state:LCT_resistance_control^0 }
	add_to_variable = { progressbar_txt_3_x = LCT_selected_resistance_state:LCT_resistance_control^1 }
	add_to_variable = { progressbar_txt_3_x = LCT_selected_resistance_state:LCT_resistance_control^2 }
	divide_variable = { progressbar_txt_3_x = 100 }
	multiply_variable = { progressbar_txt_3_x = 404 }

	set_variable = { progressbar_txt_4_x = LCT_selected_resistance_state:LCT_resistance_control^4 }
	divide_variable = { progressbar_txt_4_x = 2 }
	add_to_variable = { progressbar_txt_4_x = LCT_selected_resistance_state:LCT_resistance_control^0 }
	add_to_variable = { progressbar_txt_4_x = LCT_selected_resistance_state:LCT_resistance_control^1 }
	add_to_variable = { progressbar_txt_4_x = LCT_selected_resistance_state:LCT_resistance_control^2 }
	add_to_variable = { progressbar_txt_4_x = LCT_selected_resistance_state:LCT_resistance_control^3 }
	divide_variable = { progressbar_txt_4_x = 100 }
	multiply_variable = { progressbar_txt_4_x = 404 }
	
	add_to_variable = { LCT_resistance_dirty = 0.01 }
}

LCT_resistance_calculate_average_support = {
	set_variable = { LCT_average_democracy_support = 0 }
	set_variable = { LCT_average_communism_support = 0 }
	set_variable = { LCT_average_non_aligned_support = 0 }
	set_variable = { LCT_average_supremacy_support = 0 }
}

LCT_check_for_100 = {
	for_each_loop = {
		array = LCT_resistance_map_array
		var:v = {
			set_temp_variable = { check = 0 }
			for_each_loop = {
				array = LCT_resistance_control
				index = o
				value = b
				add_to_temp_variable = { check = b }
			}
			if = {
				limit = {
					check_variable = { var = check value = 100 compare = not_equals }
				}
				log = "[THIS.GetName] LCT_resistance_control DOESNT ADD UP TO 100: [?check|R]"
			}
		}
	}
}

LCT_start_vartai_war = {
	if = {
		limit = {
			country_exists = LNS
		}
		declare_war_on = {
            target = LNS
            type = annex_everything
        }
	}
	
	if = {
		limit = {
			country_exists = LSM
		}
		declare_war_on = {
            target = LSM
            type = annex_everything
        }
	}
	
	if = {
		limit = {
			country_exists = LSC
		}
		declare_war_on = {
            target = LSC
            type = annex_everything
        }
	}
	
	if = {
		limit = {
			country_exists = HLQ
		}
		declare_war_on = {
            target = HLQ
            type = annex_everything
        }
	}
	
	hidden_effect = {
		if = {
			limit = {
				DEP = {
					has_country_flag = LCT_will_join_hellwar
				}
			}
			if = {
				limit = {
					country_exists = LNS
				}
				DEP = {
					declare_war_on = {
						target = LNS
						type = annex_everything
					}
				}
			}
			if = {
				limit = {
					country_exists = LSM
				}
				DEP = {
					declare_war_on = {
						target = LSM
						type = annex_everything
					}
				}
			}
			if = {
				limit = {
					country_exists = LSC
				}
				DEP = {
					declare_war_on = {
						target = LSC
						type = annex_everything
					}
				}
			}
			if = {
				limit = {
					country_exists = HLQ
				}
				DEP = {
					declare_war_on = {
						target = HLQ
						type = annex_everything
					}
				}
			}
		}
	}
}

LCT_add_home_resistance_modifiers = {
	custom_effect_tooltip = LCT_add_home_resistance_modifiers_tooltip
	hidden_effect = {
		set_variable = { LCT_six_lords_home_resistance_edition_social_var = -0.9 }
		add_dynamic_modifier = { modifier = LCT_six_lords_home_resistance_edition_social }
		
		set_variable = { LCT_six_lords_home_resistance_edition_industrial_var = -0.9 }
		set_variable = { LCT_six_lords_home_resistance_edition_industrial_inv_var = 0.9 }
		add_dynamic_modifier = { modifier = LCT_six_lords_home_resistance_edition_industrial }
		
		set_variable = { LCT_six_lords_home_resistance_edition_military_var = -0.9 }
		set_variable = { LCT_six_lords_home_resistance_edition_military_inv_var = 0.9 }
		add_dynamic_modifier = { modifier = LCT_six_lords_home_resistance_edition_military }
	}
}

LCT_reduce_home_resistance_social_modifier = {
	custom_effect_tooltip = LCT_reduce_home_resistance_social_modifier_tooltip

	add_to_variable = { LCT_six_lords_home_resistance_edition_social_var = 0.1s }
}

LCT_reduce_home_resistance_industrial_modifier = {
	custom_effect_tooltip = LCT_reduce_home_resistance_social_industrial_tooltip
	
	add_to_variable = { LCT_six_lords_home_resistance_edition_industrial_var = 0.225 }
	subtract_from_variable = { LCT_six_lords_home_resistance_edition_industrial_inv_var = 0.225 }
}

LCT_reduce_home_resistance_military_modifier = {
	custom_effect_tooltip = LCT_reduce_home_resistance_social_military_tooltip

	add_to_variable = { LCT_six_lords_home_resistance_edition_military_var = 0.225 }
	subtract_from_variable = { LCT_six_lords_home_resistance_edition_military_inv_var = 0.225 }
}

LCT_resistance_events_selection = {
	random_scope_in_array = {
		array = LCT_resistance_map_array
		ROOT = {
			set_variable = { LCT_resistance_event_state = PREV }
		}
		random_list = {
			40 = { #Attempt overt event
				if = {
					limit = {
						NOT = {
							check_variable = { LCT_resistance_control_ruling_id = 0 }
						}
					}
					if = {	#Harmony
						limit = {
							check_variable = { LCT_resistance_control_ruling_id = 1 }
						}
						random_list = {
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.4
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.5
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.6
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.7
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
						}
					}
					if = {	#Non-Aligned
						limit = {
							check_variable = { LCT_resistance_control_ruling_id = 2 }
						}
						ROOT = {
							country_event = {
								id = LCT_lords_resist.16
								days = 1
								random_hours = 12
								random_days = 2
							}
						}
					}
					if = {	#Communism
						limit = {
							check_variable = { LCT_resistance_control_ruling_id = 3 }
						}
						random_list = {
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.11
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.12
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.13
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
						}
					}
					if = {	#Supremacy
						limit = {
							check_variable = { LCT_resistance_control_ruling_id = 4 }
						}
						ROOT = {
							country_event = {
								id = LCT_lords_resist.21
								days = 1
								random_hours = 12
								random_days = 2
							}
						}
					}
				}
			}
			
			60 = { #Attempt subversive event
				if = {
					limit = {
						ROOT = {
							has_country_flag = LCT_resistance_with_reformisten
						}
					}
					random_list = {
						10 = {	#Harmony
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^1
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.1
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.2
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.3
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
						10 = {	#Non-Aligned
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^2
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.14
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.15
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.17
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.18
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
						10 = {	#Communism
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^3
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.8
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.9
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.10
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
						10 = {	#Supremacy
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^4
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.19
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.20
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.22
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.23
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
					}
				}
				else = {
					random_list = {
						10 = {	#Harmony
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^1
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.1
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.2
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.3
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
						10 = {	#Non-Aligned
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^2
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.14
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.15
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.17
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.18
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
						10 = {	#Communism
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^3
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.8
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.9
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.10
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

LCT_deactivate_harmony = {
	set_country_flag = LCT_harmony_defeated
	for_each_scope_loop = {
		array = LCT_resistance_map_array_id
	
		set_variable = { LCT_resistance_control^1 = 0 }
	}
	for_each_loop = {
		array = LCT_resistance_map_array_id
		value = v
		set_temp_variable = { temp_state = v }
		set_temp_variable = { temp_group = 0 }
		set_temp_variable = { temp_value = 0 }
		LCT_resistance_change_control = yes
	}
}

LCT_deactivate_neutrality = {
	set_country_flag = LCT_neutrality_defeated
	for_each_scope_loop = {
		array = LCT_resistance_map_array_id
	
		set_variable = { LCT_resistance_control^2 = 0 }
	}
	for_each_loop = {
		array = LCT_resistance_map_array_id
		value = v
		set_temp_variable = { temp_state = v }
		set_temp_variable = { temp_group = 0 }
		set_temp_variable = { temp_value = 0 }
		LCT_resistance_change_control = yes
	}
}

LCT_deactivate_comunism = {
	set_country_flag = LCT_communism_defeated
	for_each_scope_loop = {
		array = LCT_resistance_map_array_id
	
		set_variable = { LCT_resistance_control^3 = 0 }
	}
	for_each_loop = {
		array = LCT_resistance_map_array_id
		value = v
		set_temp_variable = { temp_state = v }
		set_temp_variable = { temp_group = 0 }
		set_temp_variable = { temp_value = 0 }
		LCT_resistance_change_control = yes
	}
}

LCT_deactivate_supremacy = {
	set_country_flag = LCT_supremacy_defeated
	for_each_scope_loop = {
		array = LCT_resistance_map_array_id
	
		set_variable = { LCT_resistance_control^4 = 0 }
	}
	for_each_loop = {
		array = LCT_resistance_map_array_id
		value = v
		set_temp_variable = { temp_state = v }
		set_temp_variable = { temp_group = 0 }
		set_temp_variable = { temp_value = 0 }
		LCT_resistance_change_control = yes
	}
}

LCT_decrease_administrative_resistance = {
	if = {
		limit = {
			has_idea = LCT_administrative_resistance0
		}
		swap_ideas = {
			remove_idea = LCT_administrative_resistance0
			add_idea = LCT_administrative_resistance1
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_administrative_resistance1
		}
		swap_ideas = {
			remove_idea = LCT_administrative_resistance1
			add_idea = LCT_administrative_resistance2
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_administrative_resistance2
		}
		remove_ideas = LCT_administrative_resistance2
	}
}

LCT_decrease_military_politics = {
	if = {
		limit = {
			has_idea = LCT_military_politics0
		}
		swap_ideas = {
			remove_idea = LCT_military_politics0
			add_idea = LCT_military_politics1
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_military_politics1
		}
		swap_ideas = {
			remove_idea = LCT_military_politics1
			add_idea = LCT_military_politics2
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_military_politics2
		}
		swap_ideas = {
			remove_idea = LCT_military_politics2
			add_idea = LCT_military_politics3
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_military_politics3
		}
		swap_ideas = {
			remove_idea = LCT_military_politics3
			add_idea = LCT_military_politics4
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_military_politics4
		}
		swap_ideas = {
			remove_idea = LCT_military_politics4
			add_idea = LCT_military_politics5
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_military_politics5
		}
		remove_ideas = LCT_military_politics5
	}
}

LCT_failed_demand_effect = {
	set_temp_variable = { temp_pentalty_value = LCT_six_lords_failed_missions }
	add_to_temp_variable = { temp_pentalty_value = 1 }
	divide_temp_variable = { temp_pentalty_value = -100 }
	add_stability = temp_pentalty_value
}

LCT_HPE_balkanize = {
	hidden_effect = {
		#Step 1: Gather all occupied tags myself because for some reason the occupied_countries array doesn't have them all.
		every_owned_state = {
			limit = {
				is_fully_controlled_by = ROOT
			}
			for_each_scope_loop = {
				array = core_countries
				if = {
					limit = {
						exists = no
						NOT = {
							is_in_array = { temp_countries_to_release = THIS }
						}
					}
					ROOT = {
						add_to_temp_array = {
							array = temp_countries_to_release
							value = PREV
						}
					}
				}
			}
		}
		#Step 2: Release all occupied tags as puppets
		for_each_scope_loop = {
			array = temp_countries_to_release
			if = {
				limit = {
					exists = no
				}
				for_each_scope_loop = {
					array = original_cores
					if = {
						limit = {
							OR = {
								owner = { tag = ROOT }
								owner = { is_subject_of = ROOT }
							}
							LCT_HPE_is_balkanizable = yes
						}
						transfer_state_to = PREV
					}
				}
				
				#This code subdivides large countries into smaller ones. Was removed because power levels were too high. Add back in at your own risk.
#				if = {
#					limit = {
#						num_of_controlled_states > 10
#					}
#					
#					#Chop it up if it is
#					set_temp_variable = { temp_sub_country_count = num_owned_states }
#					divide_temp_variable = { temp_sub_country_count = 10 }
#					round_temp_variable = temp_sub_country_count
#					
#					set_temp_variable = { temp_sub_country_state_count = num_owned_states }
#					divide_temp_variable = { temp_sub_country_state_count = temp_sub_country_count }
#					round_temp_variable = temp_sub_country_state_count
#					
#					set_temp_variable = { temp_while1_counter = 0 }
#					while_loop_effect = {
#						limit = {
#							check_variable = { temp_sub_country_count > temp_while1_counter }
#						}
#						random_owned_state = {
#							PREV = {
#								set_temp_variable = { temp_sub_country_starting_state = PREV.id }
#							}
#						}
#						
#						#Create the dynamic country
#						create_dynamic_country = {
#							original_tag = THIS
#							copy_tag = THIS
#							transfer_state = var:temp_sub_country_starting_state
#							
#							set_temp_variable = { temp_while2_counter = 1 }
#							while_loop_effect = {
#								limit = {
#									check_variable = { temp_sub_country_state_count > temp_while2_counter }
#								}
#								
#								PREV = {
#									random_owned_state = {
#										limit = {
#											any_neighbor_state = {
#												owner = {
#													tag = PREV.PREV.PREV.PREV
#												}
#											}
#										}
#										transfer_state_to = PREV.PREV
#									}
#								}
#								
#								add_to_temp_variable = { temp_while2_counter = 1 }
#							}
#							LCT_HPE_make_subject = yes
#						}
#						add_to_temp_variable = { temp_while1_counter = 1 }
#					}
#				}
				
				#Now we set them as a puppet and choose a name for it
				LCT_HPE_make_subject = yes
			}
		}
	}
}

LCT_HPE_make_subject = {
	ROOT = {
		set_autonomy = {
			target = PREV
			autonomous_state = autonomy_vassal
			end_wars = yes
			end_civil_wars = yes
		}
	}
	set_politics = {
		ruling_party = fascism
		elections_allowed = no
	}
	LCT_HPE_choose_name = yes
}

LCT_HPE_choose_name = {
	drop_cosmetic_tag = yes
	fixed_random_seed = no
	if = {
		limit = {
			num_of_controlled_states < 2
		}
		set_cosmetic_tag = LCT_HPE_free_city
	}
	else = {
		random_list = {
			10 = {
				set_cosmetic_tag = LCT_HPE_generic1
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic2
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic3
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic4
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic5
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic6
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic7
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic8
			}
		}
	}
}

LCT_HPE_assign_base_ideas = {
	add_ideas = {
		proper_science_base
		poverty3
		modern_society
		lack_of_scientists3
		griffon_race
		partial_economic_mobilisation
		export_focus
		extensive_conscription
	}
}

LCT_HPE_setup_herzland_puppets = {
	hidden_effect = {
	
		#Star Counter
		create_dynamic_country = {
			original_tag = GRI
			copy_tag = GRI
			
			set_country_flag = LCT_herzland_puppet_STC_flag
			every_core_state = { remove_core_of = PREV }
			LCT_HPE_assign_base_ideas = yes
			
			transfer_state = 382
			transfer_state = 437
			transfer_state = 405
			transfer_state = 397
			transfer_state = 555
			transfer_state = 402
			transfer_state = 665
			transfer_state = 439
			transfer_state = 398
			transfer_state = 399
			transfer_state = 424
			transfer_state = 492
			transfer_state = 479
			transfer_state = 674
			add_state_core = 674
			add_state_core = 437
			add_state_core = 405
			add_state_core = 397
			add_state_core = 555
			add_state_core = 345
			add_state_core = 402
			add_state_core = 665
			add_state_core = 439
			add_state_core = 398
			add_state_core = 399
			add_state_core = 424
			add_state_core = 492
			add_state_core = 479
			
			set_popularities = {
				democratic = 15
				neutrality = 30
				fascism = 50
				communism = 5
			}
			set_politics = {
				ruling_party = fascism
			   	elections_allowed = no
			}
			load_focus_tree = barrad_focus_viira_bonus
			set_cosmetic_tag = LCT_HPE_STAR
			
			PREV = {
				LCT_star_talent = {
					set_nationality = PREV.PREV
					promote_character = yes
				}
			}
		}
		
		#Dominion of Flame
		create_dynamic_country = {
			original_tag = GRI
			copy_tag = GRI
			
			set_country_flag = LCT_herzland_puppet_DOF_flag
			every_core_state = { remove_core_of = PREV }
			LCT_HPE_assign_base_ideas = yes
			
			transfer_state = 411
			transfer_state = 547
			transfer_state = 422
			transfer_state = 423
			transfer_state = 506
			transfer_state = 554
			
			add_state_core = 411
			add_state_core = 547
			add_state_core = 422
			add_state_core = 423
			add_state_core = 506
			add_state_core = 554
			
			set_popularities = {
				democratic = 15
				neutrality = 30
				fascism = 50
				communism = 5
			}
			set_politics = {
				ruling_party = fascism
			   	elections_allowed = no
			}
			load_focus_tree = barrad_focus_viira_bonus
			set_cosmetic_tag = LCT_HPE_HOT
			
			PREV = {
				LCT_flaming_hot = {
					set_nationality = PREV.PREV
					promote_character = yes
				}
			}
		}
		
		#Herzland Industrial Zone
		create_dynamic_country = {
			original_tag = GRI
			copy_tag = GRI
			
			set_country_flag = LCT_herzland_puppet_HIZ_flag
			every_core_state = { remove_core_of = PREV }
			LCT_HPE_assign_base_ideas = yes
			
			transfer_state = 666
			transfer_state = 440
			transfer_state = 443
			transfer_state = 520
			transfer_state = 441
			transfer_state = 498
			transfer_state = 458
			
			add_state_core = 666
			add_state_core = 440
			add_state_core = 443
			add_state_core = 520
			add_state_core = 441
			add_state_core = 498
			add_state_core = 458
			
			add_ideas = {
				volunteer_only
				civilian_economy
			}
			
			set_popularities = {
				democratic = 15
				neutrality = 30
				fascism = 50
				communism = 5
			}
			set_politics = {
				ruling_party = fascism
			   	elections_allowed = no
			}
			load_focus_tree = barrad_focus_viira_bonus
			set_cosmetic_tag = LCT_HPE_MONEY
			
			PREV = {
				LCT_big_money = {
					set_nationality = PREV.PREV
					promote_character = yes
				}
			}
		}
		
		#SOUF
		create_dynamic_country = {
			original_tag = GRI
			copy_tag = GRI
			
			set_country_flag = LCT_herzland_puppet_SUF_flag
			every_core_state = { remove_core_of = PREV }
			LCT_HPE_assign_base_ideas = yes
			
			transfer_state = 434
			transfer_state = 497
			transfer_state = 378
			transfer_state = 447
			
			add_state_core = 434
			add_state_core = 497
			add_state_core = 378
			add_state_core = 447
			
			set_popularities = {
				democratic = 15
				neutrality = 30
				fascism = 50
				communism = 5
			}
			set_politics = {
				ruling_party = fascism
			   	elections_allowed = no
			}
			load_focus_tree = barrad_focus_viira_bonus
			set_cosmetic_tag = LCT_HPE_SMOKE
			
			PREV = {
				LCT_smoke_signal = {
					set_nationality = PREV.PREV
					promote_character = yes
				}
			}
		}
		
		#NORF
		create_dynamic_country = {
			original_tag = GRI
			copy_tag = GRI
			
			set_country_flag = LCT_herzland_puppet_NOF_flag
			every_core_state = { remove_core_of = PREV }
			LCT_HPE_assign_base_ideas = yes
			
			transfer_state = 486
			transfer_state = 546
			transfer_state = 545
			transfer_state = 539
			transfer_state = 568
			transfer_state = 538
			transfer_state = 433
			
			add_state_core = 486
			add_state_core = 546
			add_state_core = 545
			add_state_core = 539
			add_state_core = 568
			add_state_core = 538
			add_state_core = 433
			
			set_popularities = {
				democratic = 15
				neutrality = 30
				fascism = 50
				communism = 5
			}
			set_politics = {
				ruling_party = fascism
			   	elections_allowed = no
			}
			load_focus_tree = barrad_focus_viira_bonus
			set_cosmetic_tag = LCT_HPE_DREAM
			
			PREV = {
				LCT_daring_dream = {
					set_nationality = PREV.PREV
					promote_character = yes
				}
			}
		}
	}
}
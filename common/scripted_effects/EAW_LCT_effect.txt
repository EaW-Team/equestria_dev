
LCT_DIET_initiate = {
	clear_array = LCT_DIET_seats_array
	
	add_to_array = { LCT_DIET_seats_array = 40 }
	add_to_array = { LCT_DIET_seats_array = 67 }
	add_to_array = { LCT_DIET_seats_array = 26 }
	add_to_array = { LCT_DIET_seats_array = 27 }
	
	set_variable = { LCT_UMJ_leader_status = token:LCT_UMJ_Leader_Deirdra_Skye }
	set_variable = { LCT_UMJ_leader_status_full = token:LCT_UMJ_Leader_Deirdra_Skye_Full }
	set_variable = { LCT_TJS_leader_status = token:LCT_TJS_Leader_Springtime_Frost }
	set_variable = { LCT_TJS_leader_status_full = token:LCT_TJS_Leader_Springtime_Frost_Full }
	set_variable = { LCT_PD_leader_status = token:LCT_PD_Leader_Wild_Tree }
	set_variable = { LCT_PD_leader_status_full = token:LCT_PD_Leader_Wild_Tree_Full }
	
	clear_array = LCT_DIET_seats_display_array
	
	resize_array = { LCT_DIET_seats_display_array = 40 value = 0 }
	resize_array = { LCT_DIET_seats_display_array = 107 value = 1 }
	resize_array = { LCT_DIET_seats_display_array = 133 value = 2 }
	resize_array = { LCT_DIET_seats_display_array = 160 value = 3 }
	
	set_country_flag = LCT_Diet_Visible
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
}

LCT_DIET_kill = {
	clear_array = LCT_DIET_seats_array
	clear_array = LCT_DIET_seats_display_array
	clr_country_flag = LCT_Diet_Visible
}

#### Indexes
# 0 = TBD
# 1 = LDP
# 2 = CTT
# 3 = Independents

## How to use:
# set_temp_variable = { temp_faction = 1 }
# set_temp_variable = { temp_seats = 10 }
# LCT_DIET_change_seats = yes

## This will change the LDP's (1) seat count by 10, deducting it from other factions.
## The scripted effect will generate its own tooltip so don't worry about that.

LCT_DIET_change_seats = {
	
	## Normalize values
	set_temp_variable = { future_value = LCT_DIET_seats_array^temp_faction }
	add_to_temp_variable = { future_value = temp_seats }
	if = {
		limit = {
			check_variable = { future_value > 160 }
		}
		set_temp_variable = { min_temp_seats = future_value }
		subtract_from_temp_variable = { min_temp_seats = 160 }
		subtract_from_temp_variable = { temp_seats = min_temp_seats }
	}
	else_if = {
		limit = {
			check_variable = { future_value < 0 }
		}
		subtract_from_temp_variable = { temp_seats = future_value }
	}
	
	## Tooltip generation + seperating positive/negative
	if = {
		limit = {
			check_variable = { temp_seats > 0 }
		}
		set_temp_variable = { positive_negative = 1 }
		custom_effect_tooltip = LCT_DIET_change_seats_positive_tt
	}
	else = {
		set_temp_variable = { positive_negative = -1 }
		multiply_temp_variable = { temp_seats = -1 }
		custom_effect_tooltip = LCT_DIET_change_seats_negative_tt
	}
	
	## Subtracting seats from other factions based on:
	#	if positive: more seats means you are more likely to be subtracted from
	#	if negative: less seats means you are more likely to be added upon
	for_loop_effect = {
		start = 0
		end = temp_seats

		for_each_loop = {
			array = LCT_DIET_seats_array
			value = x
			index = y
			
			if = {
				limit = {
					check_variable = { positive_negative = 1 }
				}
				add_to_temp_array = { chance = x }
			}
			else = {
				set_temp_variable = { chance_n = 160 }
				subtract_from_temp_variable = { chance_n = x }
				add_to_temp_array = { chance = chance_n }
			}

			if = {
				limit = {
					OR = {
						check_variable = { temp_faction = y }
						AND = {
							check_variable = { positive_negative = 1 }
							check_variable = { x = 0 }
						}
					}
				}
				set_temp_variable = { chance^y = 0 }
			}
		}
		
		random_list = {
			chance^0 = {
				subtract_from_variable = { LCT_DIET_seats_array^0 = positive_negative }
			}
			chance^1 = {
				subtract_from_variable = { LCT_DIET_seats_array^1 = positive_negative }
			}
			chance^2 = {
				subtract_from_variable = { LCT_DIET_seats_array^2 = positive_negative }
			}
			chance^3 = {
				subtract_from_variable = { LCT_DIET_seats_array^3 = positive_negative }
			}
		}
		clear_temp_array = chance
	}
	multiply_temp_variable = { temp_seats = positive_negative }
	add_to_variable = { LCT_DIET_seats_array^temp_faction = temp_seats }
	
	LCT_DIET_re_render = yes
	
	clear_variable = temp_seats
	clear_variable = temp_faction
}

## How to use:
# add_to_temp_array = { bill_support_ratio = 0.8 } # This is for the UMJ
# add_to_temp_array = { bill_support_ratio = 0.3 } # This is for the TJS
# add_to_temp_array = { bill_support_ratio = 0.6 } # This is for the PD
# add_to_temp_array = { bill_support_ratio = 0.5 } # This is for the Independents
# LCT_initiate_new_bill = yes
# hidden_effect = {
# 	 activate_mission = LCT_Bill_Mandatory_Cheeseburgers
# }

LCT_initiate_new_bill = {
	custom_effect_tooltip = LCT_initiate_new_bill_tt

	for_each_loop = {
		array = LCT_DIET_seats_array
		add_to_array = { LCT_DIET_support = v }
		multiply_variable = { LCT_DIET_support^i = bill_support_ratio^i }
		round_variable = LCT_DIET_support^i
	}
	set_country_flag = LCT_bill_on_the_floor
	LCT_re_calculate_support_for_bill = yes
}

## How to use:
# set_temp_variable = { temp_faction = 1 }
# set_temp_variable = { temp_support = 10 }
# LCT_change_support_for_bill = yes

## This will change the TJS's (1) support for the current bill by 10, maxing out at the TJS's total seat count.
## The scripted effect will generate its own tooltip so don't worry about that.

LCT_change_support_for_bill = {
	set_temp_variable = { hard_cap = LCT_DIET_seats_array^temp_faction }
	set_temp_variable = { future_value = LCT_DIET_support^temp_faction }
	add_to_temp_variable = { future_value = temp_support }
	
	if = {
		limit = {
			check_variable = { future_value > hard_cap }
		}
		set_temp_variable = { normalizer = future_value }
		subtract_from_temp_variable = { normalizer = hard_cap }
		subtract_from_temp_variable = { temp_support = normalizer }
	}

	custom_effect_tooltip = LCT_change_support_for_bill_tt

	add_to_variable = { LCT_DIET_support^temp_faction = temp_support }
	LCT_re_calculate_support_for_bill = yes
	
	clear_variable = temp_faction
	clear_variable = temp_support
}

LCT_change_UMJ_leader = {
	set_variable = { LCT_UMJ_leader_status = temp_new_leader }
	meta_effect = {
		text = {
			set_variable = { LCT_UMJ_leader_status_full = token:[LEADER]_Full }
		}
		LEADER = "[?temp_new_leader.GetTokenKey]"
	}
	custom_effect_tooltip = LCT_UMJ_change_leader_CET
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
}

LCT_change_TJS_leader = {
	set_variable = { LCT_TJS_leader_status = temp_new_leader }
	meta_effect = {
		text = {
			set_variable = { LCT_TJS_leader_status_full = token:[LEADER]_Full }
		}
		LEADER = "[?temp_new_leader.GetTokenKey]"
	}
	custom_effect_tooltip = LCT_TJS_change_leader_CET
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
}

LCT_change_PD_leader = {
	set_variable = { LCT_PD_leader_status = temp_new_leader }
	meta_effect = {
		text = {
			set_variable = { LCT_PD_leader_status_full = token:[LEADER]_Full }
		}
		LEADER = "[?temp_new_leader.GetTokenKey]"
	}
	custom_effect_tooltip = LCT_PD_change_leader_CET
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
}

### BACKEND STUFF, don't worry about these

LCT_DIET_re_render = {
	set_temp_variable = { seats_1 = LCT_DIET_seats_array^0 }
	add_to_temp_variable = { seats_1 = LCT_DIET_seats_array^1 }

	set_temp_variable = { seats_2 = seats_1 }
	add_to_temp_variable = { seats_2 = LCT_DIET_seats_array^2 }

	set_temp_variable = { seats_3 = seats_2 }
	add_to_temp_variable = { seats_3 = LCT_DIET_seats_array^3 }
	
	clear_array = LCT_DIET_seats_display_array
	
	resize_array = { LCT_DIET_seats_display_array = LCT_DIET_seats_array^0 value = 0 }
	resize_array = { LCT_DIET_seats_display_array = seats_1 value = 1 }
	resize_array = { LCT_DIET_seats_display_array = seats_2 value = 2 }
	resize_array = { LCT_DIET_seats_display_array = seats_3 value = 3 }
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
	
	if = {
		limit = {
			has_country_flag = LCT_bill_on_the_floor
		}
		LCT_re_calculate_support_for_bill = yes
	}
	
	log = "LCT: Re render GUI"
	log = "LCT_DIET_seats_array^0 = [?LCT_DIET_seats_array^0]"
	log = "LCT_DIET_seats_array^1 = [?LCT_DIET_seats_array^1]"
	log = "LCT_DIET_seats_array^2 = [?LCT_DIET_seats_array^2]"
	log = "LCT_DIET_seats_array^3 = [?LCT_DIET_seats_array^3]"
	log = "TOTAL = [?LCT_DIET_seats_display_array^num]"
}

LCT_re_calculate_support_for_bill = {
	clear_variable = LCT_Current_Support_for_Bill
	for_each_loop = {
		array = LCT_DIET_support

		clamp_variable = { var = LCT_DIET_support^i min = 0 max = LCT_DIET_seats_array^i }
		add_to_variable = { LCT_Current_Support_for_Bill = v }
	}
	
	resize_array = { LCT_DIET_is_seat_supporting = LCT_DIET_support^0 value = 1 }
	resize_array = { LCT_DIET_is_seat_supporting = LCT_DIET_seats_array^0 value = 0 }
	
	set_temp_variable = { supporting_1 = LCT_DIET_is_seat_supporting^num }
	add_to_temp_variable = { supporting_1 = LCT_DIET_support^1 }
	resize_array = { LCT_DIET_is_seat_supporting = supporting_1 value = 1 }
	subtract_from_temp_variable = { supporting_1 = LCT_DIET_support^1 }
	add_to_temp_variable = { supporting_1 = LCT_DIET_seats_array^1 }
	resize_array = { LCT_DIET_is_seat_supporting = supporting_1 value = 0 }
	
	set_temp_variable = { supporting_2 = LCT_DIET_is_seat_supporting^num }
	add_to_temp_variable = { supporting_2 = LCT_DIET_support^2 }
	resize_array = { LCT_DIET_is_seat_supporting = supporting_2 value = 1 }
	subtract_from_temp_variable = { supporting_2 = LCT_DIET_support^2 }
	add_to_temp_variable = { supporting_2 = LCT_DIET_seats_array^2 }
	resize_array = { LCT_DIET_is_seat_supporting = supporting_2 value = 0 }
	
	set_temp_variable = { supporting_3 = LCT_DIET_is_seat_supporting^num }
	add_to_temp_variable = { supporting_3 = LCT_DIET_support^3 }
	resize_array = { LCT_DIET_is_seat_supporting = supporting_3 value = 1 }
	subtract_from_temp_variable = { supporting_3 = LCT_DIET_support^3 }
	add_to_temp_variable = { supporting_3 = LCT_DIET_seats_array^3 }
	resize_array = { LCT_DIET_is_seat_supporting = supporting_3 value = 0 }
	
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
}

LCT_clean_up_bill = {
	clear_array = LCT_DIET_support
	clear_array = LCT_DIET_is_seat_supporting
	clear_variable = LCT_Current_Support_for_Bill
	clr_country_flag = LCT_bill_on_the_floor
	add_to_variable = { LCT_Diet_Dirty = 0.01 }
}

# Demands thingy #

LCT_do_demand_random = {
	if = {
		limit = {
			check_variable = {
				var = LCT_active_demands_var
				value = 2
				compare = less_than
			}
		}
		if = {
			limit = {
				NOT = { has_country_flag = LCT_formed_HPE }
			}
			random = {
				chance = 33
				LCT_select_demand = yes
			}
		}
		else_if = {
			limit = {
				has_country_flag = LCT_formed_HPE
				NOT = { 
					has_country_flag = LCT_won_the_giga_war
					has_country_flag = LCT_giga_war_failstate
				}
				has_war = yes
			}
			random = {
				chance = 33
				LCT_select_gigawar_demand = yes
			}
		}
	}
	else = {
		log = "Nothing"
	}
}

LCT_select_gigawar_demand = {
	
	#Reset Chance To Happen Variables
	set_variable = { LCT_fh_land_corridor = 0 }
	set_variable = { LCT_st_war_strategy = 0 }
	set_variable = { LCT_dd_manpower_request = 0 }
	set_variable = { LCT_ss_artillery_request = 0 }
	set_variable = { LCT_bm_factory_relocation = 0 }
	
	#Flaming Hot Land Corridor Demand
	if = {
		limit = {
			NOT = {
				has_country_flag = LCT_fh_land_corridor_demand_in_progress
			}
			OR = {
				controls_state = 489
				controls_state = 606
				controls_state = 446
				controls_state = 511
				AND = {
					var:511.owner = {
						NOT = {
							has_war_with = ROOT
						}
					}
					DOF = {
						controls_state = 446
					}
				}
			}
		}
		set_variable = { LCT_fh_land_corridor = 10 }
	}
	
	#Star Talent War Strategy Demand
	if = {
		limit = {
			NOT = {
				has_country_flag = LCT_st_war_strategy_demand_in_progress
			}
		}
		random_controlled_state = {
			limit = {
				any_neighbor_state = {
					owner = { has_war_with = ROOT }
					check_variable = { state_population_k > 2000 }
				}
			}
			random_neighbor_state = {
				limit = {
					owner = { has_war_with = ROOT }
					check_variable = { state_population_k > 2000 }
				}
				
				set_variable = { ROOT.LCT_war_target_state_var = THIS.id }
				set_variable = { ROOT.LCT_st_war_strategy = 10 }
			}
		}
	}
	
	#Daring Dream Manpower Demand
	if = {
		limit = {
			NOT = {
				has_country_flag = LCT_dd_manpower_request_demand_in_progress
				#has_country_flag = LCT_dd_manpower_request_demand_in_recent
			}
		}
		set_variable = { LCT_dd_manpower_request = 10 }
	}
	
	#Smoke Signal Artillery Demand
	if = {
		limit = {
			NOT = {
				has_country_flag = LCT_ss_artillery_request_demand_in_progress
				#has_country_flag = LCT_ss_artillery_request_demand_in_recent
			}
		}
		set_variable = { LCT_ss_artillery_request = 10 }
	}
	
	#Big Money Factory Relocation Demand
	if = {
		limit = {
			NOT = {
				has_country_flag = LCT_bm_factory_relocation_demand_in_progress
			}
		}
		random_controlled_state = {
			limit = {
				NOT = { is_core_of = ROOT }
				is_fully_controlled_by = ROOT
				arms_factory > 3
				industrial_complex > 3
			}
			set_variable = { ROOT.LCT_bm_factory_relocation_target = THIS.id }
			set_variable = { ROOT.LCT_bm_factory_relocation = 10 }
		}
	}
	
	#log = "[?LCT_fh_land_corridor]"
	#log = "[?LCT_st_war_strategy]"
	#log = "[?LCT_dd_manpower_request]"
	#log = "[?LCT_ss_artillery_request]"
	#log = "[?LCT_bm_factory_relocation]"
	
	#set_variable = { LCT_fh_land_corridor = 0 }
	#set_variable = { LCT_st_war_strategy = 0 }
	#set_variable = { LCT_dd_manpower_request = 0 }
	#set_variable = { LCT_ss_artillery_request = 0 }
	#set_variable = { LCT_bm_factory_relocation = 0 }
	
	#Random Mission List
	random_list = {
		LCT_fh_land_corridor = {
			if = {
				limit = {
					DOF = {
						controls_state = 489
						controls_state = 606
						controls_state = 446
					}
					NOT = {
						var:511.owner = {
							has_war_with = ROOT
						}
					}
				}
				country_event = { #Fire Asterion war event
					id = LCT_six_lords_demands.15
					days = 5
					random_hours = 24
					random_days = 13
				}
			}
			else = {
				country_event = { #Fire normal land demand event
					id = LCT_six_lords_demands.16
					days = 5
					random_hours = 24
					random_days = 13
				}
			}
			set_country_flag = LCT_fh_land_corridor_demand_in_progress
			add_to_variable = { LCT_active_demands_var = 1 }
			#log = "Land corridor"
		}
		LCT_st_war_strategy = {
			country_event = {
				id = LCT_six_lords_demands.17
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_st_war_strategy_demand_in_progress
			add_to_variable = { LCT_active_demands_var = 1 }
			#log = "ST take city: [?LCT_war_target_state_var.GetName]"
		}
		LCT_dd_manpower_request = {
			country_event = {
				id = LCT_six_lords_demands.18
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_dd_manpower_request_demand_in_progress
			add_to_variable = { LCT_active_demands_var = 1 }
			#log = "Manpower Request"
		}
		LCT_ss_artillery_request = {
			country_event = {
				id = LCT_six_lords_demands.19
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_ss_artillery_request_demand_in_progress
			add_to_variable = { LCT_active_demands_var = 1 }
			#log = "Artillery Request"
		}
		LCT_bm_factory_relocation = {
			country_event = {
				id = LCT_six_lords_demands.20
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_ss_artillery_request_demand_in_progress``
			add_to_variable = { LCT_active_demands_var = 1 }
			#log = "Relocate industry from [?LCT_bm_factory_relocation_target.GetName]"
		}
	}
	
}

LCT_select_demand = {

	#Reset Chance To Happen Variables
	set_variable = { LCT_fort_build_chance_var = 0 }
	set_variable = { LCT_raise_rhetoric_chance_var = 0 }
	set_variable = { LCT_diplomacy_chance_var = 0 }
	set_variable = { LCT_artillery_stockpile_chance_var = 0 }
	set_variable = { LCT_build_factory_chance_var = 0 }
	set_variable = { LCT_war_strategy_chance_var = 0 }
	
	#Fort Building Demand
	if = {
		limit = {
			NOT = {
				has_country_flag = LCT_construction_demand_in_progress
			}
		}
		random_owned_state = {
			limit = {
				NOT = {
					all_neighbor_state  = {
						is_owned_by = LCT
					}
					has_state_flag = LCT_fortified_border
				}
			}
			set_variable = { ROOT.LCT_bordering_state_target_var = THIS.id }
			set_variable = { ROOT.LCT_fort_build_chance_var = 10 }
		}
	}
	
	#Raise Rhetoric Demand
	#if = {
	#	limit = {
	#		OR = {
	#			AND = {
	#				check_variable = {
	#					var = lct_unity_rhetoric_var
	#					value = 0.2
	#					compare = less_than
	#				}
	#				has_country_flag = LCT_unlocked_stability_rhetoric
	#			}
	#			AND = {
	#				check_variable = {
	#					var = lct_productivity_rhetoric_var
	#					value = 0.2
	#					compare = less_than
	#				}
	#				has_country_flag = LCT_Propaganda_Campaign_Visible
	#			}
	#			AND = {
	#				check_variable = {
	#					var = lct_war_support_rhetoric_var
	#					value = 0.2
	#					compare = less_than
	#				}
	#				has_country_flag = LCT_unlocked_war_support_rhetoric
	#			}
	#		}
	#		NOT = {
	#			has_country_flag = LCT_propaganda_demand_in_progress
	#		}
	#	}
	#	set_variable = { LCT_raise_rhetoric_chance_var = 10 }
	#}
	
	#Diplomacy
	if = {
		limit = {
			NOT = {
				has_country_flag = LCT_diplomacy_demand_in_progress
			}
		}
		random_other_country = {
			limit = {
				exists = yes
				is_pony_race = yes
				has_opinion = {
					target = ROOT
					value < 16
				}
				has_opinion = {
					target = ROOT
					value > -51
				}
				NOT = {
					has_war_with = ROOT
					has_government = communism
					tag = BAR
					#tag = NTR
				}
			}
			set_variable = { ROOT.LCT_diplomacy_target_var = THIS.id }
			set_variable = { ROOT.LCT_diplomacy_chance_var = 10 }
		}
	}
	
	#Artillery Stockpile
	if = {
		limit = {
			has_equipment = {
				artillery_equipment < 1000
			}
			NOT = {
				has_country_flag = LCT_artillery_demand_in_progress
			}
		}
		set_variable = { LCT_artillery_stockpile_chance_var = 10 }
	}
	
	#Build Military Factories
	if = {
		limit = {
			any_owned_state = {
				free_building_slots = {
					building = arms_factory
					size > 0
					include_locked = no
				}
			}
			NOT = {
				has_country_flag = LCT_construction_demand_in_progress
			}
		}
		if = {
			limit = {
				has_completed_focus = LCT_onto_important_matters
			}
			set_variable_to_random = {
				var = num_new_factories
				min = 2
				max = 3
				integer = yes
			}
		}
		else = {
			set_variable_to_random = {
				var = num_new_factories
				min = 1
				max = 2
				integer = yes
			}
		}
		set_variable = { LCT_target_factories_num = num_of_military_factories }
		add_to_variable = { LCT_target_factories_num = num_new_factories }
		set_variable = { LCT_build_factory_chance_var = 10 }
	}
	
	#War strategy
	#random_state = {
	#	limit = {
	#		any_neighbor_state = {
	#			NOT = {
	#				is_controlled_by = LCT
	#			}
	#			any_neighbor_state = {
	#				is_controlled_by = LCT
	#			}
	#		}
	#		controller = {
	#			has_war_with = LCT
	#		}
	#		NOT = {
	#			LCT = {
	#				has_country_flag = LCT_strategy_demand_in_progress
	#			}
	#		}
	#	}
	#	set_variable = { ROOT.LCT_war_strategy_chance_var = 10 }
	#	set_variable = { ROOT.LCT_war_target_state_var = THIS.id }
	#}
	if = {
		limit = {
			NOT = {
				has_country_flag = LCT_strategy_demand_in_progress
			}
		}
		random_controlled_state = {
			limit = {
				any_neighbor_state = {
					owner = { has_war_with = ROOT }
				}
			}
			random_neighbor_state = {
				limit = {
					owner = { has_war_with = ROOT }
				}
				
				set_variable = { ROOT.LCT_war_target_state_var = THIS.id }
				set_variable = { ROOT.LCT_war_strategy_chance_var = 10 }
			}
		}
	}
	
	#log = "New Factories: [?num_new_factories]"
	#log = "[?LCT_fort_build_chance_var]"
	#log = "[?LCT_raise_rhetoric_chance_var]"
	#log = "[?LCT_diplomacy_chance_var]"
	#log = "[?LCT_artillery_stockpile_chance_var]"
	#log = "[?LCT_build_factory_chance_var]"
	#log = "[?LCT_war_strategy_chance_var]"
	
	#set_variable = { LCT_fort_build_chance_var = 0 }
	#set_variable = { LCT_raise_rhetoric_chance_var = 0 }
	#set_variable = { LCT_diplomacy_chance_var = 0 }
	#set_variable = { LCT_artillery_stockpile_chance_var = 0 }
	#set_variable = { LCT_build_factory_chance_var = 0 }
	#set_variable = { LCT_war_strategy_chance_var = 0 }
	
	#Random Mission List
	random_list = {
		LCT_fort_build_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.1
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_construction_demand_in_progress
			add_to_variable = { LCT_active_demands_var = 1 }
			log = "Build Forts"
		}
		#LCT_raise_rhetoric_chance_var = {
		#	LCT_raise_rhetoric_demand_selection = yes
		#	set_country_flag = LCT_propaganda_demand_in_progress
		#	add_to_variable = { LCT_active_demands_var = 1 }
		#	log = "Raise Rhetoric"
		#}
		LCT_diplomacy_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.5
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_diplomacy_demand_in_progress
			add_to_variable = { LCT_active_demands_var = 1 }
			log = "Diplomacy"
		}
		LCT_artillery_stockpile_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.12
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_artillery_demand_in_progress
			add_to_variable = { LCT_active_demands_var = 1 }
			log = "Artillery"
		}
		LCT_build_factory_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.13
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_construction_demand_in_progress
			add_to_variable = { LCT_active_demands_var = 1 }
			log = "Build Factories"
		}
		LCT_war_strategy_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.14
				days = 5
				random_hours = 24
				random_days = 13
			}
			set_country_flag = LCT_strategy_demand_in_progress
			log = "Take Territory"
		}
	}
}

LCT_raise_rhetoric_demand_selection = {
	set_temp_variable = { LCT_unity_chance_var = 0 }
	set_temp_variable = { LCT_productivity_chance_var = 0 }
	set_temp_variable = { LCT_war_support_chance_var = 0 }
	
	if = {
		limit = {
			check_variable = {
				var = lct_unity_rhetoric_var
				value = 0.2
				compare = less_than
			}
			has_country_flag = LCT_unlocked_stability_rhetoric
		}
		set_temp_variable = { LCT_unity_chance_var = 10 }
	}
	if = {
		limit = {
			check_variable = {
				var = lct_productivity_rhetoric_var
				value = 0.2
				compare = less_than
			}
			has_country_flag = LCT_Propaganda_Campaign_Visible
		}
		set_temp_variable = { LCT_productivity_chance_var = 10 }
	}
	if = {
		limit = {
			check_variable = {
				var = lct_war_support_rhetoric_var
				value = 0.2
				compare = less_than
			}
			has_country_flag = LCT_unlocked_war_support_rhetoric
		}
		set_temp_variable = { LCT_war_support_chance_var = 10 }
	}
	
	random_list = {
		LCT_unity_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.2
				days = 5
				random_hours = 24
				random_days = 13
			}
		}
		LCT_productivity_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.3
				days = 5
				random_hours = 24
				random_days = 13
			}
		}
		LCT_war_support_chance_var = {
			country_event = {
				id = LCT_six_lords_demands.4
				days = 5
				random_hours = 24
				random_days = 13
			}
		}
	}
}

###Resistance System###

LCT_resistance_initiate = {
	set_country_flag = LCT_resistance_active
	
	set_variable = { LCT_global_government_support_growth = 0 }
	set_variable = { LCT_global_harmonist_support_growth = 0 }
	set_variable = { LCT_global_communist_support_growth = 0 }
	set_variable = { LCT_global_non_aligned_support_growth = 0 }
	set_variable = { LCT_global_supremacist_support_growth = 0 }

	add_to_array = { LCT_resistance_map_array = 387 }
	add_to_array = { LCT_resistance_map_array_id = 387.id }
	add_to_array = { LCT_resistance_map_array_x = 209 }
	add_to_array = { LCT_resistance_map_array_y = 98 }

	add_to_array = { LCT_resistance_map_array = 499 }
	add_to_array = { LCT_resistance_map_array_id = 499.id }
	add_to_array = { LCT_resistance_map_array_x = 177 }
	add_to_array = { LCT_resistance_map_array_y = 135 }

	add_to_array = { LCT_resistance_map_array = 505 }
	add_to_array = { LCT_resistance_map_array_id = 505.id }
	add_to_array = { LCT_resistance_map_array_x = 62 }
	add_to_array = { LCT_resistance_map_array_y = 161 }

	add_to_array = { LCT_resistance_map_array = 537 }
	add_to_array = { LCT_resistance_map_array_id = 537.id }
	add_to_array = { LCT_resistance_map_array_x = 78 }
	add_to_array = { LCT_resistance_map_array_y = 77 }

	add_to_array = { LCT_resistance_map_array = 540 }
	add_to_array = { LCT_resistance_map_array_id = 540.id }
	add_to_array = { LCT_resistance_map_array_x = 44 }
	add_to_array = { LCT_resistance_map_array_y = 126 }

	add_to_array = { LCT_resistance_map_array = 541 }
	add_to_array = { LCT_resistance_map_array_id = 541.id }
	add_to_array = { LCT_resistance_map_array_x = 143 }
	add_to_array = { LCT_resistance_map_array_y = 92 }

	add_to_array = { LCT_resistance_map_array = 550 }
	add_to_array = { LCT_resistance_map_array_id = 550.id }
	add_to_array = { LCT_resistance_map_array_x = 257 }
	add_to_array = { LCT_resistance_map_array_y = 96 }

	add_to_array = { LCT_resistance_map_array = 551 }
	add_to_array = { LCT_resistance_map_array_id = 551.id }
	add_to_array = { LCT_resistance_map_array_x = 219 }
	add_to_array = { LCT_resistance_map_array_y = 140 }

	add_to_array = { LCT_resistance_map_array = 552 }
	add_to_array = { LCT_resistance_map_array_id = 552.id }
	add_to_array = { LCT_resistance_map_array_x = 84 }
	add_to_array = { LCT_resistance_map_array_y = 113 }

	add_to_array = { LCT_resistance_map_array = 553 }
	add_to_array = { LCT_resistance_map_array_id = 553.id }
	add_to_array = { LCT_resistance_map_array_x = 9 }
	add_to_array = { LCT_resistance_map_array_y = 65 }

	add_to_array = { LCT_resistance_map_array = 560 }
	add_to_array = { LCT_resistance_map_array_id = 560.id }
	add_to_array = { LCT_resistance_map_array_x = 138 }
	add_to_array = { LCT_resistance_map_array_y = 134 }

	add_to_array = { LCT_resistance_map_array = 633 }
	add_to_array = { LCT_resistance_map_array_id = 633.id }
	add_to_array = { LCT_resistance_map_array_x = 5 }
	add_to_array = { LCT_resistance_map_array_y = 5 }

	add_to_array = { LCT_resistance_map_array = 634 }
	add_to_array = { LCT_resistance_map_array_id = 634.id }
	add_to_array = { LCT_resistance_map_array_x = 68 }
	add_to_array = { LCT_resistance_map_array_y = 15 }
	
	set_variable = { LCT_selected_resistance_state = 387 }
	
	add_to_array = { LCT_resistance_dummy_array = 0 }
	
	set_variable = { LCT_tab_resistance_bg = 2 }
	
	387 = { #Jezeragrad
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 58 } #Government
			add_to_array = { LCT_resistance_control = 16 } #Harmonists
			add_to_array = { LCT_resistance_control = 14 } #Non-Aligned
			add_to_array = { LCT_resistance_control = 12 } #Communists
			add_to_array = { LCT_resistance_control = 0 }  #Supremacists
		}
		else = {
			add_to_array = { LCT_resistance_control = 58 }
			add_to_array = { LCT_resistance_control = 16 }
			add_to_array = { LCT_resistance_control = 14 }
			add_to_array = { LCT_resistance_control = 12 }
		}
	}
	499 = { #Bucka
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 13 }
			add_to_array = { LCT_resistance_control = 7 }
			add_to_array = { LCT_resistance_control = 62 }
			add_to_array = { LCT_resistance_control = 18 }
			add_to_array = { LCT_resistance_control = 0 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 13 }
			add_to_array = { LCT_resistance_control = 7 }
			add_to_array = { LCT_resistance_control = 62 }
			add_to_array = { LCT_resistance_control = 18 }
		}
	}
	505 = { #Longbowgriff
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 3 }
			add_to_array = { LCT_resistance_control = 22 }
			add_to_array = { LCT_resistance_control = 5 }
			add_to_array = { LCT_resistance_control = 57 }
			add_to_array = { LCT_resistance_control = 13 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 6 }
			add_to_array = { LCT_resistance_control = 23 }
			add_to_array = { LCT_resistance_control = 8 }
			add_to_array = { LCT_resistance_control = 63 }
		}
	}
	537 = { #Hellquill
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 33 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 18 }
			add_to_array = { LCT_resistance_control = 11 }
			add_to_array = { LCT_resistance_control = 26 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 39 }
			add_to_array = { LCT_resistance_control = 20 }
			add_to_array = { LCT_resistance_control = 28 }
			add_to_array = { LCT_resistance_control = 13 }
		}
	}
	540 = { #Panacea
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 2 }
			add_to_array = { LCT_resistance_control = 18 }
			add_to_array = { LCT_resistance_control = 13 }
			add_to_array = { LCT_resistance_control = 53 }
			add_to_array = { LCT_resistance_control = 14 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 6 }
			add_to_array = { LCT_resistance_control = 20 }
			add_to_array = { LCT_resistance_control = 15 }
			add_to_array = { LCT_resistance_control = 59 }
		}
	}
	541 = { #Coltsovo
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 36 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 38 }
			add_to_array = { LCT_resistance_control = 14 }
			add_to_array = { LCT_resistance_control = 0 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 38 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 36 }
			add_to_array = { LCT_resistance_control = 14 }
		}
	}
	550 = { #Svetazemlja
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 8 }
			add_to_array = { LCT_resistance_control = 64 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 16 }
			add_to_array = { LCT_resistance_control = 0 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 8 }
			add_to_array = { LCT_resistance_control = 64 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 16 }
		}
	}
	551 = { #Shayrmia
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 36 }
			add_to_array = { LCT_resistance_control = 24 }
			add_to_array = { LCT_resistance_control = 28 }
			add_to_array = { LCT_resistance_control = 0 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 36 }
			add_to_array = { LCT_resistance_control = 24 }
			add_to_array = { LCT_resistance_control = 28 }
		}
	}
	552 = { #Swordsson
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 28 }
			add_to_array = { LCT_resistance_control = 13 }
			add_to_array = { LCT_resistance_control = 4 }
			add_to_array = { LCT_resistance_control = 14 }
			add_to_array = { LCT_resistance_control = 41 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 24 }
			add_to_array = { LCT_resistance_control = 23 }
			add_to_array = { LCT_resistance_control = 28 }
			add_to_array = { LCT_resistance_control = 25 }
		}
	}
	553 = { #Lone Domain
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 13 }
			add_to_array = { LCT_resistance_control = 6 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 15 }
			add_to_array = { LCT_resistance_control = 54 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 24 }
			add_to_array = { LCT_resistance_control = 13 }
			add_to_array = { LCT_resistance_control = 26 }
			add_to_array = { LCT_resistance_control = 37 }
		}
	}
	560 = { #Coltubar
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 14 }
			add_to_array = { LCT_resistance_control = 18 }
			add_to_array = { LCT_resistance_control = 51 }
			add_to_array = { LCT_resistance_control = 17 }
			add_to_array = { LCT_resistance_control = 0 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 14 }
			add_to_array = { LCT_resistance_control = 18 }
			add_to_array = { LCT_resistance_control = 51 }
			add_to_array = { LCT_resistance_control = 17 }
		}
	}
	633 = { #Brightcreeks
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 3 }
			add_to_array = { LCT_resistance_control = 5 }
			add_to_array = { LCT_resistance_control = 24 }
			add_to_array = { LCT_resistance_control = 17 }
			add_to_array = { LCT_resistance_control = 51 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 8 }
			add_to_array = { LCT_resistance_control = 18 }
			add_to_array = { LCT_resistance_control = 43 }
			add_to_array = { LCT_resistance_control = 31 }
		}
	}
	634 = { #Sondersune
		if = {
			limit = {
				ROOT = {
					has_country_flag = LCT_resistance_with_reformisten
				}
			}
			add_to_array = { LCT_resistance_control = 4 }
			add_to_array = { LCT_resistance_control = 31 }
			add_to_array = { LCT_resistance_control = 12 }
			add_to_array = { LCT_resistance_control = 7 }
			add_to_array = { LCT_resistance_control = 46 }
		}
		else = {
			add_to_array = { LCT_resistance_control = 7 }
			add_to_array = { LCT_resistance_control = 37 }
			add_to_array = { LCT_resistance_control = 28 }
			add_to_array = { LCT_resistance_control = 28 }
		}
	}
	
	set_variable = { LCT_resistance_relations_1_2 = 40 }
	set_variable = { LCT_resistance_relations_1_3 = 80 }
	set_variable = { LCT_resistance_relations_2_3 = 10 }
	
	if = {
		limit = {
			has_country_flag = LCT_resistance_with_reformisten
		}
		set_variable = { LCT_resistance_relations_1_4 = 0 }
		set_variable = { LCT_resistance_relations_2_4 = 15 }
		set_variable = { LCT_resistance_relations_3_4 = 0 }
	}
	
	for_each_loop = {
		array = LCT_resistance_map_array
		var:v = {
			find_highest_in_array = {
				array = LCT_resistance_control
				index = most_powerful_index
			}
			set_variable = { LCT_resistance_control_ruling_id = most_powerful_index }
			meta_effect = {
				text = {
					set_variable = { LCT_resistance_control_ruling = token:LCT_resistance_group_[GROUP] }
				}
				GROUP = "[?most_powerful_index]"
			}
		}
	}
	
	LCT_resistance_update_gui = yes
	
	for_each_scope_loop = {
		array = LCT_resistance_map_array_id
		set_variable = { LCT_government_support_growth = 0 }
		set_variable = { LCT_harmonist_support_growth = 0 }
		set_variable = { LCT_communist_support_growth = 0 }
		set_variable = { LCT_non_aligned_support_growth = 0 }
		set_variable = { LCT_supremacist_support_growth = 0 }
	}
}

LCT_resistance_change_mp = {
	add_to_variable = { LCT_military_police = temp_mp }
	custom_effect_tooltip = LCT_resistance_mp_CET
	clamp_variable = { var = LCT_military_police min = 0 }
	add_to_variable = { LCT_resistance_dirty = 0.01 }
}

# Accepted values:
#	temp_state: State ID
#	temp_group:	ID of group
#		- 0 -> The Government
#		- 1 -> PPS (Harmonites)
#		- 2 -> SSO (Non-aligned)
#		- 3 -> JIS (Communist)
#		- 4 -> UGS (Supremacists)
#	temp_value: Change of control value
LCT_resistance_change_control = {
	random_scope_in_array = {
	
		array = LCT_resistance_map_array	#Find temp_state in the array
		limit = { state = temp_state }
		
		if = {
			limit = {
				NOT = {
					AND = {
						check_variable = { temp_group = 1 }
						PREV = { has_country_flag = LCT_harmony_defeated }
					}
					AND = {
						check_variable = { temp_group = 2 }
						PREV = { has_country_flag = LCT_neutrality_defeated }
					}
					AND = {
						check_variable = { temp_group = 3 }
						PREV = { has_country_flag = LCT_communism_defeated }
					}
					AND = {
						check_variable = { temp_group = 4 }
						PREV = { has_country_flag = LCT_supremacy_defeated }
					}
				}
			}
			
			add_to_variable = { LCT_resistance_control^temp_group = temp_value }	#Add temp_value to the resistance level of temp_group
			
			clamp_variable = { var = LCT_resistance_control^temp_group min = 0 max = 100 }	#Clamp resistance value between 0 and 100
			
			### Create tooltip ###
			meta_effect = {
				text = {
					set_temp_variable = { temp_group_token = token:LCT_resistance_group_[GROUP] } # Going to hell for this
					custom_effect_tooltip = LCT_resistance_change_control_CET
				}
				GROUP = "[?temp_group]"
			}
			###
			
			LCT_resistance_calculate =  yes
		
		}
	}
}

# Accepted values:
#	temp_group_1 and temp_group_2: ID of group, smaller id comes first.
#		- 1 -> PPS (Harmonites)
#		- 2 -> SSO (Non-aligned)
#		- 3 -> JIS (Communist)
#		- 4 -> UGS (Supremacists)
#	temp_relations_change: Change of relations value
LCT_resistance_change_relations = {
	meta_effect = {
		text = {
			set_temp_variable = { temp_group_1_token = token:LCT_resistance_group_short_[GROUP1] }
			set_temp_variable = { temp_group_2_token = token:LCT_resistance_group_short_[GROUP2] }
			custom_effect_tooltip = LCT_resistance_change_relations_CET
			add_to_variable = { LCT_resistance_relations_[GROUP1]_[GROUP2] = temp_relations_change }
			clamp_variable = { var = LCT_resistance_relations_[GROUP1]_[GROUP2] min = 0 max = 100 }
		}
		GROUP1 = "[?temp_group_1]"
		GROUP2 = "[?temp_group_2]"
	}
	add_to_variable = { LCT_resistance_dirty = 0.01 }
}

LCT_resistance_calculate = {
	set_temp_variable = { total_value_check = 100 }	
	
	subtract_from_temp_variable = { total_value_check = LCT_resistance_control^temp_group }	#Set total_value_check to 100 - temp_group resistance value
	
	set_temp_variable = { total = 0 }
	
	for_each_loop = {	#Loop over all other resistance groups in state
		array = LCT_resistance_control
		index = o
		value = b
		if = {
			limit = {
				NOT = {
					check_variable = { temp_group = o }
					AND = {
						check_variable = { o = 1 }
						has_country_flag = LCT_harmony_defeated
					}
					AND = {
						check_variable = { o = 2 }
						has_country_flag = LCT_neutrality_defeated
					}
					AND = {
						check_variable = { o = 3 }
						has_country_flag = LCT_communism_defeated
					}
					AND = {
						check_variable = { o = 4 }
						has_country_flag = LCT_supremacy_defeated
					}
				}
			}
			add_to_temp_variable = { total = b }	#Set total to the sum of all other resistance groups
		}
	}
	divide_temp_variable = { total = total_value_check }	#divide total by total_value_check
	
	for_each_loop = {	#Loop over all other resistance groups in state
		array = LCT_resistance_control
		index = o
		value = b
		if = {
			limit = {
				NOT = {
					check_variable = { temp_group = o }
					AND = {
						check_variable = { o = 1 }
						has_country_flag = LCT_harmony_defeated
					}
					AND = {
						check_variable = { o = 2 }
						has_country_flag = LCT_neutrality_defeated
					}
					AND = {
						check_variable = { o = 3 }
						has_country_flag = LCT_communism_defeated
					}
					AND = {
						check_variable = { o = 4 }
						has_country_flag = LCT_supremacy_defeated
					}
				}
			}
			divide_variable = { LCT_resistance_control^o = total }	#divide resistance level of each other group by total to appropriately scale them to the changed value
		}
	}
	
	find_highest_in_array = {	#Find the most powerful faction 
		array = LCT_resistance_control
		index = most_powerful_index
	}
	
	set_variable = { LCT_resistance_control_ruling_id = most_powerful_index }	#Set state ruling faction ID
	
	meta_effect = {		#Set token variable for GUI
		text = {
			set_variable = { LCT_resistance_control_ruling = token:LCT_resistance_group_[GROUP] }
		}
		GROUP = "[?most_powerful_index]"
	}
	
	ROOT = {
		LCT_resistance_update_gui = yes
	}
}

LCT_resistance_update_gui = {
	set_variable = { progressbar_1_frame = LCT_selected_resistance_state:LCT_resistance_control^0 }
	add_to_variable = { progressbar_1_frame = LCT_selected_resistance_state:LCT_resistance_control^1 }
	set_variable = { progressbar_2_frame = progressbar_1_frame }
	add_to_variable = { progressbar_2_frame = LCT_selected_resistance_state:LCT_resistance_control^2 }
	set_variable = { progressbar_3_frame = progressbar_2_frame }
	add_to_variable = { progressbar_3_frame = LCT_selected_resistance_state:LCT_resistance_control^3 }
	set_variable = { progressbar_4_frame = progressbar_3_frame }
	add_to_variable = { progressbar_4_frame = LCT_selected_resistance_state:LCT_resistance_control^4 }
	
	set_variable = { progressbar_txt_0_x = LCT_selected_resistance_state:LCT_resistance_control^0 }
	divide_variable = { progressbar_txt_0_x = 200 }
	multiply_variable = { progressbar_txt_0_x = 404 }
	
	set_variable = { progressbar_txt_1_x = LCT_selected_resistance_state:LCT_resistance_control^1 }
	divide_variable = { progressbar_txt_1_x = 2 }
	add_to_variable = { progressbar_txt_1_x = LCT_selected_resistance_state:LCT_resistance_control^0 }
	divide_variable = { progressbar_txt_1_x = 100 }
	multiply_variable = { progressbar_txt_1_x = 404 }

	set_variable = { progressbar_txt_2_x = LCT_selected_resistance_state:LCT_resistance_control^2 }
	divide_variable = { progressbar_txt_2_x = 2 }
	add_to_variable = { progressbar_txt_2_x = LCT_selected_resistance_state:LCT_resistance_control^0 }
	add_to_variable = { progressbar_txt_2_x = LCT_selected_resistance_state:LCT_resistance_control^1 }
	divide_variable = { progressbar_txt_2_x = 100 }
	multiply_variable = { progressbar_txt_2_x = 404 }

	set_variable = { progressbar_txt_3_x = LCT_selected_resistance_state:LCT_resistance_control^3 }
	divide_variable = { progressbar_txt_3_x = 2 }
	add_to_variable = { progressbar_txt_3_x = LCT_selected_resistance_state:LCT_resistance_control^0 }
	add_to_variable = { progressbar_txt_3_x = LCT_selected_resistance_state:LCT_resistance_control^1 }
	add_to_variable = { progressbar_txt_3_x = LCT_selected_resistance_state:LCT_resistance_control^2 }
	divide_variable = { progressbar_txt_3_x = 100 }
	multiply_variable = { progressbar_txt_3_x = 404 }

	set_variable = { progressbar_txt_4_x = LCT_selected_resistance_state:LCT_resistance_control^4 }
	divide_variable = { progressbar_txt_4_x = 2 }
	add_to_variable = { progressbar_txt_4_x = LCT_selected_resistance_state:LCT_resistance_control^0 }
	add_to_variable = { progressbar_txt_4_x = LCT_selected_resistance_state:LCT_resistance_control^1 }
	add_to_variable = { progressbar_txt_4_x = LCT_selected_resistance_state:LCT_resistance_control^2 }
	add_to_variable = { progressbar_txt_4_x = LCT_selected_resistance_state:LCT_resistance_control^3 }
	divide_variable = { progressbar_txt_4_x = 100 }
	multiply_variable = { progressbar_txt_4_x = 404 }
	
	add_to_variable = { LCT_resistance_dirty = 0.01 }
}

LCT_resistance_calculate_average_support = {
	set_variable = { LCT_average_democracy_support = 0 }
	set_variable = { LCT_average_communism_support = 0 }
	set_variable = { LCT_average_non_aligned_support = 0 }
	set_variable = { LCT_average_supremacy_support = 0 }
}

LCT_check_for_100 = {
	for_each_loop = {
		array = LCT_resistance_map_array
		var:v = {
			set_temp_variable = { check = 0 }
			for_each_loop = {
				array = LCT_resistance_control
				index = o
				value = b
				add_to_temp_variable = { check = b }
			}
			if = {
				limit = {
					check_variable = { var = check value = 100 compare = not_equals }
				}
				log = "[THIS.GetName] LCT_resistance_control DOESNT ADD UP TO 100: [?check|R]"
			}
		}
	}
}

LCT_start_vartai_war = {
	if = {
		limit = {
			country_exists = LNS
		}
		declare_war_on = {
            target = LNS
            type = annex_everything
        }
	}
	
	if = {
		limit = {
			country_exists = LSM
		}
		declare_war_on = {
            target = LSM
            type = annex_everything
        }
	}
	
	if = {
		limit = {
			country_exists = LSC
		}
		declare_war_on = {
            target = LSC
            type = annex_everything
        }
	}
	
	if = {
		limit = {
			country_exists = HLQ
		}
		declare_war_on = {
            target = HLQ
            type = annex_everything
        }
	}
	
	hidden_effect = {
		for_each_scope_loop = {
			array = LCT_will_join_hellwar
			if = {
				limit = {
					country_exists = LNS
				}
				DEP = {
					declare_war_on = {
						target = LNS
						type = annex_everything
					}
				}
			}
			if = {
				limit = {
					country_exists = LSM
				}
				DEP = {
					declare_war_on = {
						target = LSM
						type = annex_everything
					}
				}
			}
			if = {
				limit = {
					country_exists = LSC
				}
				DEP = {
					declare_war_on = {
						target = LSC
						type = annex_everything
					}
				}
			}
			if = {
				limit = {
					country_exists = HLQ
				}
				DEP = {
					declare_war_on = {
						target = HLQ
						type = annex_everything
					}
				}
			}
		}
		clear_array = LCT_will_join_hellwar
	}
}

LCT_add_home_resistance_modifiers = {
	custom_effect_tooltip = LCT_add_home_resistance_modifiers_tooltip
	hidden_effect = {
		set_variable = { LCT_six_lords_home_resistance_edition_social_var = -0.9 }
		add_dynamic_modifier = { modifier = LCT_six_lords_home_resistance_edition_social }
		
		set_variable = { LCT_six_lords_home_resistance_edition_industrial_var = -0.9 }
		set_variable = { LCT_six_lords_home_resistance_edition_industrial_inv_var = 0.9 }
		add_dynamic_modifier = { modifier = LCT_six_lords_home_resistance_edition_industrial }
		
		set_variable = { LCT_six_lords_home_resistance_edition_military_var = -0.9 }
		set_variable = { LCT_six_lords_home_resistance_edition_military_inv_var = 0.9 }
		add_dynamic_modifier = { modifier = LCT_six_lords_home_resistance_edition_military }
	}
}

LCT_reduce_home_resistance_social_modifier = {
	custom_effect_tooltip = LCT_reduce_home_resistance_social_modifier_tooltip

	add_to_variable = { LCT_six_lords_home_resistance_edition_social_var = 0.1s }
}

LCT_reduce_home_resistance_industrial_modifier = {
	custom_effect_tooltip = LCT_reduce_home_resistance_social_industrial_tooltip
	
	add_to_variable = { LCT_six_lords_home_resistance_edition_industrial_var = 0.225 }
	subtract_from_variable = { LCT_six_lords_home_resistance_edition_industrial_inv_var = 0.225 }
}

LCT_reduce_home_resistance_military_modifier = {
	custom_effect_tooltip = LCT_reduce_home_resistance_social_military_tooltip

	add_to_variable = { LCT_six_lords_home_resistance_edition_military_var = 0.225 }
	subtract_from_variable = { LCT_six_lords_home_resistance_edition_military_inv_var = 0.225 }
}

LCT_resistance_events_selection = {
	random_scope_in_array = {
		array = LCT_resistance_map_array
		ROOT = {
			set_variable = { LCT_resistance_event_state = PREV }
		}
		random_list = {
			40 = { #Attempt overt event
				if = {
					limit = {
						NOT = {
							check_variable = { LCT_resistance_control_ruling_id = 0 }
						}
					}
					if = {	#Harmony
						limit = {
							check_variable = { LCT_resistance_control_ruling_id = 1 }
						}
						random_list = {
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.4
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.5
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.6
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.7
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
						}
					}
					if = {	#Non-Aligned
						limit = {
							check_variable = { LCT_resistance_control_ruling_id = 2 }
						}
						ROOT = {
							country_event = {
								id = LCT_lords_resist.16
								days = 1
								random_hours = 12
								random_days = 2
							}
						}
					}
					if = {	#Communism
						limit = {
							check_variable = { LCT_resistance_control_ruling_id = 3 }
						}
						random_list = {
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.11
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.12
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
							10 = {
								ROOT = {
									country_event = {
										id = LCT_lords_resist.13
										days = 1
										random_hours = 12
										random_days = 2
									}
								}
							}
						}
					}
					if = {	#Supremacy
						limit = {
							check_variable = { LCT_resistance_control_ruling_id = 4 }
						}
						ROOT = {
							country_event = {
								id = LCT_lords_resist.21
								days = 1
								random_hours = 12
								random_days = 2
							}
						}
					}
				}
			}
			
			60 = { #Attempt subversive event
				if = {
					limit = {
						ROOT = {
							has_country_flag = LCT_resistance_with_reformisten
						}
					}
					random_list = {
						10 = {	#Harmony
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^1
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.1
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.2
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.3
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
						10 = {	#Non-Aligned
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^2
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.14
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.15
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.17
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.18
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
						10 = {	#Communism
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^3
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.8
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.9
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.10
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
						10 = {	#Supremacy
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^4
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.19
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.20
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.22
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.23
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
					}
				}
				else = {
					random_list = {
						10 = {	#Harmony
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^1
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.1
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.2
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.3
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
						10 = {	#Non-Aligned
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^2
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.14
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.15
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.17
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.18
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
						10 = {	#Communism
							if = {
								limit = {
									check_variable = {
										var = LCT_resistance_control^3
										value = 15
										compare = greater_than_or_equals
									}
								}
								random_list = {
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.8
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.9
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
									10 = {
										ROOT = {
											country_event = {
												id = LCT_lords_resist.10
												days = 1
												random_hours = 12
												random_days = 2
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

LCT_deactivate_harmony = {
	set_country_flag = LCT_harmony_defeated
	for_each_scope_loop = {
		array = LCT_resistance_map_array_id
	
		set_variable = { LCT_resistance_control^1 = 0 }
	}
	for_each_loop = {
		array = LCT_resistance_map_array_id
		value = v
		set_temp_variable = { temp_state = v }
		set_temp_variable = { temp_group = 0 }
		set_temp_variable = { temp_value = 0 }
		LCT_resistance_change_control = yes
	}
}

LCT_deactivate_neutrality = {
	set_country_flag = LCT_neutrality_defeated
	for_each_scope_loop = {
		array = LCT_resistance_map_array_id
	
		set_variable = { LCT_resistance_control^2 = 0 }
	}
	for_each_loop = {
		array = LCT_resistance_map_array_id
		value = v
		set_temp_variable = { temp_state = v }
		set_temp_variable = { temp_group = 0 }
		set_temp_variable = { temp_value = 0 }
		LCT_resistance_change_control = yes
	}
}

LCT_deactivate_comunism = {
	set_country_flag = LCT_communism_defeated
	for_each_scope_loop = {
		array = LCT_resistance_map_array_id
	
		set_variable = { LCT_resistance_control^3 = 0 }
	}
	for_each_loop = {
		array = LCT_resistance_map_array_id
		value = v
		set_temp_variable = { temp_state = v }
		set_temp_variable = { temp_group = 0 }
		set_temp_variable = { temp_value = 0 }
		LCT_resistance_change_control = yes
	}
}

LCT_deactivate_supremacy = {
	set_country_flag = LCT_supremacy_defeated
	for_each_scope_loop = {
		array = LCT_resistance_map_array_id
	
		set_variable = { LCT_resistance_control^4 = 0 }
	}
	for_each_loop = {
		array = LCT_resistance_map_array_id
		value = v
		set_temp_variable = { temp_state = v }
		set_temp_variable = { temp_group = 0 }
		set_temp_variable = { temp_value = 0 }
		LCT_resistance_change_control = yes
	}
}

LCT_decrease_administrative_resistance = {
	if = {
		limit = {
			has_idea = LCT_administrative_resistance0
		}
		swap_ideas = {
			remove_idea = LCT_administrative_resistance0
			add_idea = LCT_administrative_resistance1
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_administrative_resistance1
		}
		swap_ideas = {
			remove_idea = LCT_administrative_resistance1
			add_idea = LCT_administrative_resistance2
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_administrative_resistance2
		}
		remove_ideas = LCT_administrative_resistance2
	}
}

LCT_decrease_military_politics = {
	if = {
		limit = {
			has_idea = LCT_military_politics0
		}
		swap_ideas = {
			remove_idea = LCT_military_politics0
			add_idea = LCT_military_politics1
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_military_politics1
		}
		swap_ideas = {
			remove_idea = LCT_military_politics1
			add_idea = LCT_military_politics2
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_military_politics2
		}
		swap_ideas = {
			remove_idea = LCT_military_politics2
			add_idea = LCT_military_politics3
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_military_politics3
		}
		swap_ideas = {
			remove_idea = LCT_military_politics3
			add_idea = LCT_military_politics4
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_military_politics4
		}
		swap_ideas = {
			remove_idea = LCT_military_politics4
			add_idea = LCT_military_politics5
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_military_politics5
		}
		remove_ideas = LCT_military_politics5
	}
}

LCT_failed_demand_effect = {
	set_temp_variable = { temp_pentalty_value = LCT_six_lords_failed_missions }
	add_to_temp_variable = { temp_pentalty_value = 1 }
	divide_temp_variable = { temp_pentalty_value = -100 }
	add_stability = temp_pentalty_value
}

#Don't ask me why I coded it this way
LCT_HPE_increase_tension_one = {
	add_to_variable = { LCT_HPE_tension_var = 1 }
	add_to_variable = { LCT_HPE_tension_var_plus_one = 1 }
	add_to_variable = { LCT_HPE_tension_var_plus_two = 1 }
	add_to_variable = { LCT_HPE_tension_var_minus_one = 1 }
	
	custom_effect_tooltip = LCT_HPE_tension_increase_one_tt
	
	if = {
		limit = {
			check_variable = { LCT_HPE_tension_var > 3 }
		}
		LCT_HPE_set_failstate = yes
	}
}

LCT_HPE_increase_tension_two = {
	add_to_variable = { LCT_HPE_tension_var = 2 }
	add_to_variable = { LCT_HPE_tension_var_plus_one = 2 }
	add_to_variable = { LCT_HPE_tension_var_plus_two = 2 }
	add_to_variable = { LCT_HPE_tension_var_minus_one = 2 }
	
	custom_effect_tooltip = LCT_HPE_tension_increase_two_tt
	
	if = {
		limit = {
			check_variable = { LCT_HPE_tension_var > 3 }
		}
		LCT_HPE_set_failstate = yes
	}
}

LCT_HPE_decrease_tension_one = {
	if = {
		limit = {
			check_variable = { LCT_HPE_tension_var > 0 }
		}
		subtract_from_variable = { LCT_HPE_tension_var = 1 }
		subtract_from_variable = { LCT_HPE_tension_var_plus_one = 1 }
		subtract_from_variable = { LCT_HPE_tension_var_plus_two = 1 }
		subtract_from_variable = { LCT_HPE_tension_var_minus_one = 1 }
		
		custom_effect_tooltip = LCT_HPE_tension_decrease_one_tt
	}
}

LCT_HPE_set_failstate = {
	hidden_effect = {
		set_country_flag = LCT_giga_war_failstate
		remove_mission = LCT_big_money_factory_relocation_demand
		remove_mission = LCT_smoke_signal_artillery_demand
		remove_mission = LCT_daring_dream_manpower_demand
		remove_mission = LCT_star_talent_war_strategy_demand
		remove_mission = LCT_flaming_hot_land_demand
		remove_mission = LCT_flaming_hot_asterion_war
		dismantle_faction = yes
		STC = {
			LCT = {
				set_autonomy = {
					target = PREV
					autonomous_state = autonomy_free
					end_wars = no
					end_civil_wars = no
				}
			}
			every_other_country = {
				limit = {
					has_country_flag = LCT_HPE_member
				}
				declare_war_on = {
					target = PREV
					type = annex_everything
				}
			}
		}
		DOF = {
			LCT = {
				set_autonomy = {
					target = PREV
					autonomous_state = autonomy_free
					end_wars = no
					end_civil_wars = no
				}
			}
			every_other_country = {
				limit = {
					has_country_flag = LCT_HPE_member
				}
				declare_war_on = {
					target = PREV
					type = annex_everything
				}
			}
		}
		HIZ = {
			LCT = {
				set_autonomy = {
					target = PREV
					autonomous_state = autonomy_free
					end_wars = no
					end_civil_wars = no
				}
			}
			every_other_country = {
				limit = {
					has_country_flag = LCT_HPE_member
				}
				declare_war_on = {
					target = PREV
					type = annex_everything
				}
			}
		}
		SUF = {
			LCT = {
				set_autonomy = {
					target = PREV
					autonomous_state = autonomy_free
					end_wars = no
					end_civil_wars = no
				}
			}
			every_other_country = {
				limit = {
					has_country_flag = LCT_HPE_member
				}
				declare_war_on = {
					target = PREV
					type = annex_everything
				}
			}
		}
		NOF = {
			LCT = {
				set_autonomy = {
					target = PREV
					autonomous_state = autonomy_free
					end_wars = no
					end_civil_wars = no
				}
			}
			every_other_country = {
				limit = {
					has_country_flag = LCT_HPE_member
				}
				declare_war_on = {
					target = PREV
					type = annex_everything
				}
			}
		}
		every_other_country = {
			limit = {
				has_country_flag = LCT_HPE_member
			}
			declare_war_on = {
				target = PREV
				type = annex_everything
			}
		}
		country_event = LCT_six_lords.85
	}
}

LCT_HPE_balkanize = {
	custom_effect_tooltip = LCT_HPE_balkanize_tt
	hidden_effect = {
		
		#Step 1: Gather all occupied tags myself because for some reason the occupied_countries array doesn't have them all.
		every_owned_state = {
			limit = {
				is_fully_controlled_by = ROOT
			}
			log = "[THIS.GetName] looped"
			#log = "ROOT: [ROOT.GetNameDef]"
			for_each_scope_loop = {
				array = core_countries
				if = {
					limit = {
						LCT_HPE_is_balkanizable = yes
						OR = {
							exists = no
							is_subject_of = ROOT
						}
						NOT = {
							has_country_flag = temp_added_to_array
						}
					}
					set_country_flag = temp_added_to_array
					add_to_temp_array = {
						array = temp_countries_to_release
						value = THIS
					}
					log = "[THIS.GetNameDefCap] added"
				}
			}
		}
		log = "All countries gathered"
		
		#Step 2: Sort countries by size. This prevents countries from not being released in certain circumstances.
		get_sorted_scored_countries_temp = {
			scorer = HPE_largest_country
			array = temp_countries_to_release_sorted
			scores = temp_countries_to_release_scores
		}
		log = "All countries sorted"
		
		#Step 3: Release all occupied tags as puppets
		log = "Releasing countries"
		for_each_scope_loop = {
			log = "[THIS.GetNameDefCap] start"
			array = temp_countries_to_release_sorted
			if = {
				limit = {
					OR = {
						exists = no
						is_subject_of = ROOT
					}
				}
				
				#Assign a default focus tree
				if = {
					limit = {
						is_griffon_continent_country = yes
					}
					load_focus_tree = generic_griffon_focus
				}
				else_if = {
					limit = {
						is_zebrican_continent_country = yes
					}
					load_focus_tree = generic_zebra_focus
				}
				else = {
					load_focus_tree = generic_focus
				}
				
				clr_country_flag = temp_added_to_array
				
				for_each_scope_loop = {
					array = original_cores
					if = {
						limit = {
							OR = {
								owner = { tag = ROOT }
								owner = { is_subject_of = ROOT }
							}
						}
						transfer_state_to = PREV
					}
					set_demilitarized_zone = no
				}
				
				#This code subdivides large countries into smaller ones. Was removed for being too... much. Add back in at your own risk.
#				if = {
#					limit = {
#						num_of_controlled_states > 10
#					}
#					
#					#Chop it up if it is
#					set_temp_variable = { temp_sub_country_count = num_owned_states }
#					divide_temp_variable = { temp_sub_country_count = 10 }
#					round_temp_variable = temp_sub_country_count
#					
#					set_temp_variable = { temp_sub_country_state_count = num_owned_states }
#					divide_temp_variable = { temp_sub_country_state_count = temp_sub_country_count }
#					round_temp_variable = temp_sub_country_state_count
#					
#					set_temp_variable = { temp_while1_counter = 0 }
#					while_loop_effect = {
#						limit = {
#							check_variable = { temp_sub_country_count > temp_while1_counter }
#						}
#						random_owned_state = {
#							PREV = {
#								set_temp_variable = { temp_sub_country_starting_state = PREV.id }
#							}
#						}
#						
#						#Create the dynamic country
#						create_dynamic_country = {
#							original_tag = THIS
#							copy_tag = THIS
#							transfer_state = var:temp_sub_country_starting_state
#							
#							set_temp_variable = { temp_while2_counter = 1 }
#							while_loop_effect = {
#								limit = {
#									check_variable = { temp_sub_country_state_count > temp_while2_counter }
#								}
#								
#								PREV = {
#									random_owned_state = {
#										limit = {
#											any_neighbor_state = {
#												owner = {
#													tag = PREV.PREV.PREV.PREV
#												}
#											}
#										}
#										transfer_state_to = PREV.PREV
#									}
#								}
#								
#								add_to_temp_variable = { temp_while2_counter = 1 }
#							}
#							LCT_HPE_make_subject = yes
#						}
#						add_to_temp_variable = { temp_while1_counter = 1 }
#					}
#				}
				
				#Now we set them as a puppet and choose a name for it
				LCT_HPE_make_subject = yes
				
				#Replace leader if required
				if = {
					limit = {
						LCT_HPE_replace_leader = yes
					}
					retire_country_leader = yes
				}
				
				if = {
					limit = {
						exists = yes
					}
					add_to_array = { LCT.LCT_HPE_members = THIS }
				}
			}
			log = "[THIS.GetNameDefCap] end"
		}
	}
}

LCT_HPE_make_subject = {
	set_country_flag = LCT_HPE_member
	clr_country_flag = have_regular_puppets
	LCT = {
		set_autonomy = {
			target = PREV
			autonomous_state = autonomy_vassal
			end_wars = yes
			end_civil_wars = yes
		}
	}
	add_ideas = LCT_imperial_tithes
	set_popularities = {
		democratic = 16
		neutrality = 55
		fascism = 22
		communism = 7
	}
	set_politics = {
		ruling_party = neutrality
		elections_allowed = no
	}
	LCT_HPE_choose_name = yes
}

LCT_HPE_choose_name = {
	drop_cosmetic_tag = yes
	if = {
		limit = {
			num_of_controlled_states < 2
		}
		set_cosmetic_tag = LCT_HPE_free_city
	}
	else = {
		random_list = {
			10 = {
				set_cosmetic_tag = LCT_HPE_generic1
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic2
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic3
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic4
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic5
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic6
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic7
			}
			10 = {
				set_cosmetic_tag = LCT_HPE_generic8
			}
		}
	}
}

LCT_HPE_assign_base_ideas = {
	add_ideas = {
		proper_science_base
		poverty3
		modern_society
		lack_of_scientists3
		griffon_race
		partial_economic_mobilisation
		export_focus
		extensive_conscription
		LCT_imperial_tithes
	}
	set_country_flag = LCT_HPE_member
}

LCT_form_HPE = {
	hidden_effect = {
		#Set up some variables
		set_variable = { LCT_HPE_tension_var = 0 }
		set_variable = { LCT_HPE_tension_var_plus_one = 1 }
		set_variable = { LCT_HPE_tension_var_plus_two = 2 }
		set_variable = { LCT_HPE_tension_var_minus_one = -1 }
		
		RIV_leave_fed = yes
		create_faction = LCT_HPE_faction_name
		set_country_flag = LCT_formed_HPE
		mark_focus_tree_layout_dirty = yes
		set_cosmetic_tag = LCT_HPE
		
		promote_character = LCT_solid_rocks
		set_country_flag = LCT_HPE_member
		add_to_array = { LCT_HPE_members = THIS }
		
		#Star Counter
		create_dynamic_country = {
			original_tag = GRI
			copy_tag = GRI
			
			save_global_event_target_as = LCT_HPE_STC_target
			set_country_flag = have_regular_puppets
			set_country_flag = LCT_HPE_member
			set_country_flag = LCT_HPE_herzland_protectorate
			every_core_state = { remove_core_of = PREV }
			add_to_array = { LCT.LCT_HPE_members = THIS }
			LCT_HPE_assign_base_ideas = yes
			
			transfer_state = 382
			transfer_state = 437
			transfer_state = 405
			transfer_state = 397
			transfer_state = 555
			transfer_state = 402
			transfer_state = 665
			transfer_state = 439
			transfer_state = 398
			transfer_state = 399
			transfer_state = 424
			transfer_state = 492
			transfer_state = 479
			transfer_state = 674
			add_state_core = 674
			add_state_core = 437
			add_state_core = 405
			add_state_core = 397
			add_state_core = 555
			add_state_core = 345
			add_state_core = 402
			add_state_core = 665
			add_state_core = 439
			add_state_core = 398
			add_state_core = 399
			add_state_core = 424
			add_state_core = 492
			add_state_core = 479
			
			set_capital = {
				state = 382
				remember_old_capital = no
			}
			
			set_popularities = {
				democratic = 15
				neutrality = 30
				fascism = 50
				communism = 5
			}
			set_politics = {
				ruling_party = fascism
			   	elections_allowed = no
			}
			set_party_name = {
				ideology = fascism
				long_name = STC_party
				name = STC_party_long
			}
			load_focus_tree = barrad_focus_viira_bonus
			set_cosmetic_tag = LCT_HPE_STAR
			
			PREV = {
				LCT_star_talent = {
					set_nationality = PREV.PREV
					promote_character = yes
				}
			}
		}
		
		#Dominion of Flame
		create_dynamic_country = {
			original_tag = GRI
			copy_tag = GRI
			
			save_global_event_target_as = LCT_HPE_DOF_target
			set_country_flag = have_regular_puppets
			set_country_flag = LCT_HPE_member
			set_country_flag = LCT_HPE_herzland_protectorate
			every_core_state = { remove_core_of = PREV }
			add_to_array = { LCT.LCT_HPE_members = THIS }
			LCT_HPE_assign_base_ideas = yes
			
			transfer_state = 411
			transfer_state = 547
			transfer_state = 422
			transfer_state = 423
			transfer_state = 506
			transfer_state = 554
			
			add_state_core = 411
			add_state_core = 547
			add_state_core = 422
			add_state_core = 423
			add_state_core = 506
			add_state_core = 554
			
			set_capital = {
				state = 423
				remember_old_capital = no
			}
			
			set_popularities = {
				democratic = 15
				neutrality = 30
				fascism = 50
				communism = 5
			}
			set_politics = {
				ruling_party = fascism
			   	elections_allowed = no
			}
			set_party_name = {
				ideology = fascism
				long_name = DOF_party
				name = DOF_party_long
			}
			load_focus_tree = barrad_focus_viira_bonus
			set_cosmetic_tag = LCT_HPE_HOT
			
			PREV = {
				LCT_flaming_hot = {
					set_nationality = PREV.PREV
					promote_character = yes
				}
			}
		}
		
		#Herzland Industrial Zone
		create_dynamic_country = {
			original_tag = GRI
			copy_tag = GRI
			
			save_global_event_target_as = LCT_HPE_HIZ_target
			set_country_flag = have_regular_puppets
			set_country_flag = LCT_HPE_member
			set_country_flag = LCT_HPE_herzland_protectorate
			every_core_state = { remove_core_of = PREV }
			add_to_array = { LCT.LCT_HPE_members = THIS }
			LCT_HPE_assign_base_ideas = yes
			
			transfer_state = 666
			transfer_state = 440
			transfer_state = 443
			transfer_state = 520
			transfer_state = 441
			transfer_state = 498
			transfer_state = 458
			
			add_state_core = 666
			add_state_core = 440
			add_state_core = 443
			add_state_core = 520
			add_state_core = 441
			add_state_core = 498
			add_state_core = 458
			
			set_capital = {
				state = 520
				remember_old_capital = no
			}
			
			add_ideas = {
				volunteer_only
				civilian_economy
			}
			
			set_popularities = {
				democratic = 15
				neutrality = 30
				fascism = 50
				communism = 5
			}
			set_politics = {
				ruling_party = fascism
			   	elections_allowed = no
			}
			set_party_name = {
				ideology = fascism
				long_name = HIZ_party
				name = HIZ_party_long
			}
			load_focus_tree = barrad_focus_viira_bonus
			set_cosmetic_tag = LCT_HPE_MONEY
			
			PREV = {
				LCT_big_money = {
					set_nationality = PREV.PREV
					promote_character = yes
				}
			}
		}
		
		#SOUF
		create_dynamic_country = {
			original_tag = GRI
			copy_tag = GRI
			
			save_global_event_target_as = LCT_HPE_SUF_target
			set_country_flag = have_regular_puppets
			set_country_flag = LCT_HPE_member
			set_country_flag = LCT_HPE_herzland_protectorate
			every_core_state = { remove_core_of = PREV }
			add_to_array = { LCT.LCT_HPE_members = THIS }
			LCT_HPE_assign_base_ideas = yes
			
			transfer_state = 434
			transfer_state = 497
			transfer_state = 378
			transfer_state = 447
			
			add_state_core = 434
			add_state_core = 497
			add_state_core = 378
			add_state_core = 447
			
			set_capital = {
				state = 378
				remember_old_capital = no
			}
			
			set_popularities = {
				democratic = 15
				neutrality = 30
				fascism = 50
				communism = 5
			}
			set_politics = {
				ruling_party = fascism
			   	elections_allowed = no
			}
			set_party_name = {
				ideology = fascism
				long_name = SUF_party
				name = SUF_party_long
			}
			load_focus_tree = barrad_focus_viira_bonus
			set_cosmetic_tag = LCT_HPE_SMOKE
			
			PREV = {
				LCT_smoke_signal = {
					set_nationality = PREV.PREV
					promote_character = yes
				}
			}
		}
		
		#NORF
		create_dynamic_country = {
			original_tag = GRI
			copy_tag = GRI
			
			save_global_event_target_as = LCT_HPE_NOF_target
			set_country_flag = have_regular_puppets
			set_country_flag = LCT_HPE_member
			set_country_flag = LCT_HPE_herzland_protectorate
			every_core_state = { remove_core_of = PREV }
			add_to_array = { LCT.LCT_HPE_members = THIS }
			LCT_HPE_assign_base_ideas = yes
			
			transfer_state = 486
			transfer_state = 546
			transfer_state = 545
			transfer_state = 539
			transfer_state = 568
			transfer_state = 538
			transfer_state = 433
			
			add_state_core = 486
			add_state_core = 546
			add_state_core = 545
			add_state_core = 539
			add_state_core = 568
			add_state_core = 538
			add_state_core = 433
			
			set_capital = {
				state = 486
				remember_old_capital = no
			}
			
			set_popularities = {
				democratic = 15
				neutrality = 30
				fascism = 50
				communism = 5
			}
			set_politics = {
				ruling_party = fascism
			   	elections_allowed = no
			}
			set_party_name = {
				ideology = fascism
				long_name = NOF_party
				name = NOF_party_long
			}
			load_focus_tree = barrad_focus_viira_bonus
			set_cosmetic_tag = LCT_HPE_DREAM
			
			PREV = {
				LCT_daring_dream = {
					set_nationality = PREV.PREV
					promote_character = yes
				}
			}
		}
		
		set_autonomy = {
			target = STC
			autonomous_state = autonomy_reichsprotectorate
			end_wars = yes
			end_civil_wars = yes
		}
		set_autonomy = {
			target = DOF
			autonomous_state = autonomy_reichsprotectorate
			end_wars = yes
			end_civil_wars = yes
		}
		set_autonomy = {
			target = HIZ
			autonomous_state = autonomy_reichsprotectorate
			end_wars = yes
			end_civil_wars = yes
		}
		set_autonomy = {
			target = SUF
			autonomous_state = autonomy_reichsprotectorate
			end_wars = yes
			end_civil_wars = yes
		}
		set_autonomy = {
			target = NOF
			autonomous_state = autonomy_reichsprotectorate
			end_wars = yes
			end_civil_wars = yes
		}
	}
}

#Makes entire HPE declare war on current scope
LCT_HPE_declare_war_on_THIS = {
	custom_effect_tooltip = LCT_HPE_war_declaration_effect_tt
	hidden_effect = {
		LCT = {
			declare_war_on = {
				type = annex_everything
				target = PREV
			}
			for_each_scope_loop = {
				array = LCT.LCT_HPE_members
				
				declare_war_on = {
					target = PREV.PREV
					type = annex_everything
				}
			}
		}
	}
}

LCT_HPE_bring_into_war_on_THIS = {
	custom_effect_tooltip = LCT_HPE_bring_into_war_tt
	hidden_effect = {
		for_each_scope_loop = {
			array = LCT.LCT_HPE_members
			
			declare_war_on = {
				target = PREV
				type = annex_everything
			}
		}
	}
}

#Makes current scope declare war on entire HPE
LCT_declare_war_on_HPE = {
	custom_effect_tooltip = LCT_declare_war_on_HPE_effect_tt
	hidden_effect = {
		declare_war_on = {
			type = annex_everything
			target = LCT
		}
		LCT = {
			every_subject_country = {
				ROOT = {
					declare_war_on = {
						type = annex_everything
						target = PREV
					}
				}
			}
		}
	}
}

LCT_flaming_hot_demand_reward = {
	if = {
		limit = {
			has_idea = LCT_flaming_hot_reward_idea1
		}
		swap_ideas = {
			remove_idea = LCT_flaming_hot_reward_idea1
			add_idea = LCT_flaming_hot_reward_idea2
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_flaming_hot_reward_idea2
		}
		swap_ideas = {
			remove_idea = LCT_flaming_hot_reward_idea2
			add_idea = LCT_flaming_hot_reward_idea3
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_flaming_hot_reward_idea3
		}
		swap_ideas = {
			remove_idea = LCT_flaming_hot_reward_idea3
			add_idea = LCT_flaming_hot_reward_idea4
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_flaming_hot_reward_idea4
		}
		swap_ideas = {
			remove_idea = LCT_flaming_hot_reward_idea4
			add_idea = LCT_flaming_hot_reward_idea5
		}
	}
	else_if = {
		limit = {
			has_idea = LCT_flaming_hot_reward_idea5
		}
		add_political_power = 50
		custom_effect_tooltip = LCT_flaming_hot_happy_tt
	}
	else = {
		add_ideas = LCT_flaming_hot_reward_idea1
	}
}

LCT_HPE_endgame = {

	hidden_effect = {
		clr_country_flag = LCT_six_lords_missions_active
		clr_country_flag = have_regular_puppets
		set_country_flag = LCT_won_the_giga_war
		set_country_flag = LCT_HPE_resistance_active
		load_focus_tree = LCT_lords_focus_final
		
		#Set the conflict events to fire
		country_event = { id = LCT_six_lords.52 days = 100 random_days = 80 } #FRN-JES conflict
		country_event = { id = LCT_six_lords.70 days = 180 random_days = 20 } #BOI-LAK conflict
		country_event = { id = LCT_six_lords.72 days = 230 random_days = 35 } #BM's temper tantrum
		country_event = { id = LCT_six_lords.56 days = 270 random_days = 30 } #DD-SS conflict
		country_event = { id = LCT_six_lords.79 days = 320 random_days = 20 } #JER conflict
		
		every_subject_country = {
			limit = {
				NOT = { 
					has_country_flag = LCT_HPE_member 
				}
			}
			ROOT = {
				annex_country = {
					target = PREV
					transfer_troops = no
				}
			}
		}
		
		LCT_HPE_balkanize = yes
		
		SUF = {
			transfer_state = 379
			transfer_state = 381
			transfer_state = 380
			transfer_state = 396
			transfer_state = 390
			transfer_state = 208
			transfer_state = 502
			transfer_state = 435
			transfer_state = 659
			transfer_state = 658
			transfer_state = 660
		}
		NOF = {
			transfer_state = 432
			transfer_state = 431
			transfer_state = 429
			transfer_state = 403
		}
		DOF = {
			transfer_state = 489
			transfer_state = 606
			transfer_state = 446
			transfer_state = 511
		}
		EYR = {
			transfer_state = 401
			transfer_state = 500
			transfer_state = 470
			transfer_state = 673
			
			add_state_core = 401
			add_state_core = 500
			add_state_core = 470
			add_state_core = 673
			
			set_cosmetic_tag = LCT_HPE_verenia
		}
		
		#############################
		## Set up resistance zones ##
		#############################
		
		#Flag states in Herzland
		for_each_scope_loop = {
			array = GRI.original_cores
			set_state_flag = LCT_herzland_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = KAT.original_cores
			set_state_flag = LCT_herzland_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = ANG.original_cores
			set_state_flag = LCT_herzland_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = YAL.original_cores
			set_state_flag = LCT_herzland_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = BRZ.original_cores
			set_state_flag = LCT_herzland_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = STW.original_cores
			set_state_flag = LCT_herzland_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = ROU.original_cores
			set_state_flag = LCT_herzland_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = PYT.original_cores
			set_state_flag = LCT_herzland_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = FEA.original_cores
			set_state_flag = LCT_herzland_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		
		#Flag states in the north
		for_each_scope_loop = {
			array = MNC.original_cores
			set_state_flag = LCT_north_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = FAT.original_cores
			set_state_flag = LCT_north_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = VED.original_cores
			set_state_flag = LCT_north_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = SRS.original_cores
			set_state_flag = LCT_north_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = NTR.original_cores
			set_state_flag = LCT_north_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		
		#Flag states in aquileia
		for_each_scope_loop = {
			array = TRD.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = FEZ.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = AET.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = HEL.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = AVI.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = FLO.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = ERI.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = EYR.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = POM.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = JES.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = VIN.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = JRR.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = JEB.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = JFT.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = JER.original_cores
			set_state_flag = LCT_aquileia_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		
		#Flag states in the south
		for_each_scope_loop = {
			array = ARA.original_cores
			set_state_flag = LCT_south_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = FRN.original_cores
			set_state_flag = LCT_south_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = TAL.original_cores
			set_state_flag = LCT_south_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = EQC.original_cores
			set_state_flag = LCT_south_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = WNG.original_cores
			set_state_flag = LCT_south_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = FAL.original_cores
			set_state_flag = LCT_south_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = BOI.original_cores
			set_state_flag = LCT_south_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = LAK.original_cores
			set_state_flag = LCT_south_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = SIC.original_cores
			set_state_flag = LCT_south_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = BAN.original_cores
			set_state_flag = LCT_south_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = CYA.original_cores
			set_state_flag = LCT_south_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		
		#Flag states in evi
		for_each_scope_loop = {
			array = GRW.original_cores
			set_state_flag = LCT_evi_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = BRF.original_cores
			set_state_flag = LCT_evi_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = LUS.original_cores
			set_state_flag = LCT_evi_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = GRY.original_cores
			set_state_flag = LCT_evi_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		for_each_scope_loop = {
			array = GRU.original_cores
			set_state_flag = LCT_evi_region
			ROOT = {
				add_to_array = {
					array = LCT_HPE_resistance_states
					value = PREV.id
				}
			}
		}
		
		set_variable = { LCT_HPE_herzland_authority = 0.78 }
		set_variable = { LCT_HPE_aquileia_authority = 0.53 }
		set_variable = { LCT_HPE_southern_authority = 0.62 }
		set_variable = { LCT_HPE_northern_authority = 0.59 }
		set_variable = { LCT_HPE_evi_authority = 0.69 }
		
		delete_unit = { disband = yes }
		load_oob = "LCT_HPE_imperial_guard"
		
		if = {	#Fuck you and your tiny variables Paradox.
			limit = {
				has_manpower > 2147483
			}
			add_manpower = -1718000
		}
		else = {
			set_temp_variable = { temp_subtract_var = manpower }
			multiply_temp_variable = { temp_subtract_var = -0.8 }
			add_manpower = temp_subtract_var
		}
		if = {
			limit = {
				has_equipment = {
					infantry_equipment > 2147483
				}
			}
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = -1718000
			}
		}
		else = {
			set_temp_variable = { temp_subtract_var = num_equipment@infantry_equipment }
			multiply_temp_variable = { temp_subtract_var = -0.8 }
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = temp_subtract_var
			}
		}
		if = {
			limit = {
				has_equipment = {
					support_equipment > 2147483
				}
			}
			add_equipment_to_stockpile = {
				type = support_equipment
				amount = -1718000
			}
		}
		else = {
			set_temp_variable = { temp_subtract_var = num_equipment@support_equipment }
			multiply_temp_variable = { temp_subtract_var = -0.8 }
			add_equipment_to_stockpile = {
				type = support_equipment
				amount = temp_subtract_var
			}
		}
		
		country_lock_all_division_template = yes
	}
}

#Use temp variable temp_authority_change
LCT_HPE_change_herzland_authority = {
	custom_effect_tooltip = LCT_HPE_change_herzland_authority_tt
	add_to_variable = { LCT_HPE_herzland_authority = temp_authority_change }
	
	if = {
		limit = {
			check_variable = { LCT_HPE_regions_lost > 2 }
			check_variable = { LCT_HPE_herzland_authority < 0.4 }
		}
		LCT_HPE_endgame_rebellion = yes
	}
}
LCT_HPE_change_aquileia_authority = {
	custom_effect_tooltip = LCT_HPE_change_aquileia_authority_tt
	add_to_variable = { LCT_HPE_aquileia_authority = temp_authority_change }
	
	if = {
		limit = {
			check_variable = { LCT_HPE_aquileia_authority < 0.3 }
		}
		LCT_HPE_aquileia_break_away = yes
	}
}
LCT_HPE_change_southern_authority = {
	custom_effect_tooltip = LCT_HPE_change_southern_authority_tt
	add_to_variable = { LCT_HPE_southern_authority = temp_authority_change }
	
	if = {
		limit = {
			check_variable = { LCT_HPE_southern_authority < 0.3 }
		}
		LCT_HPE_south_break_away = yes
	}
}
LCT_HPE_change_northern_authority = {
	custom_effect_tooltip = LCT_HPE_change_northern_authority_tt
	add_to_variable = { LCT_HPE_northern_authority = temp_authority_change }
	
	if = {
		limit = {
			check_variable = { LCT_HPE_northern_authority < 0.3 }
		}
		LCT_HPE_north_break_away = yes
	}
}
LCT_HPE_change_evi_authority = {
	custom_effect_tooltip = LCT_HPE_change_evi_authority_tt
	add_to_variable = { LCT_HPE_evi_authority = temp_authority_change }
	
	if = {
		limit = {
			check_variable = { LCT_HPE_evi_authority < 0.3 }
		}
		LCT_HPE_evi_break_away = yes
	}
}

#Use in scope of agressor and use LCT_HPE_intra_war_target for the target
LCT_intra_HPE_war = {
	custom_effect_tooltip = LCT_intra_HPE_war_tt
	hidden_effect = {
		LCT = {
			set_autonomy = {
				target = PREV
				autonomous_state = autonomy_free
				end_wars = no
				end_civil_wars = no
			}
			remove_from_faction = PREV
			give_military_access = PREV
			set_autonomy = {
				target = LCT_HPE_intra_war_target
				autonomous_state = autonomy_free
				end_wars = no
				end_civil_wars = no
			}
			remove_from_faction = LCT_HPE_intra_war_target
			give_military_access = LCT_HPE_intra_war_target
		}
		var:LCT_HPE_intra_war_target = {
			drop_cosmetic_tag = yes
			set_cosmetic_tag = LCT_HPE_free
			give_military_access = LCT
		}
		drop_cosmetic_tag = yes
		set_cosmetic_tag = LCT_HPE_free
		declare_war_on = {
			target = LCT_HPE_intra_war_target
			type = civil_war
		}
		add_civil_war_target = LCT_HPE_intra_war_target
		give_military_access = LCT
	}
}

LCT_HPE_random_resistance = {
	if = {
		limit = {
			check_variable = { LCT_HPE_active_resistance_states < 3 }
		}
		random_scope_in_array = {
			array = LCT_HPE_resistance_states
			limit = {
				NOT = {
					has_state_flag = LCT_HPE_unrest
				}
				controller = {
					has_country_flag = LCT_HPE_member
				}
			}
			
			if = {
				limit = {
					ROOT = {
						NOT = {
							has_country_flag = LCT_HPE_resistance_1_active
						}
					}
				}
				set_variable = { LCT.LCT_HPE_uprising_target_1 = THIS }
				set_state_flag = LCT_HPE_unrest
				add_to_variable = { LCT_HPE_active_resistance_states = 1 }
				ROOT = {
					set_country_flag = LCT_HPE_resistance_1_active
					country_event = {
						id = LCT_six_lords.53
						days = 1
						random_hours = 12
						random_days = 2
					}
				}
			}
			else_if = {
				limit = {
					ROOT = {
						NOT = {
							has_country_flag = LCT_HPE_resistance_2_active
						}
					}
				}
				set_variable = { LCT.LCT_HPE_uprising_target_2 = THIS }
				set_state_flag = LCT_HPE_unrest
				add_to_variable = { LCT_HPE_active_resistance_states = 1 }
				ROOT = {
					set_country_flag = LCT_HPE_resistance_2_active
					country_event = {
						id = LCT_six_lords.54
						days = 1
						random_hours = 12
						random_days = 2
					}
				}
			}
			else_if = {
				limit = {
					ROOT = {
						NOT = {
							has_country_flag = LCT_HPE_resistance_3_active
						}
					}
				}
				set_variable = { LCT.LCT_HPE_uprising_target_3 = THIS }
				set_state_flag = LCT_HPE_unrest
				add_to_variable = { LCT_HPE_active_resistance_states = 1 }
				ROOT = {
					set_country_flag = LCT_HPE_resistance_3_active
					country_event = {
						id = LCT_six_lords.55
						days = 1
						random_hours = 12
						random_days = 2
					}
				}
			}
		}
	}
}

#Use temp variable temp_authority_change
LCT_HPE_change_authority_in_region_of_THIS = {
	if = {
		limit = {
			has_state_flag = LCT_herzland_region
		}
		ROOT = { LCT_HPE_change_herzland_authority = yes }
	}
	else_if = {
		limit = {
			has_state_flag = LCT_south_region
		}
		ROOT = { LCT_HPE_change_southern_authority = yes }
	}
	else_if = {
		limit = {
			has_state_flag = LCT_north_region
		}
		ROOT = { LCT_HPE_change_northern_authority = yes }
	}
	else_if = {
		limit = {
			has_state_flag = LCT_aquileia_region
		}
		ROOT = { LCT_HPE_change_aquileia_authority = yes }
	}
	else_if = {
		limit = {
			has_state_flag = LCT_evi_region
		}
		ROOT = { LCT_HPE_change_evi_authority = yes }
	}
}

#Removes current scope from the HPE
LCT_remove_from_HPE = {
	custom_effect_tooltip = LCT_leaving_HPE_tt
	hidden_effect = {
		if = {
			limit = {
				has_country_flag = LCT_HPE_member
			}
			remove_from_array = { LCT_HPE_members = THIS }
			drop_cosmetic_tag = yes
			clr_country_flag = LCT_HPE_member
			leave_faction = yes
			remove_ideas = LCT_imperial_tithes
			set_country_flag = LCT_former_HPE_member
			LCT = {
				set_autonomy = {
					target = PREV
					autonomous_state = autonomy_free
					end_wars = no
					end_civil_wars = no
				}
			}
		}
	}
}

LCT_HPE_north_break_away = {
	custom_effect_tooltip = LCT_HPE_north_break_away_tt
	hidden_effect = {
		set_country_flag = LCT_HPE_north_lost
		add_to_variable = { LCT_HPE_regions_lost = 1 }
		set_variable = { LCT_HPE_northern_authority = 0 }
		MNC = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		FAT = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		VED = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		SRS = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		NTR = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		
		if = {
			limit = {
				check_variable = { LCT_HPE_regions_lost > 2 }
				check_variable = { LCT_HPE_herzland_authority < 0.4 }
			}
			LCT_HPE_endgame_rebellion = yes
		}
	}
}

LCT_HPE_south_break_away = {
	custom_effect_tooltip = LCT_HPE_south_break_away_tt
	hidden_effect = {
		set_country_flag = LCT_HPE_south_lost
		add_to_variable = { LCT_HPE_regions_lost = 1 }
		set_variable = { LCT_HPE_southern_authority = 0 }
		ARA = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		FRN = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		TAL = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		EQC = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		WNG = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		FAL = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		BOI = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		LAK = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		SIC = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		BAN = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		CYA = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		
		if = {
			limit = {
				check_variable = { LCT_HPE_regions_lost > 2 }
				check_variable = { LCT_HPE_herzland_authority < 0.4 }
			}
			LCT_HPE_endgame_rebellion = yes
		}
	}
}

LCT_HPE_aquileia_break_away = {
	custom_effect_tooltip = LCT_HPE_aquileia_break_away_tt
	hidden_effect = {
		set_country_flag = LCT_HPE_aquileia_lost
		add_to_variable = { LCT_HPE_regions_lost = 1 }
		set_variable = { LCT_HPE_aquileia_authority = 0 }
		TRD = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		FEZ = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		AET = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		HEL = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		AVI = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		FLO = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		ERI = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		EYR = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		POM = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		JES = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		VIN = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		JRR = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		JEB = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		JFT = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		JER = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		
		if = {
			limit = {
				check_variable = { LCT_HPE_regions_lost > 2 }
				check_variable = { LCT_HPE_herzland_authority < 0.4 }
			}
			LCT_HPE_endgame_rebellion = yes
		}
	}
}

LCT_HPE_evi_break_away = {
	custom_effect_tooltip = LCT_HPE_evi_break_away_tt
	hidden_effect = {
		set_country_flag = LCT_HPE_evi_lost
		add_to_variable = { LCT_HPE_regions_lost = 1 }
		set_variable = { LCT_HPE_evi_authority = 0 }
		GRW = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		BRF = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		LUS = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		GRY = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		GRU = {
			LCT_remove_from_HPE = yes
			for_each_scope_loop = {
				array = original_cores
				clr_state_flag = LCT_HPE_highlight
				ROOT = {
					remove_from_array = { LCT_HPE_resistance_states = PREV }
				}
			}
		}
		
		if = {
			limit = {
				check_variable = { LCT_HPE_regions_lost > 2 }
				check_variable = { LCT_HPE_herzland_authority < 0.4 }
			}
			LCT_HPE_endgame_rebellion = yes
		}
	}
}

LCT_HPE_endgame_rebellion = {
	hidden_effect = {
		
		country_event = LCT_six_lords.67
		
		for_each_scope_loop = {
			array = LCT_HPE_resistance_states
			clr_state_flag = LCT_HPE_highlight
		}
		
		country_lock_all_division_template = no
		clr_country_flag = LCT_HPE_resistance_active
		clear_array = LCT_HPE_resistance_states
		load_focus_tree = generic_griffon_focus
		set_variable = { LCT_HPE_herzland_authority = 0 }
		set_variable = { LCT_HPE_aquileia_authority = 0 }
		set_variable = { LCT_HPE_southern_authority = 0 }
		set_variable = { LCT_HPE_northern_authority = 0 }
		set_variable = { LCT_HPE_evi_authority = 0 }
		
		#Tranfer back the border gore
		HAU = {
			transfer_state = 659
			transfer_state = 660
			transfer_state = 658
		}
		472 = {
			controller = {
				transfer_state = 435
				transfer_state = 502
			}
		}
		SUF = {
			release = FEZ
			release = TRD
		}
		VED = {
			transfer_state = 403
			transfer_state = 429
			transfer_state = 431
		}
		FAT = {
			transfer_state = 432
		}
		CYA = {
			transfer_state = 511
		}
		BAN = {
			transfer_state = 446
			transfer_state = 606
			transfer_state = 489
		}
		TRD = {
			transfer_state = 380
			transfer_state = 396
			transfer_state = 379
			transfer_state = 381
		}
		
		every_possible_country = {
			limit = {
				has_country_flag = LCT_HPE_member
				NOT = {
					tag = LCT
					tag = STC
					tag = DOF
					tag = HIZ
					tag = SUF
					tag = NOF
				}
			}
			LCT_remove_from_HPE = yes
		}
		
		create_dynamic_country = {
			original_tag = GRI
			copy_tag = GRI
			add_ideas = {
				proper_science_base
				poverty3
				modern_society
				lack_of_scientists3
				griffon_race
				war_economy
				closed_economy
				service_by_requirement
			}
			transfer_state = 433
			transfer_state = 498
			transfer_state = 538
			transfer_state = 434
			transfer_state = 520
			transfer_state = 441
			transfer_state = 440
			transfer_state = 405
			transfer_state = 546
			transfer_state = 545
			transfer_state = 458
			transfer_state = 443
			transfer_state = 439
			transfer_state = 422
			transfer_state = 547
			transfer_state = 479
			set_province_controller = 10042
			set_province_controller = 1138
			set_province_controller = 7274
			set_province_controller = 4071
			set_province_controller = 7055
			set_province_controller = 12561
			load_focus_tree = generic_griffon_focus
			set_country_flag = LCT_endgame_rebellion
			set_country_flag = have_regular_puppets
			for_each_scope_loop = {
				array = GRI.original_cores
				add_core_of = PREV
			}
			for_each_scope_loop = {
				array = KAT.original_cores
				add_core_of = PREV
			}
			for_each_scope_loop = {
				array = ANG.original_cores
				add_core_of = PREV
			}
			for_each_scope_loop = {
				array = YAL.original_cores
				add_core_of = PREV
			}
			for_each_scope_loop = {
				array = BRZ.original_cores
				add_core_of = PREV
			}
			for_each_scope_loop = {
				array = STW.original_cores
				add_core_of = PREV
			}
			for_each_scope_loop = {
				array = ROU.original_cores
				add_core_of = PREV
			}
			for_each_scope_loop = {
				array = PYT.original_cores
				add_core_of = PREV
			}
			for_each_scope_loop = {
				array = FEA.original_cores
				add_core_of = PREV
			}
			add_state_core = 379
			add_state_core = 381
			create_country_leader = {
				name = HRV_leader
				picture = "gfx/leaders/LCT/Council.tga"
				expire = "1965.1.1"
				ideology = liberation_front
			}
			set_cosmetic_tag = HLA_cosmetic
			set_popularities = {
				democratic = 68
				neutrality = 17
				fascism = 2
				communism = 13
			}
			set_politics = {
				ruling_party = democratic
				elections_allowed = no
			}
			create_faction = LCT_HLA_faction_name
			#save_global_event_target_as = HLA_event_target
			declare_war_on = {
				target = LCT
				type = civil_war
			}
			declare_war_on = {
				target = NOF
				type = civil_war
			}
			declare_war_on = {
				target = SUF
				type = civil_war
			}
			declare_war_on = {
				target = HIZ
				type = civil_war
			}
			declare_war_on = {
				target = STC
				type = civil_war
			}
			declare_war_on = {
				target = DOF
				type = civil_war
			}
			add_civil_war_target = NOF
			add_civil_war_target = SUF
			add_civil_war_target = HIZ
			add_civil_war_target = LCT
			add_civil_war_target = STC
			add_civil_war_target = DOF
			set_technology = {
				tech_ironpaws = 1
				popup = no
			}
			load_oob = "LCT_HPE_endgame_rebellion"
			every_other_country = {
				limit = {
					OR = {
						has_country_flag = LCT_staged_rebellion
						has_country_flag = LCT_HIZ_industrial_rebellion
					}
				}
				PREV = {
					annex_country = {
						target = PREV
						transfer_troops = yes
					}
				}
			}
		}
	}
}
LCT_HPE_end_event_check = { 
	add_to_variable = { LCT_HPE_end_foci_completed = 1 }
	if = {
		limit = {
			check_variable = { LCT_HPE_end_foci_completed > 3 }
		}
		hidden_effect = {
			country_event = {
				id = LCT_six_lords.87
				days = 5
			}
		}
	}
}

LCT_auto_focus_start = {
	
	hidden_effect = {
		set_country_flag = LCT_six_lords_auto_focus_active
		
		#Scramble the random variable effect since it has a set seed for some reason.
		random_state = {
			meta_effect = {
				text = {
					set_temp_variable = { temp_count = [STATE_ID] }
				}
				STATE_ID = "[THIS.GetID]"
			}
			modulo_temp_variable = { temp_count = 600 }
			for_loop_effect = {
				end = temp_count
				set_temp_variable_to_random = {
					var = dummy_temp
					max = 1
					integer = yes
				}
			}
		}
		
		LCT_six_lords_focus_gui_setup = yes
		
		### Daring Dream ###
		
		#Set the length of time for each focus to complete
		set_variable = { LCT_auto_focus_time@token:LCT_daring_to_dream = 45 }
		set_variable = { LCT_auto_focus_time@token:LCT_magic_is_power = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_wealth_of_lake = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_new_workshop = 70 }
		set_variable = { LCT_auto_focus_time@token:LCT_new_experiments = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_magical_infantry = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_greatest_experiment = 45 }
		
		set_temp_variable = { temp_character_token = token:LCT_daring_dream }
		
		#Add the starting focus of the tree
		add_to_array = { LCT_auto_focus_available_foci@var:temp_character_token = token:LCT_daring_to_dream }
		add_to_array = { LCT_six_lords_token_array = temp_character_token }
		set_variable = { LCT_auto_focus_utility_event@var:temp_character_token = 96 }
		
		LCT_auto_focus_select_focus = yes
		
		### Flaming Hot ###
		#Set the length of time for each focus to complete
		set_variable = { LCT_auto_focus_time@token:LCT_flaming_diplomacy = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_reach_out_to_RCT = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_reach_out_to_BAK = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_reach_out_to_DMT = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_reach_out_to_DEP = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_reach_out_to_WIT = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_reach_out_to_FRE = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_reach_out_to_NIM = 35 }
		
		set_temp_variable = { temp_character_token = token:LCT_flaming_hot }
		
		#Add the starting focus of the tree
		add_to_array = { LCT_auto_focus_available_foci@var:temp_character_token = token:LCT_flaming_diplomacy }
		add_to_array = { LCT_six_lords_token_array = temp_character_token }
		set_variable = { LCT_auto_focus_utility_event@var:temp_character_token = 97 }
		
		LCT_auto_focus_select_focus = yes
		
		### Solid Rocks ###
		#Set the length of time for each focus to complete
		set_variable = { LCT_auto_focus_time@token:LCT_solid_like_rock = 56 }
		set_variable = { LCT_auto_focus_time@token:LCT_self_reliance = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_our_unbreakable_spirits = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_western_infrastructure = 45 }
		set_variable = { LCT_auto_focus_time@token:LCT_eastern_infrastructure = 45 }
		set_variable = { LCT_auto_focus_time@token:LCT_upgrade_railroads = 45 }
		set_variable = { LCT_auto_focus_time@token:LCT_deponya_to_flames = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_deponyan_western_forts = 35 }
		
		set_temp_variable = { temp_character_token = token:LCT_solid_rocks }
		
		#Add the starting focus of the tree
		add_to_array = { LCT_auto_focus_available_foci@var:temp_character_token = token:LCT_solid_like_rock }
		add_to_array = { LCT_six_lords_token_array = temp_character_token }
		set_variable = { LCT_auto_focus_utility_event@var:temp_character_token = 98 }
		
		LCT_auto_focus_select_focus = yes
		
		### Star Talent ###
		#Set the length of time for each focus to complete
		set_variable = { LCT_auto_focus_time@token:LCT_nation_reborn = 14 }
		set_variable = { LCT_auto_focus_time@token:LCT_new_economic_principles = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_convert_civilian_factories = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_knowledge_is_power = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_military_science_academy = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_put_prisoners_to_work = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_below_shayrmia = 45 }
		
		set_temp_variable = { temp_character_token = token:LCT_star_talent }
		
		#Add the starting focus of the tree
		add_to_array = { LCT_auto_focus_available_foci@var:temp_character_token = token:LCT_nation_reborn }
		add_to_array = { LCT_six_lords_token_array = temp_character_token }
		set_variable = { LCT_auto_focus_utility_event@var:temp_character_token = 99 }
		
		LCT_auto_focus_select_focus = yes
		
		### Smoke Signal ###
		#Set the length of time for each focus to complete
		set_variable = { LCT_auto_focus_time@token:LCT_smoke_and_fire = 21 }
		set_variable = { LCT_auto_focus_time@token:LCT_new_military_branch = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_future_of_warefare = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_brand_new_doctrine = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_expand_lake_research_site = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_fanatical_loyalty = 35 }
		set_variable = { LCT_auto_focus_time@token:LCT_put_them_to_the_test = 35 }
		
		set_temp_variable = { temp_character_token = token:LCT_smoke_signal }
		
		#Add the starting focus of the tree
		add_to_array = { LCT_auto_focus_available_foci@var:temp_character_token = token:LCT_smoke_and_fire }
		add_to_array = { LCT_six_lords_token_array = temp_character_token }
		set_variable = { LCT_auto_focus_utility_event@var:temp_character_token = 100 }
		
		LCT_auto_focus_select_focus = yes
		
		country_event = {
			id = LCT_six_lords.101
			days = 7
		}
	}
}

#Randomly select and activate an available focus.
LCT_auto_focus_select_focus = {
	log = "[GetDateText]: [Root.GetName]: Scripted effect: LCT_auto_focus_select_focus for [?temp_character_token.GetName]."
	
	if = {
		limit = {
			check_variable = { LCT_auto_focus_available_foci@var:temp_character_token^num > 0 }
			has_country_flag = LCT_six_lords_auto_focus_active
		}
		#Choose a random focus from the array
		set_variable_to_random = {
			var = LCT_active_focus_index@var:temp_character_token
			max = LCT_auto_focus_available_foci@var:temp_character_token^num
			integer = yes
		}
		
		#Debug logs
		#log = "Array Length: [?LCT_auto_focus_available_foci^num]"
		#log = "Focus Index: [?MER_active_focus_index]"
		#log = "Character: [?temp_character_token.GetTokenLocalizedKey]"
		#log = "-----Available Focuses-----"
		#for_each_loop = {
		#	array = LCT_auto_focus_available_foci@var:temp_character_token
		#	value = v
		#	index = i
		#	log = "[?i]: [?v.GetTokenKey]"
		#}
		
		#Activate shine on the selected focus
		meta_effect = {
			text = {
				activate_shine_on_focus = [FOCUS_ID]
			}
			FOCUS_ID = "[?LCT_auto_focus_available_foci@var:temp_character_token^LCT_active_focus_index@var:temp_character_token.GetTokenKey]"
		}
		
		#Set up the country flag and the untility event to fire when the focus is complete
		set_temp_variable = { temp_focus_token = LCT_auto_focus_available_foci@var:temp_character_token^MER_active_focus_index } #Have to do this thanks to PDX weirdness
		set_variable = { LCT_active_focus_token@var:temp_character_token = LCT_auto_focus_available_foci@var:temp_character_token^MER_active_focus_index }
		set_temp_variable = { temp_timer = LCT_auto_focus_time@var:temp_focus_token }
		add_to_temp_variable = { temp_timer = 1 }
		
		meta_effect = {
			text = {
				set_country_flag = {
					flag = LCT_auto_focus_in_progress_flag_[FLAG_SUFFIX]
					days = [TIME_FLAG]
					value = 1 
				}
				country_event = {
					id = LCT_six_lords.[EVENT_ID]
					days = [TIME]
				}
			}
			TIME_FLAG = "[?temp_timer]"
			FLAG_SUFFIX = "[?temp_character_token.GetTokenKey]"
			TIME = "[?LCT_auto_focus_time@var:temp_focus_token]"
			EVENT_ID = "[?LCT_auto_focus_utility_event@var:temp_character_token]"
		}
	}
}

#Stops the auto-focus process and cancels all ongoing foci for this character
LCT_auto_focus_stop = {
	log = "[GetDateText]: [Root.GetName]: Scripted effect: LCT_auto_focus_stop."

	clr_country_flag = LCT_six_lords_auto_focus_active
	
	meta_effect = {
		text = {
			clr_country_flag = LCT_auto_focus_in_progress_flag_[FLAG_SUFFIX]
			deactivate_shine_on_focus = [FOCUS_ID]
		}
		FOCUS_ID = "[?LCT_auto_focus_available_foci@var:temp_character_token^LCT_active_focus_index@var:temp_character_token.GetTokenKey]"
		FLAG_SUFFIX = "[?temp_character_token.GetTokenKey]"
	}
}

LCT_six_lords_focus_gui_setup = {
	
	#Set up icon positions for each auto-focus
	
	#X gap between focuses: 192p (96)
	#Y gap between focuses: 130p
	
	#Daring Dream
	set_variable = { LCT_lord_icon_pos_x@token:LCT_daring_to_dream = 568 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_daring_to_dream = 30 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_magic_is_power = 376 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_magic_is_power = 160 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_wealth_of_lake = 568 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_wealth_of_lake = 160 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_new_workshop = 472 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_new_workshop = 290 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_new_experiments = 376 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_new_experiments = 420 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_magical_infantry = 568 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_magical_infantry = 420 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_greatest_experiment = 472 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_greatest_experiment = 550 }
	
	#Flaming Hot
	set_variable = { LCT_lord_icon_pos_x@token:LCT_flaming_diplomacy = 760 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_flaming_diplomacy = 30 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_reach_out_to_RCT = 760 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_reach_out_to_RCT = 160 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_reach_out_to_BAK = 760 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_reach_out_to_BAK = 290 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_reach_out_to_DMT = 760 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_reach_out_to_DMT = 420 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_reach_out_to_DEP = 760 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_reach_out_to_DEP = 550 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_reach_out_to_WIT = 760 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_reach_out_to_WIT = 680 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_reach_out_to_FRE = 760 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_reach_out_to_FRE = 810 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_reach_out_to_NIM = 760 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_reach_out_to_NIM = 940 }
	
	#Solid Rocks
	set_variable = { LCT_lord_icon_pos_x@token:LCT_solid_like_rock = 1048 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_solid_like_rock = 30 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_self_reliance = 952 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_self_reliance = 290 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_our_unbreakable_spirits = 1144 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_our_unbreakable_spirits = 290 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_western_infrastructure = 952 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_western_infrastructure = 420 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_eastern_infrastructure = 1144 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_eastern_infrastructure = 420 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_upgrade_railroads = 1048 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_upgrade_railroads = 550 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_deponya_to_flames = 952 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_deponya_to_flames = 680 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_deponyan_western_forts = 1144 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_deponyan_western_forts = 680 }
	
	#Star Talent
	set_variable = { LCT_lord_icon_pos_x@token:LCT_nation_reborn = 1912 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_nation_reborn = 30 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_new_economic_principles = 1816 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_new_economic_principles = 160 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_convert_civilian_factories = 1720 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_convert_civilian_factories = 290 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_knowledge_is_power = 1912 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_knowledge_is_power = 290 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_military_science_academy = 1816 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_military_science_academy = 420 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_put_prisoners_to_work = 1816 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_put_prisoners_to_work = 550 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_below_shayrmia = 1816 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_below_shayrmia = 810 }
	
	#Smoke Signal
	set_variable = { LCT_lord_icon_pos_x@token:LCT_smoke_and_fire = 2104 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_smoke_and_fire = 30 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_new_military_branch = 2008 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_new_military_branch = 160 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_future_of_warefare = 2104 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_future_of_warefare = 290 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_brand_new_doctrine = 2200 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_brand_new_doctrine = 160 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_expand_lake_research_site = 2104 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_expand_lake_research_site = 420 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_fanatical_loyalty = 2008 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_fanatical_loyalty = 550 }
	
	set_variable = { LCT_lord_icon_pos_x@token:LCT_put_them_to_the_test = 2104 }
	set_variable = { LCT_lord_icon_pos_y@token:LCT_put_them_to_the_test = 680 }
}
activate_WIN_influence_mission = {
	random_list = {
		1 = {
			set_variable = {
				WIN_influence_mission_country = 1 #WNG
			}
		}
		1 = {
			set_variable = {
				WIN_influence_mission_country = 2 #BAT
			}
		}
		1 = {
			set_variable = {
				WIN_influence_mission_country = 3 #CTH
			}
		}
	}
	activate_mission = WIN_influence_mission
}
WIN_retire_WNG_advisors = {
     WIN_gilippo_gappi = {
		retire = yes
	}
     WIN_advisor_1 = {
		retire = yes
	}
	 WIN_advisor_7 = {
		retire = yes
	}
	 WIN_advisor_10 = {
		retire = yes
	}
	 WIN_advisor_13 = {
		retire = yes
	}
	 WIN_advisor_14 = {
		retire = yes
	}
	 WIN_advisor_15 = {
		retire = yes
	}
	 WIN_advisor_22 = {
		retire = yes
	}
}
WIN_retire_BAT_advisors = {
     WIN_ocean_spray = {
		retire = yes
	}
     WIN_advisor_2 = {
		retire = yes
	}
	 WIN_advisor_8 = {
		retire = yes
	}
	 WIN_advisor_11 = {
		retire = yes
	}
	 WIN_advisor_16 = {
		retire = yes
	}
	 WIN_advisor_17 = {
		retire = yes
	}
	 WIN_advisor_18 = {
		retire = yes
	}
	 WIN_advisor_23 = {
		retire = yes
	}
}
WIN_retire_CTH_advisors = {
	 WIN_advisor_9 = {
		retire = yes
	}
	 WIN_advisor_12 = {
		retire = yes
	}
	 WIN_advisor_19 = {
		retire = yes
	}
	 WIN_advisor_20 = {
		retire = yes
	}
	 WIN_advisor_21 = {
		retire = yes
	}
	 WIN_advisor_24 = {
		retire = yes
	}
}
WIN_ocean_spray_resistance_calc_active = {
	set_variable = { WIN_HIP_total_resistance = 0 }
	for_each_scope_loop = {
		array = WIN.WIN_occupied_states
		add_to_variable = { PREV.WIN_HIP_total_resistance = THIS.resistance }
	}
	divide_variable = { WIN_HIP_total_resistance = WIN_HIP_occupied_states }
	divide_variable = { WIN_HIP_total_resistance = 100 }

	multiply_variable = { WIN_HIP_total_resistance = WIN_resistance_reference_var } #WIN_resistance_reference_var need to be setup somewhere. It has to be a negative variable.


	set_variable = { WIN_NS_tolerance_modifiers = modifier@WIN_tolerance_change }
	add_to_variable = { WIN_NS_tolerance_modifiers = WIN_HIP_total_resistance }

	add_to_variable = { WIN_chiropterran_tolerance = WIN_NS_tolerance_modifiers} #WIN_chiropterran_tolerance need to be setup somewhere


	#Rounding to two decimals
	multiply_variable = { WIN_NS_tolerance_modifiers = 100 }
	round_variable = WIN_NS_tolerance_modifiers
	divide_variable = { WIN_NS_tolerance_modifiers = 100 }

	multiply_variable = { WIN_chiropterran_tolerance = 100 }
	round_variable = WIN_chiropterran_tolerance
	divide_variable = { WIN_chiropterran_tolerance = 100 }

	clamp_variable = {
		var = WIN_chiropterran_tolerance
		min = 0
		max = 100
	}
}
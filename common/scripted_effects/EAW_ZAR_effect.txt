ZAR_infrastructure_projects = {
	IF = {
		limit = {
			infrastructure < 4
		}
		add_building_construction = {
			type = infrastructure
			level = 2
			instant_build = yes
		}
	}
}

refresh_compliance_values = {
	747 = { set_variable = { ZAR.agz_compliance = ZAR_compliance } }
	748 = {
		set_variable = { ZAR.zin_compliance = ZAR_compliance }
		set_variable = { ZAR.zin_negative_compliance = ZAR_compliance }
	}
	multiply_variable = { ZAR.zin_negative_compliance = -1 }
	754 = { set_variable = { ZAR.zgw_compliance = ZAR_compliance } }
	878 = {
		set_variable = { ZAR.zaj_compliance = ZAR_compliance }
		set_variable = { ZAR.zaj_negative_compliance = ZAR_compliance }
	}
	multiply_variable = { ZAR.zaj_negative_compliance = -0.25 }
	755 = { set_variable = { ZAR.shi_compliance = ZAR_compliance } }
	746 = { set_variable = { ZAR.sen_compliance = ZAR_compliance } }
	730 = { set_variable = { ZAR.men_compliance = ZAR_compliance } }
	756 = { set_variable = { ZAR.zam_compliance = ZAR_compliance } }
}

## THE GOOD OL WALL O' SCRIPTS

## AGZHAT


ZAR_add_small_support = {
	set_temp_variable = { temp_agz_comp = 0.025 }
	round_temp_variable = temp_agz_comp
	add_to_variable = { ZAR_compliance = temp_agz_comp }
	if = {
		limit = {
			ZAR = {
				has_country_flag = ZAR_choose_martial
			}
		}
		custom_effect_tooltip = ZAR_small_boost_war_tt
	}
	else = {
		custom_effect_tooltip = ZAR_small_boost_tt
	}
	recalculate_variable_for_modifier = yes
}

ZAR_decrease_small_support = {
	set_temp_variable = { temp_agz_comp = 0.025 }
	round_temp_variable = temp_agz_comp
	subtract_from_variable = { ZAR_compliance = temp_agz_comp }
	if = {
		limit = {
			ZAR = {
				has_country_flag = ZAR_choose_martial
			}
		}
		custom_effect_tooltip = ZAR_small_penalty_war_tt
	}
	else = {
		custom_effect_tooltip = ZAR_small_penalty_tt
	}
	recalculate_variable_for_modifier = yes
}

ZAR_add_medium_support = {
	set_temp_variable = { temp_agz_comp = 0.025 }
	round_temp_variable = temp_agz_comp
	add_to_variable = { ZAR_compliance = temp_agz_comp }
	if = {
		limit = {
			ZAR = {
				has_country_flag = ZAR_choose_martial
			}
		}
		custom_effect_tooltip = ZAR_medium_boost_war_tt
	}
	else = {
		custom_effect_tooltip = ZAR_medium_boost_tt
	}
	recalculate_variable_for_modifier = yes
}

ZAR_decrease_medium_support = {
	set_temp_variable = { temp_agz_comp = 0.055 }
	round_temp_variable = temp_agz_comp
	subtract_from_variable = { ZAR_compliance = temp_agz_comp }
	if = {
		limit = {
			ZAR = {
				has_country_flag = ZAR_choose_martial
			}
		}
		custom_effect_tooltip = ZAR_medium_penalty_war_tt
	}
	else = {
		custom_effect_tooltip = ZAR_medium_penalty_tt
	}
	recalculate_variable_for_modifier = yes
}

ZAR_add_large_support = {
	set_temp_variable = { temp_agz_comp = 0.1 }
	round_temp_variable = temp_agz_comp
	add_to_variable = { ZAR_compliance = temp_agz_comp }
	if = {
		limit = {
			ZAR = {
				has_country_flag = ZAR_choose_martial
			}
		}
		custom_effect_tooltip = ZAR_large_boost_war_tt
	}
	else = {
		custom_effect_tooltip = ZAR_large_boost_tt
	}
	recalculate_variable_for_modifier = yes
}

ZAR_decrease_large_support = {
	set_temp_variable = { temp_agz_comp = 0.1 }
	round_temp_variable = temp_agz_comp
	subtract_from_variable = { ZAR_compliance = temp_agz_comp }
	if = {
		limit = {
			ZAR = {
				has_country_flag = ZAR_choose_martial
			}
		}
		custom_effect_tooltip = ZAR_large_penalty_war_tt
	}
	else = {
		custom_effect_tooltip = ZAR_large_penalty_tt
	}
	recalculate_variable_for_modifier = yes
}

## ZINDER

recalculate_variable_for_modifier = {
	set_variable = { ZAR_compliance_negative = ZAR_compliance }
	multiply_variable = { ZAR_compliance_negative = -1 }
}


## ZAWAGH


## ZAJHARI



## SENMARE


## MENZAKA



##ZAMFARA


##SHIZRA


ZAR_corruption_reduction_effect = {
	if = {
		limit = {
			has_idea = ZAR_corruption_1
		}
		swap_ideas = {
			remove_idea = ZAR_corruption_1
			add_idea = ZAR_corruption_2
		}
	}
	else_if = {
		limit = {
			has_idea = ZAR_corruption_2
		}
		swap_ideas = {
			remove_idea = ZAR_corruption_2
			add_idea = ZAR_corruption_3
		}
	}
	else_if = {
		limit = {
			has_idea = ZAR_corruption_3
		}
		swap_ideas = {
			remove_idea = ZAR_corruption_3
			add_idea = ZAR_corruption_4
		}
	}
	else_if = {
		limit = {
			has_idea = ZAR_corruption_4
		}
		swap_ideas = {
			remove_idea = ZAR_corruption_4
			add_idea = ZAR_corruption_5
		}
	}
	else_if = {
		limit = {
			has_idea = ZAR_corruption_5
		}
		remove_ideas = ZAR_corruption_5
	}
}


ZAR_imazeeb_discontent_reduction_effect = {
	if = {
		limit = {
			has_idea = ZAR_imazeeb_discontent_1
		}
		swap_ideas = {
			remove_idea = ZAR_imazeeb_discontent_1
			add_idea = ZAR_imazeeb_discontent_2
		}
	}
	else_if = {
		limit = {
			has_idea = ZAR_imazeeb_discontent_2
		}
		swap_ideas = {
			remove_idea = ZAR_imazeeb_discontent_2
			add_idea = ZAR_imazeeb_discontent_3
		}
	}
	else_if = {
		limit = {
			has_idea = ZAR_imazeeb_discontent_3
		}
		swap_ideas = {
			remove_idea = ZAR_imazeeb_discontent_3
			add_idea = ZAR_imazeeb_discontent_4
		}
	}
	else_if = {
		limit = {
			has_idea = ZAR_imazeeb_discontent_4
		}
		swap_ideas = {
			remove_idea = ZAR_imazeeb_discontent_4
			add_idea = ZAR_imazeeb_discontent_5
		}
	}
	else_if = {
		limit = {
			has_idea = ZAR_imazeeb_discontent_5
		}
		remove_ideas = ZAR_imazeeb_discontent_5
	}
}

ZAR_save_starting_core_NZ = {
	for_each_scope_loop = {
		array = CTH.owned_states
		if = {
			limit = {
				is_core_of = CTH
			}
			add_to_array = {
				array = ZAR.ZAR_CTH_states
				value = THIS
			}
		}
	}
	for_each_scope_loop = {
		array = HIP.owned_states
		if = {
			limit = {
				is_core_of = ZUM
			}
			add_to_array = {
				array = ZAR.ZAR_ZUM_states
				value = THIS
			}
		}
	}
	for_each_scope_loop = {
		array = HIP.owned_states
		if = {
			limit = {
				is_core_of = HIP
			}
			add_to_array = {
				array = ZAR.ZAR_HIP_states
				value = THIS
			}
		}
	}
	for_each_scope_loop = {
		array = WAR.owned_states
		add_to_array = {
			array = ZAR.ZAR_WAR_states
			value = THIS
		}
	}
	for_each_scope_loop = {
		array = BAT.owned_states
		add_to_array = {
			array = ZAR.ZAR_BAT_states
			value = THIS
		}
	}
	for_each_scope_loop = {
		array = CGI.owned_states
		if = {
			limit = {
				is_core_of = CGI
			}
			add_to_array = {
				array = ZAR.ZAR_CGI_states
				value = THIS
			}
		}
	}
	for_each_scope_loop = {
		array = CGI.owned_states
		if = {
			limit = {
				is_core_of = CDR
			}
			add_to_array = {
				array = ZAR.ZAR_CDR_states
				value = THIS
			}
		}
	}
	for_each_scope_loop = {
		array = ZAR.owned_states
		if = {
			limit = {
				is_core_of = ZAR
			}
			add_to_array = {
				array = ZAR.ZAR_CORE_states
				value = THIS
			}
		}
	}
	for_each_scope_loop = {
		array = TBK.owned_states
		if = {
			limit = {
				is_core_of = TBK
			}
			add_to_array = {
				array = ZAR.ZAR_CORE_states
				value = THIS
			}
		}
	}

	for_each_scope_loop = {
		array = CGI.owned_states
		if = {
			limit = {
				is_core_of = BKH
			}
			add_to_array = {
				array = ZAR.ZAR_BKH_states
				value = THIS
			}
		}
	}

	set_variable = { ZAR_ideology_tracker = 0}
}

ZAR_worm_coring_purge = {
	ZAR_worm_purge = yes
	add_compliance = 40
	add_dynamic_modifier = {
		modifier = ZAR_worm_purification
	}
}

ZAR_worm_purge = {
	set_building_level = {
		type = arms_factory
		level = 0
		instant_build = yes
	}
	set_building_level = {
		type = industrial_complex
		level = 0
		instant_build = yes
	}
	set_building_level = {
		type = dockyard
		level = 0
		instant_build = yes
	}
	set_building_level = {
		type = anti_air_building
		level = 0
		instant_build = yes
	}
	set_building_level = {
		type = synthetic_refinery
		level = 0
		instant_build = yes
	}
	set_building_level = {
		type = fuel_silo
		level = 0
		instant_build = yes
	}
	set_building_level = {
		type = radar_station
		level = 0
		instant_build = yes
	}
	set_building_level = {
		type = nuclear_reactor
		level = 0
		instant_build = yes
	}
	set_building_level = {
		type = rocket_site
		level = 0
		instant_build = yes
	}
	set_building_level = {
		type = air_base
		level = 0
		instant_build = yes
	}
	set_building_level = {
		type = bunker
		level = 0
		instant_build = yes
		province = {
			all_provinces = yes
		}
	}
	set_building_level = {
		type = coastal_bunker
		level = 0
		instant_build = yes
		province = {
			all_provinces = yes
		}
	}	
}


ZAR_add_coring_federation_spirit_scripted_effect = {
	if = {
		limit = { 
			NOT = { 
				has_dynamic_modifier = {
					modifier = ZAR_federal_integration 
				}
			} 
		}
		set_variable = { ZAR_federal_integration_construction_speed = 0 }
		set_variable = { ZAR_federal_integration_building_slot_factors = 0 }
		set_variable = { ZAR_federal_integration_conscription_factor = 0 }
		set_variable = { ZAR_federal_integration_weekly_manpower = 0 }
		add_dynamic_modifier = { modifier = ZAR_federal_integration } 
	}
	else = {
		custom_effect_tooltip = ZAR_add_coring_federation_spirit_scripted_effect_modify_tt
	}
}
ZAR_add_coring_empire_spirit_scripted_effect = {
	if = {
		limit = { 
			NOT = { 
				has_dynamic_modifier = {
					modifier = ZAR_hegemons_benefits 
				}
			} 
		}
		hidden_effect = {
			set_variable = { ZAR_hegemons_benefits_conscription_factor = 0 }
			set_variable = { ZAR_hegemons_benefits_political_power_gain = 0 }
			set_variable = { ZAR_hegemons_benefits_consumer_goods_factor = 0 }
			set_variable = { ZAR_hegemons_benefits_industrial_capacity_factory = 0 }
			add_dynamic_modifier = { modifier = ZAR_hegemons_benefits } 

			set_variable = { ZAR_zarantian_core_building_slot_factors = 0 }
			set_variable = { ZAR_zarantian_core_construction_speed = 0 }

			every_owned_state = {
				limit = {
					is_core_of = ZAR
				}	
				add_dynamic_modifier = {
					modifier = ZAR_zarantian_core
				}
			}
		}
		ZAR = { set_country_flag = ZAR_Empire_coring_added_modifiers }
	}
}


ZAR_transfer_stolen_pop = {
	if = {
		limit = {
			check_variable = { ZAR_indentured_servant_var < 10000 }
		}
		random_owned_state = {
			limit = {
				is_in_array = {
					array = ZAR.ZAR_CORE_states
					value = THIS
				}
			}
			add_manpower = var:ZAR.ZAR_indentured_servant_var
		}
		set_variable = { ZAR_indentured_servant_var = 0 }
	}
	else = {
		random_owned_state = {
			limit = {
				is_in_array = {
					array = ZAR.ZAR_CORE_states
					value = THIS
				}
			}
			add_manpower = 10000
		}
		subtract_from_variable = { ZAR_indentured_servant_var = 10000 }
	}

	if = {
		limit = {
			NOT = { check_variable = { ZAR_indentured_servant_var = 0 } }
		}
		ZAR_transfer_stolen_pop = yes
	}
}


ZAR_first_tree_effects_for_homecoming = {
	hidden_effect = {	
		if = {
			limit = { NOT = { has_completed_focus = ZAR_the_old_ways }}
			set_variable = { ZAR_lack_resources_factor_var = -0.05 }
			set_variable = { ZAR_research_speed_factor_var = 0.05 }
		}
		if = {
			limit = { NOT = { has_completed_focus = ZAR_the_sword_or_scale }}
			set_variable = { ZAR_spec_ops_attack_var = 0.05 }
			set_variable = { ZAR_production_efficiency_gain_var = 0.05 }
		}
		if = {
			limit = { NOT = { has_completed_focus = ZAR_a_settling_people }}
			set_variable = { ZAR_core_attack_factor_var = 0.05 }
			set_variable = { ZAR_core_defense_factor_var = 0.05 }
		}
		if = {
			limit = { NOT = { has_completed_focus = ZAR_the_blue_sage }}			
			add_advisor_role = {
				character = ZAR_wiwurgh
				advisor = {
					slot = political_advisor
					idea_token = ZAR_blue_sage_advisor

					traits = { ZAR_the_blue_sage }
					research_bonus = {
						race_tech = 0.15
					}
					ai_will_do = {
						factor = 5
					}
				}
				activate = yes
			}
		}
		if = {
			limit = { NOT = { has_completed_focus = ZAR_chief_ironbreaker }}
			if = {
				limit = {
					has_tech = tech_maintenance_company
				}
				add_tech_bonus = {
					bonus = 0.5
					uses = 1
					category = maintenance_company_tech
					name = maintenance_company_tech
				}
			}
			else = {
				set_technology = {
					tech_maintenance_company = 1
				}
			}
			set_technology = {
				infantry_weapons = 1
			}
			add_field_marshal_role = {
				character = ZAR_zawgha	
				
				traits = { desert_fox logistics_wizard zebra_race_trait }
				skill = 4
				attack_skill = 3
				defense_skill = 3
				planning_skill = 3
				logistics_skill = 4
				legacy_id = 674536
			}
			set_country_flag = ZAR_zawgha_return_flag
		}
		if = {
			limit = { NOT = { has_completed_focus = ZAR_a_grand_caravan }}
			swap_ideas = { 
				remove_idea = ZAR_trans_zebharan_caravans 
				add_idea = ZAR_flourishing_trans_zebharan_caravans 
			}
			set_country_flag = ZAR_grand_caravan_flag
			set_variable = { ZAR_trading_partners = 0 }
		}
		if = {
			limit = { NOT = { has_completed_focus = ZAR_our_desert }}
            set_technology = {
                popup = no
                guerrila_warfare_enable = 1
            }
			every_owned_state = {
				limit = { 
					is_core_of = ROOT 
				}
				set_variable = {
					var =  ZAR.ZAR_var_local_supplies
					value = 0.1
				}
				set_variable = {
					var = ZAR.ZAR_var_production_speed_buildings_factor
					value = 0
				}
				set_variable = {
					var =  ZAR.ZAR_var_building_slots
					value = 0
				}
				add_dynamic_modifier = { 
					modifier = ZAR_the_flowering 
				}
			}
		}
		if = {
			limit = { NOT = { has_completed_focus = ZAR_rebuilding_and_recovering }}
			remove_ideas = {
				zebrica_legacy_of_storm3
			}
		}
		if = {
			limit = { NOT = { has_completed_focus = ZAR_a_hundred_tribes }}
			swap_ideas = { 
				remove_idea = ZAR_great_confederacy 
				add_idea = ZAR_great_confederacy2 
			}
		}
	}
}


ZAR_Vasile_coup_idea_removal = {
	remove_ideas = {
		ZAR_corruption_1
		ZAR_corruption_2
		ZAR_corruption_3
		ZAR_corruption_4
		ZAR_corruption_5
	}
}

ZAR_Vasile_coup_civil_war = {
	remove_ideas = {
		ZAR_tobuck_plantations
		ZAR_cutted_red_tape
		ZAR_building_permissions
		ZAR_tarnished_jewel_idea
		ZAR_mercenary_returned
		ZAR_bought_off_tribes
		ZAR_flower_hunting
		ZAR_imazeeb_discontent_1
		ZAR_imazeeb_discontent_2
		ZAR_imazeeb_discontent_3
		ZAR_imazeeb_discontent_4
		ZAR_imazeeb_discontent_5
	}
}

ZAR_trade_upgrade = {
	if = {
		limit = { has_idea = ZAR_trans_zebharan_caravans }
		swap_ideas = {
			remove_idea = ZAR_trans_zebharan_caravans
			add_idea = ZAR_flourishing_trans_zebharan_caravans
		}
	}
	else_if = {
		limit = { has_idea = ZAR_flourishing_trans_zebharan_caravans }
		swap_ideas = {
			remove_idea = ZAR_flourishing_trans_zebharan_caravans
			add_idea = ZAR_awesome_trans_zebharan_caravans
		}
	}
	else_if = {
		limit = { has_idea = ZAR_awesome_trans_zebharan_caravans }
		swap_ideas = {
			remove_idea = ZAR_awesome_trans_zebharan_caravans
			add_idea = ZAR_trans_zebrican_trade_network
		}
	}
}


ZAR_monthly_wurms = {

	set_variable = { ZAR_worm_states = 0 }
	every_owned_state = {
		limit = {
			has_dynamic_modifier = { modifier = ZAR_the_flowering }
		}
		add_to_variable = { PREV.ZAR_worm_states = 1 }
	}
	set_variable = { ZAR_tatzelwurm_gain = ZAR_worm_states}
	multiply_variable = { ZAR_tatzelwurm_gain = ZAR_tatzelwurm_gain_per_state }

	add_equipment_to_stockpile = {
		type = tatzelwurm_equipment_0
		amount = var:ZAR_tatzelwurm_gain
	}
}

ZAR_WORM_looting = {
	subtract_from_variable = { ZAR.ZAR_looting_stolen_factories = 1 }
	if = {
		limit = {
			arms_factory > 0
			industrial_complex > 0
		}
		random_list = {
			50 = { 
				remove_building = {
					type = arms_factory
					level = 1
				}
				add_to_variable = { ZAR.ZAR_looting_stolen_factories_mils = 1}
			}
			50 = {
				remove_building = {
					type = industrial_complex
					level = 1
				}
				add_to_variable = { ZAR.ZAR_looting_stolen_factories_civs = 1}
			}
		}
	}
	else_if = {
		limit = {
			arms_factory > 0
		}
		remove_building = {
			type = arms_factory
			level = 1
		}
		add_to_variable = { ZAR.ZAR_looting_stolen_factories_mils = 1}
	}
	else_if = {
		limit = {
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_to_variable = { ZAR.ZAR_looting_stolen_factories_civs = 1}
	}
	else = {
		set_state_flag = ZAR_looting_no_more_factories
	}

	#log = "[GetDateText]: [Root.GetName]: Scripted Effect ZAR_WORM_looting fired - Factories to Remove: [?ZAR.ZAR_looting_stolen_factories]"

	if = {
		limit = {
			check_variable = { ZAR.ZAR_looting_stolen_factories > 0 }
			NOT = { has_state_flag = ZAR_looting_no_more_factories }
		}
		ZAR_WORM_looting = yes
	}
}

ZAR_WORM_state_decisions_setup = {
	set_variable = { ZAR_looting_needed_pp_tt = 40 }
	set_variable = { ZAR_looting_needed_mp_tt = 2000 }
	set_variable = { ZAR_looting_needed_ie_tt = 100 }
	set_variable = { ZAR_looting_needed_te_tt = 30 }
	set_variable = { ZAR_looting_max_lc_tt = 3 }
	set_variable = { ZAR_looting_time_tt = 45 }
	set_variable = { ZAR_looting_delay_tt = 90 }

	set_variable = { ZAR_looting_needed_pp = 39 }
	set_variable = { ZAR_looting_needed_mp = 1999 }
	set_variable = { ZAR_looting_needed_ie = 99 }
	set_variable = { ZAR_looting_needed_te = 29 }


	set_variable = { ZAR_looting_res_reduction_tt = 15 }

	set_variable = { ZAR_looting_inf_min = 200 }
	set_variable = { ZAR_looting_inf_max = 1000 }
	set_variable = { ZAR_looting_sup_min = 100 }
	set_variable = { ZAR_looting_sup_max = 300 }
	set_variable = { ZAR_looting_art_min = 50 }
	set_variable = { ZAR_looting_art_max = 100 }
}
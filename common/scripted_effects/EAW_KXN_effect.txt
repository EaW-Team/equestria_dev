KXN_TALLY_CASUALTIES_EFFECT = {
	clear_variable = KXN.KXNHarvest_Kills_Var
	add_to_variable = { KXN.KXNHarvest_Kills_Var = KXN.inflicted_casualties }
	add_to_variable = { KXN.KXNHarvest_Kills_Var = KXN.total_inflicted_civilian_casualties }
	subtract_from_variable = { KXN.KXNHarvest_Kills_Var = KXN.KXNHarvest_Total_Kills_Var }
	
	set_variable = { KXN.KXNHarvest_Total_Inflicted_Casualties_Var = KXN.inflicted_casualties }
	add_to_variable = { KXN.KXNHarvest_Total_Inflicted_Casualties_Var = KXN.total_inflicted_civilian_casualties }
	
	set_variable = { KXN.KXNHarvestProgBar_Var = KXN.KXNHarvest_Kills_Var }
	divide_variable = { KXN.KXNHarvestProgBar_Var = KXN.KXNHarvest_Max_Var }
	multiply_variable = { KXN.KXNHarvestProgBar_Var = 100 }
}
KXN_OCCUPY_STATE_EFFECT = {
	custom_effect_tooltip = KIR_line_break
	KXN = {
		add_to_variable = { KXN.total_states_pacified = 1 }
		hidden_effect = {
			add_political_power = -15
		}
	}
	add_dynamic_modifier = { modifier = KXN_Pacified_State days = 365 }
	custom_effect_tooltip = KXN_CF_OCCUPY_BUTTON_COST
}
KXN_PROCURE_STATE_EFFECT = {
	custom_effect_tooltip = KIR_line_break
	custom_effect_tooltip = KXN_PROCURE_BUILDING_REMOVE
	KXN = { add_to_variable = { KXN.total_states_procured = 1 } }
	if = {
		limit = {
			OR = {
				check_variable = { building_level@arms_factory > 0 }
				check_variable = { building_level@industrial_complex > 0 }
				check_variable = { building_level@dockyard > 0 }
				check_variable = { building_level@synthetic_refinery > 0 }
				check_variable = { building_level@fuel_silo > 0 }
				KXN = { has_country_flag = KXN_Lan_Kir_Needs_Enabled_Flag }
			}
		}
		every_country = {
			limit = { tag = ROOT }
			if = {
				limit = {
					check_variable = { PREV.building_level@industrial_complex > 0 }
				}
				set_temp_variable = { PROCURE_industrial_complex_level = PREV.building_level@industrial_complex }
				multiply_temp_variable = { PROCURE_industrial_complex_level = PROCURE_building_level }
				add_offsite_building = { type = industrial_complex level = PROCURE_industrial_complex_level }
				add_to_variable = { KXN.KXN_Off_Site_Industrial_Complex_Num_Var = PROCURE_industrial_complex_level }
			}
			
			if = {
				limit = {
					check_variable = { PREV.building_level@arms_factory > 0 }
				}
				set_temp_variable = { PROCURE_arms_factory_level = PREV.building_level@arms_factory }
				multiply_temp_variable = { PROCURE_arms_factory_level = PROCURE_building_level }
				add_offsite_building = { type = arms_factory level = PROCURE_arms_factory_level }
				add_to_variable = { KXN.KXN_Off_Site_Arms_Factory_Num_Var = PROCURE_arms_factory_level }
			}
			
			if = {
				limit = {
					check_variable = { PREV.building_level@dockyard > 0 }
				}
				set_temp_variable = { PROCURE_dockyard_level = PREV.building_level@dockyard }
				multiply_temp_variable = { PROCURE_dockyard_level = PROCURE_building_level }
				add_offsite_building = { type = dockyard level = PROCURE_dockyard_level }
				add_to_variable = { KXN.KXN_Off_Site_Dockyard_Num_Var = PROCURE_dockyard_level }
			}
			
			if = {
				limit = {
					check_variable = { PREV.building_level@synthetic_refinery > 0 }
				}
				set_temp_variable = { PROCURE_synthetic_refinery_level = PREV.building_level@synthetic_refinery }
				multiply_temp_variable = { PROCURE_synthetic_refinery_level = PROCURE_building_level }
				KXN = { add_offsite_building = { type = synthetic_refinery level = PROCURE_synthetic_refinery_level } }
				add_to_variable = { KXN.KXN_Off_Site_Synthetic_Refinery_Num_Var = PROCURE_synthetic_refinery_level }
			}
			
			if = {
				limit = {
					check_variable = { PREV.building_level@fuel_silo > 0 }
				}
				set_temp_variable = { PROCURE_fuel_silo_level = PREV.building_level@fuel_silo }
				multiply_temp_variable = { PROCURE_fuel_silo_level = PROCURE_building_level }
				add_offsite_building = { type = fuel_silo level = PROCURE_fuel_silo_level }
				add_to_variable = { KXN.KXN_Off_Site_Fuel_Silo_Num_Var = PROCURE_fuel_silo_level }
			}
			
			if = {
				limit = {
					KXN = { has_country_flag = KXN_Lan_Kir_Needs_Enabled_Flag }
				}
				clear_variable = KXN.KXNAvariceUnsatedDays
				clear_variable = KXN.KXNAvariceUnsatedDebuff
				add_to_variable = { KXN.KXNAvariceSatedDays = 20 }
				custom_effect_tooltip = KXNSateAvarice_20_TT
			}
			
			hidden_effect = { add_political_power = -25 }
		}
	}
	hidden_effect = {
		remove_building = { type = arms_factory level = building_level@arms_factory }
		remove_building = { type = industrial_complex level = building_level@industrial_complex }
		remove_building = { type = dockyard level = building_level@dockyard }
		remove_building = { type = synthetic_refinery level = building_level@synthetic_refinery }
		remove_building = { type = fuel_silo level = building_level@fuel_silo }
	}
	custom_effect_tooltip = KXN_CF_PROCURE_BUTTON_COST
}
KXN_PILLAGE_STATE_EFFECT = {
	custom_effect_tooltip = KIR_line_break
	KXN = {
		add_to_variable = { KXN.total_inflicted_civilian_casualties = 7.5 }
		add_to_variable = { KXN.total_states_pillaged = 1 }
		KXN_TALLY_CASUALTIES_EFFECT = yes
		save_current_manpower = yes
	}
	add_manpower = -7500
	custom_effect_tooltip = KXN_PILLAGE_BUILDING_DAMAGE
	hidden_effect = {
		KXN = { restore_previous_manpower = yes }
		damage_building = { type = infrastructure damage = 1.5 }
		damage_building = { type = nuclear_reactor damage = 1.5 }
		damage_building = { type = industrial_complex damage = 1.5 }
		damage_building = { type = arms_factory damage = 1.5 }
		damage_building = { type = dockyard damage = 1.5 }
		damage_building = { type = fuel_silo damage = 1.5 }
		damage_building = { type = synthetic_refinery damage = 1.5 }
	}
	add_dynamic_modifier = { modifier = KXN_Plundered_State days = 365 }
	every_country = {
		limit = {
			tag = ROOT
			OR = {
				has_country_flag = KXN_Lan_Kir_Needs_Enabled_Flag
				has_country_flag = KXN_Plunder_Oil_Flag
			}
		}
		if = {
			limit = { KXN = { has_country_flag = KXN_Lan_Kir_Needs_Enabled_Flag } }
			clear_variable = KXN.KXNAvariceUnsatedDays
			clear_variable = KXN.KXNAvariceUnsatedDebuff
			add_to_variable = { KXN.KXNAvariceSatedDays = 30 }
			custom_effect_tooltip = KXNSateAvarice_30_TT
		}
		if = {
			limit = {
				check_variable = { PREV.KXN_City_Fall_Fuel > 0 }
				KXN = { has_country_flag = KXN_Plunder_Oil_Flag }
			}
			add_fuel = PREV.KXN_City_Fall_Fuel
		}
	}
}
KXN_BURN_STATE_EFFECT = {
	custom_effect_tooltip = KIR_line_break
	KXN = {
		add_to_variable = { KXN.total_inflicted_civilian_casualties = 25 }
		add_to_variable = { KXN.total_states_burned = 1 }
		KXN_TALLY_CASUALTIES_EFFECT = yes
		save_current_manpower = yes
	}
	add_manpower = -25000
	custom_effect_tooltip = KXN_BURN_BUILDING_REMOVE
	hidden_effect = {
		KXN = { restore_previous_manpower = yes }
		remove_building = { type = infrastructure level = 3 }
		remove_building = { type = nuclear_reactor level = 3 }
		remove_building = { type = industrial_complex level = 3 }
		remove_building = { type = arms_factory level = 3 }
		remove_building = { type = dockyard level = 3 }
		remove_building = { type = fuel_silo level = 3 }
		remove_building = { type = synthetic_refinery level = 3 }
	}
	add_dynamic_modifier = { modifier = KXN_Purified_State days = 365 }
	add_resistance = -15
	if = {
		limit = {
			KXN = { has_country_flag = KXN_Lan_Kir_Needs_Enabled_Flag }
		}
		every_country = {
			limit = { tag = ROOT }
			clear_variable = KXN.KXNBloodlustUnsatedDays
			clear_variable = KXN.KXNBloodlustUnsatedDebuff
			add_to_variable = { KXN.KXNBloodlustSatedDays = 30 }
			custom_effect_tooltip = KXNSateBloodlust_30_TT
		}
	}
}

KXN_CALCULATE_OVEREXPANSION = {
	hidden_effect = {
		set_temp_variable = { KXN_Increase_Overexpansion_Var = num_owned_controlled_states }
		divide_temp_variable = { KXN_Increase_Overexpansion_Var = 100 }
	}
}
KXN_INCREASE_OVEREXPANSION = {
	if = {
		limit = {
			check_variable = { KXN_Increase_Overexpansion_Var > 0 }
		}
		custom_effect_tooltip = KXN_Increase_Overexpansion_tt
		hidden_effect = {
			add_to_variable = { KXN_Bonus_Overexpansion_Var = KXN_Increase_Overexpansion_Var }
			add_to_array = { KXN_Bonus_Overexpansion_Array = KXN_Increase_Overexpansion_Var }
			country_event = { id = lan_kir_utility.8964 days = 365 }
		}
	}
}
KXN_INCREASE_UNREST = {
	if = {
		limit = {
			KXN = {
				is_ai = no
				num_subjects > 0
				any_subject_country = {
					has_idea = KXN_Tributary_State
				}
			}
		}
		custom_effect_tooltip = KIR_line_break
		KXN = {
			every_subject_country = {
				limit = {
					has_idea = KXN_Tributary_State
				}
				custom_effect_tooltip = KXN_Increase_Tributary_Unrest_tt
				add_to_variable = { KXN_Tributary_Unrest_Var = 1 }
			}
			custom_effect_tooltip = KIR_line_break
		}
	}
}
KXN_SPAWN_REVOLT_UNITS = {
	division_template = {
		name = "Rebel Infantry"
		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 0 y = 2 }
			infantry = { x = 1 y = 0 }
			infantry = { x = 1 y = 1 }
			infantry = { x = 1 y = 2 }
			infantry = { x = 2 y = 0 }
			infantry = { x = 2 y = 1 }
			infantry = { x = 2 y = 2 }
		}
		support = {
			artillery = { x = 0 y = 0 }
		}
	}
	division_template = {
		name = "Rebel Militia"
		regiments = {
			militia = { x = 0 y = 0 }
			militia = { x = 0 y = 1 }
			militia = { x = 0 y = 2 }
			militia = { x = 1 y = 0 }
			militia = { x = 1 y = 1 }
			militia = { x = 1 y = 2 }
			militia = { x = 2 y = 0 }
			militia = { x = 2 y = 1 }
			militia = { x = 2 y = 2 }
		}
	}
	capital_scope = {
		create_unit = {
			division = "division_template = \"Rebel Infantry\" start_experience_factor = 0.25 start_equipment_factor = 1"
			owner = ROOT
			count = 3
		}
		create_unit = {
			division = "division_template = \"Rebel Militia\" start_experience_factor = 0.15 start_equipment_factor = 1"
			owner = ROOT
			count = 4
		}
	}
}
KXN_REFRESH_VALIANTS_EFFECT = {
	set_technology = { popup = no KXN_Valiants_Reset = 1 }
	set_technology = { popup = no KXN_Valiants_Reset = 0 }
}
KXN_REFRESH_VANGUARDS_EFFECT = {
	set_technology = { popup = no KXN_Vanguards_Reset = 1 }
	set_technology = { popup = no KXN_Vanguards_Reset = 0 }
}
KXN_REFRESH_PARATROOPERS_EFFECT = {
	set_technology = { popup = no KXN_Paratroopers_Reset = 1 }
	set_technology = { popup = no KXN_Paratroopers_Reset = 0 }
}
KXN_SET_NIRIK_PORTRAITS_EFFECT = {
	set_portraits = {
		character = KXN_Long_Dusk
		army = {
			large = "GFX_portrait_KXN_Long_Dusk_Nirik"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Long_Dusk_Nirik.tga"
		}
		civilian = {
			large = "GFX_portrait_KXN_Long_Dusk_Nirik"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Long_Dusk_Nirik.tga"
		}
	}
	set_portraits = {
		character = KXN_Clarion_Call
		army = {
			large = "GFX_portrait_KXN_Clarion_Call_Nirik"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Clarion_Call_Nirik.tga"
		}
		civilian = {
			large = "GFX_portrait_KXN_Clarion_Call_Nirik"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Clarion_Call_Nirik.tga"
		}
	}
	set_portraits = {
		character = KXN_Prairie_Spark
		army = {
			large = "GFX_portrait_KXN_Prairie_Spark_Nirik"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Prairie_Spark_Nirik.tga"
		}
		civilian = {
			large = "GFX_portrait_KXN_Prairie_Spark_Nirik"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Prairie_Spark_Nirik.tga"
		}
	}
	set_portraits = {
		character = KXN_Bonfire_Cascade
		army = {
			large = "GFX_portrait_KXN_Bonfire_Cascade_Nirik"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Bonfire_Cascade_Nirik.tga"
		}
		civilian = {
			large = "GFX_portrait_KXN_Bonfire_Cascade_Nirik"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Bonfire_Cascade_Nirik.tga"
		}
	}
	set_portraits = {
		character = KXN_Giuseppe_Georginio
		army = {
			large = "GFX_portrait_KXN_Giuseppe_Georginio_Nirik"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Giuseppe_Georginio_Nirik.tga"
		}
		civilian = {
			large = "GFX_portrait_KXN_Giuseppe_Georginio_Nirik"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Giuseppe_Georginio_Nirik.tga"
		}
	}
}
KXN_SET_KIRIN_PORTRAITS_EFFECT = {
	set_portraits = {
		character = KXN_Long_Dusk
		army = {
			large = "GFX_portrait_KXN_Long_Dusk"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Long_Dusk.tga"
		}
		civilian = {
			large = "GFX_portrait_KXN_Long_Dusk"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Long_Dusk.tga"
		}
	}
	set_portraits = {
		character = KXN_Clarion_Call
		army = {
			large = "GFX_portrait_KXN_Clarion_Call"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Clarion_Call.tga"
		}
		civilian = {
			large = "GFX_portrait_KXN_Clarion_Call"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Clarion_Call.tga"
		}
	}
	set_portraits = {
		character = KXN_Prairie_Spark
		army = {
			large = "GFX_portrait_KXN_Prairie_Spark"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Prairie_Spark.tga"
		}
		civilian = {
			large = "GFX_portrait_KXN_Prairie_Spark"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Prairie_Spark.tga"
		}
	}
	set_portraits = {
		character = KXN_Bonfire_Cascade
		army = {
			large = "GFX_portrait_KXN_Bonfire_Cascade"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Bonfire_Cascade.tga"
		}
		civilian = {
			large = "GFX_portrait_KXN_Bonfire_Cascade"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Bonfire_Cascade.tga"
		}
	}
	set_portraits = {
		character = KXN_Giuseppe_Georginio
		army = {
			large = "GFX_portrait_KXN_Giuseppe_Georginio"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Giuseppe_Georginio.tga"
		}
		civilian = {
			large = "GFX_portrait_KXN_Giuseppe_Georginio"
			small = "gfx/interface/ideas/Advisors/KXN/KXN_Giuseppe_Georginio.tga"
		}
	}
}

KXN_SETUP_PUPPET_EFFECT = {
	set_politics = {
		ruling_party = fascism
		elections_allowed = no
	}
	set_popularities = {
		democratic = 0
		neutrality = 0
		fascism = 100
		communism = 0
	}
	KXN = {
		puppet = PREV
		PREV = {
			transfer_technology = yes
			transfer_society_ideas = yes
			transfer_science_ideas = yes
			transfer_poverty_ideas = yes
			transfer_illiteracy_ideas = yes
		}
	}
	every_core_state = {
		limit = {
			NOT = { is_owned_and_controlled_by = PREV }
		}
		remove_core_of = PREV
	}
	set_country_flag = KIR_can_have_banner_system
	add_ideas = tot_economic_mobilisation
	add_ideas = KIR_banner_system
	add_ideas = closed_economy
	add_ideas = kirin_race
	add_manpower = 50000
	army_experience = 150
	add_political_power = 150
	add_equipment_to_stockpile = { type = infantry_equipment amount = 5000 }
	reserve_dynamic_country = yes
	set_AI_strategies_on_every_possible_country_delayed = yes
	set_variable = { var = KXN_Banner_Colony_Conscription_Factor value = KXN.KXN_Banner_Colony_Conscription_Factor }
	set_variable = { var = KXN_Banner_Colony_Var_1 value = KXN.KXN_Banner_Colony_Var_1 }
	set_variable = { var = KXN_Banner_Colony_Var_2 value = KXN.KXN_Banner_Colony_Var_2 }
	set_variable = { var = KXN_Tributary_State_Cap value = 10 }
	if = {
		limit = {
			has_global_flag = KXN_Focus_EMPIRE_B1_Completed
		}
		add_to_variable = { KXN_Tributary_State_Cap = 2 }
	}
	add_dynamic_modifier = { modifier = KXN_Banner_Colony }
	add_dynamic_modifier = { modifier = KXN_Tributary_Buff }
	KXN = { add_dynamic_modifier = { modifier = KXN_Tributary_Buff } }
	load_focus_tree = { tree = KXN_EMPIRE_FOCUS_TREE keep_completed = yes }
}

KXN_FORM_EXARCHATE_EFFECT = {
	if = {
		limit = {
			NOT = {
				has_global_flag = Form_KXN_Exarchate_Flag
			}
		}
		set_global_flag = Form_KXN_Exarchate_Flag
		every_state = {
			limit = {
				OR = {
					region = 106
					region = 125
					region = 128
					region = 131
					region = 133
					region = 274
					region = 279
				}
			}
			add_to_array = { KXN.KXN_Exarchate_States_Array = THIS }
		}
		create_dynamic_country = {
			original_tag = KXN
			set_country_flag = KXN_Exarchate_Flag
			set_cosmetic_tag = KXN_Exarchate
			KXN_SETUP_PUPPET_EFFECT = yes
			set_party_name = {
				ideology = fascism
				long_name = KXN_Exarchate_party
				name = KXN_Exarchate_party
			}
			retire_ideology_leader = fascism
			set_country_leader_ideology = neofeudalism
			set_country_leader_portrait = { portrait = "GFX_portrait_unknown_kirin_male" }
		}
	}
}
KXN_FORM_EPARCHY_EFFECT = {
	if = {
		limit = {
			NOT = {
				has_global_flag = Form_KXN_Eparchy_Flag
			}
		}
		set_global_flag = Form_KXN_Eparchy_Flag
		every_state = {
			limit = {
				OR = {
					region = 131
					region = 313
					region = 125
					region = 274
					region = 134
					region = 128
					region = 144
					state = 1137
				}
			}
			add_to_array = { KXN.KXN_Eparchy_States_Array = THIS }
		}
		create_dynamic_country = {
			original_tag = KXN
			set_country_flag = KXN_Eparchy_Flag
			set_cosmetic_tag = KXN_Eparchy
			KXN_SETUP_PUPPET_EFFECT = yes
			set_party_name = {
				ideology = fascism
				long_name = KXN_Eparchy_party
				name = KXN_Eparchy_party
			}
			retire_ideology_leader = fascism
			set_country_leader_ideology = kratokracy
			set_country_leader_portrait = { portrait = "GFX_portrait_unknown_kirin_female" }
		}
	}
}
KXN_FORM_MARSHALCY_EFFECT = {
	if = {
		limit = {
			NOT = {
				has_global_flag = Form_KXN_Marshalcy_Flag
			}
		}
		set_global_flag = Form_KXN_Marshalcy_Flag
		every_state = {
			limit = {
				OR = {
					region = 138
					region = 139
					region = 140
					region = 141
					region = 142
					region = 143
					region = 145
					region = 146
					region = 147
				}
			}
			add_to_array = { KXN.KXN_Marshalcy_States_Array = THIS }
		}
		create_dynamic_country = {
			original_tag = KXN
			set_country_flag = KXN_Marshalcy_Flag
			set_cosmetic_tag = KXN_Marshalcy
			KXN_SETUP_PUPPET_EFFECT = yes
			set_party_name = {
				ideology = fascism
				long_name = KXN_Marshalcy_party
				name = KXN_Marshalcy_party
			}
			retire_ideology_leader = fascism
			set_country_leader_ideology = stratocracy
			set_country_leader_portrait = { portrait = "GFX_portrait_unknown_kirin_female" }
		}
	}
}
KXN_FORM_EQUATORARCHY_EFFECT = {
	if = {
		limit = {
			NOT = {
				has_global_flag = Form_KXN_Equatorarchy_Flag
			}
		}
		set_global_flag = Form_KXN_Equatorarchy_Flag
		every_state = {
			limit = {
				OR = {
					region = 1
					region = 142
					region = 147
					region = 148
					region = 213
					region = 234
					region = 236
					region = 237
					region = 239
					region = 240
					region = 241
					region = 242
					region = 244
					region = 245
					region = 246
					region = 248
					region = 289
					region = 295
					region = 319
				}
			}
			add_to_array = { KXN.KXN_Equatorarchy_States_Array = THIS }
		}
		create_dynamic_country = {
			original_tag = KXN
			set_country_flag = KXN_Equatorarchy_Flag
			set_cosmetic_tag = KXN_Equatorarchy
			KXN_SETUP_PUPPET_EFFECT = yes
			set_party_name = {
				ideology = fascism
				long_name = KXN_Equatorarchy_party
				name = KXN_Equatorarchy_party
			}
			retire_ideology_leader = fascism
			set_country_leader_ideology = ultranationalism
			set_country_leader_portrait = { portrait = "GFX_portrait_unknown_kirin_male" }
		}
	}
}
KXN_FORM_OCCIDENT_EFFECT = {
	if = {
		limit = {
			NOT = {
				has_global_flag = Form_KXN_Occident_Flag
			}
		}
		set_global_flag = Form_KXN_Occident_Flag
		every_state = {
			limit = {
				OR = {
					region = 95
					region = 135
					region = 136
					region = 137
					region = 146
					region = 272
					region = 273
					region = 277
					region = 295
					region = 296
					region = 308
					region = 309
					region = 310
					region = 311
					region = 312
					region = 313
					region = 314
					region = 315
					region = 316
					region = 317
					region = 318
					region = 319
					region = 326
					region = 330
					region = 331
					region = 341
				}
			}
			add_to_array = { KXN.KXN_Occident_States_Array = THIS }
		}
		create_dynamic_country = {
			original_tag = KXN
			set_country_flag = KXN_Occident_Flag
			set_cosmetic_tag = KXN_Occident
			KXN_SETUP_PUPPET_EFFECT = yes
			set_party_name = {
				ideology = fascism
				long_name = KXN_Occident_party
				name = KXN_Occident_party
			}
			retire_ideology_leader = fascism
			set_country_leader_ideology = stratocracy
			set_country_leader_portrait = { portrait = "GFX_portrait_unknown_kirin_female" }
		}
	}
}
KXN_FORM_SATELLITE_EFFECT = {
	if = {
		limit = {
			NOT = {
				has_global_flag = Form_KXN_Satellite_Flag
			}
		}
		set_global_flag = Form_KXN_Satellite_Flag
		every_state = {
			limit = {
				OR = {
					region = 261
					region = 290
					region = 292
					region = 293
					region = 294
					region = 298
					region = 299
					region = 300
					region = 301
					region = 302
					region = 303
					region = 304
					region = 305
					region = 306
					region = 307
					region = 320
					region = 321
					region = 322
					region = 323
					region = 324
					region = 325
					region = 329
					region = 332
					region = 333
					region = 334
					region = 336
					region = 337
					region = 338
					state = 955
					state = 789
				}
			}
			add_to_array = { KXN.KXN_Satellite_States_Array = THIS }
		}
		create_dynamic_country = {
			original_tag = KXN
			set_country_flag = KXN_Satellite_Flag
			set_cosmetic_tag = KXN_Satellite
			KXN_SETUP_PUPPET_EFFECT = yes
			set_party_name = {
				ideology = fascism
				long_name = KXN_Satellite_party
				name = KXN_Satellite_party
			}
			retire_ideology_leader = fascism
			set_country_leader_ideology = stratocracy
			set_country_leader_portrait = { portrait = "GFX_portrait_unknown_kirin_female" }
		}
	}
}
KXN_Puppet_Reset_All_Frames = {
	set_variable = { KXN.KXN_Puppet_Frame_1_Var = 1 }
	set_variable = { KXN.KXN_Puppet_Frame_2_Var = 1 }
	set_variable = { KXN.KXN_Puppet_Frame_3_Var = 1 }
	set_variable = { KXN.KXN_Puppet_Frame_4_Var = 1 }
	set_variable = { KXN.KXN_Puppet_Frame_5_Var = 1 }
	set_variable = { KXN.KXN_Puppet_Frame_6_Var = 1 }
	set_variable = { KXN.KXN_Puppet_Frame_7_Var = 1 }
	set_variable = { KXN.KXN_Puppet_Frame_8_Var = 1 }
	clr_country_flag = KXN_1_Decision_Flag
	clr_country_flag = KXN_2_Decision_Flag
	clr_country_flag = KXN_3_Decision_Flag
	clr_country_flag = KXN_4_Decision_Flag
	clr_country_flag = KXN_5_Decision_Flag
	clr_country_flag = KXN_6_Decision_Flag
	clr_country_flag = KXN_7_Decision_Flag
	clr_country_flag = KXN_8_Decision_Flag
	KXN = {
		fix_weapon_techs = yes
		every_subject_country = {
			fix_weapon_techs = yes
			clr_country_flag = KXN_Satellite_Decision_Flag
		}
	}
}

KXN_CALCULATE_OVEREXPANSION_EFFECT = {
	clear_variable = KXN.KXN_controlled_core_states
	for_each_scope_loop = {
		array = KXN.owned_controlled_states
		if = {
			limit = {
				is_core_of = KXN
			}
			KXN = {
				add_to_variable = { KXN_controlled_core_states = 1 }
			}
		}
	}
	
	set_variable = { KXN_controlled_occupied_states = KXN.num_controlled_states }
	subtract_from_variable = { KXN_controlled_occupied_states = KXN.KXN_controlled_core_states }
	
	for_each_scope_loop = {
		array = KXN.owned_controlled_states
		if = {
			limit = { has_dynamic_modifier = { modifier = KXN_Settler_Communities } }
			subtract_from_variable = { KXN.KXN_controlled_occupied_states = 1 }
		}
	}
	
	clamp_variable = {
		var = KXN_controlled_occupied_states
		min = 0.001
	}
	
	set_variable = { KXN_Overexpansion_Modifier_Var = KXN_controlled_occupied_states }
	subtract_from_variable = { KXN_Overexpansion_Modifier_Var = KXN.KXN_controlled_core_states }
	
	divide_variable = { KXN_Overexpansion_Modifier_Var = 100 }
	clamp_variable = {
		var = KXN_Overexpansion_Modifier_Var
		min = 0.001
	}
	
	add_to_variable = { KXN_Overexpansion_Modifier_Var = KXN_Bonus_Overexpansion_Var }
	
	set_variable = { KXN_Overexpansion_Modifier_X_Var = KXN_Overexpansion_Modifier_Var }
	multiply_variable = { KXN_Overexpansion_Modifier_X_Var = KXN_Overexpansion_Modifier_Multiplier_Var }
	
	set_variable = { KXN_Overexpansion_Modifier_A_Var = 0 }
	subtract_from_variable = { KXN_Overexpansion_Modifier_A_Var = KXN_Overexpansion_Modifier_Var }
	multiply_variable = { KXN_Overexpansion_Modifier_A_Var = KXN_Overexpansion_Modifier_Multiplier_Var }
	
	set_variable = { KXN_Overexpansion_Modifier_B_Var = KXN_Overexpansion_Modifier_Var }
	multiply_variable = { KXN_Overexpansion_Modifier_B_Var = 1.5 }
	multiply_variable = { KXN_Overexpansion_Modifier_B_Var = KXN_Overexpansion_Modifier_Multiplier_Var }
	
	clear_variable = KXN_Overexpansion_Effect_1_Var
	clear_variable = KXN_Overexpansion_Effect_2_Var
	clear_variable = KXN_Overexpansion_Effect_3_Var
	if = {
		limit = {
			check_variable = { KXN_Overexpansion_Modifier_Var > 0.001 }
		}
		set_variable = { KXN_Overexpansion_Effect_1_Var = KXN_Overexpansion_Modifier_Var }
		multiply_variable = { KXN_Overexpansion_Effect_1_Var = KXN_Overexpansion_Modifier_Multiplier_Var }
		set_variable = { KXN_Overexpansion_Effect_2_Var = 0 }
		subtract_from_variable = { KXN_Overexpansion_Effect_2_Var = KXN_Overexpansion_Modifier_Var }
		multiply_variable = { KXN_Overexpansion_Effect_2_Var = KXN_Overexpansion_Modifier_Multiplier_Var }
		set_variable = { KXN_Overexpansion_Effect_3_Var = KXN_Overexpansion_Modifier_Var }
		multiply_variable = { KXN_Overexpansion_Effect_3_Var = 1.5 }
		multiply_variable = { KXN_Overexpansion_Effect_3_Var = KXN_Overexpansion_Modifier_Multiplier_Var }
	}
}

KXN_CALCULATE_SAURIAN_EFFECT = {
	clear_variable = KXN.LKB_Saurian_Var
	if = {
		limit = {
			check_variable = { KXN.num_battalions_with_type@saurian_battalion > 120 }
		}
		subtract_from_variable = { LKB_Saurian_Var = 1 }
	}
	if = {
		limit = {
			check_variable = { KXN.LKB_Saurian_Var < 0 }
		}
		set_country_flag = KXN_Saurider_Alert_Flag
	}
}

KXN_Reduce_Overexpansion_TT = {
	if = {
		limit = {
			FROM = { is_controlled_by = KXN }
			KXN = { check_variable = { KXN_Overexpansion_Modifier_Var > 0.001 } }
		}
		custom_effect_tooltip = KXN_Decrease_Overexpansion_Tooltip
		hidden_effect = { KXN = { KXN_CALCULATE_OVEREXPANSION_EFFECT = yes } }
	}
}

KXN_Increase_Overexpansion_TT = {
	if = {
		limit = {
			FROM = { NOT = { is_core_of = KXN } }
			KXN = {
				check_variable = {
					var = KXN.KXN_controlled_occupied_states
					value = KXN.KXN_controlled_core_states
					compare = greater_than_or_equals
				}
			}
		}
		custom_effect_tooltip = KXN_Increase_Overexpansion_Tooltip
		hidden_effect = { KXN = { KXN_CALCULATE_OVEREXPANSION_EFFECT = yes } }
	}
}
IST_debuff_harmony_spirit = {
	if = {
		limit = {
			has_idea = IST_harmony_in_tradition_0
		}
		swap_ideas = {
			remove_idea = IST_harmony_in_tradition_0
			add_idea = IST_harmony_in_tradition_1
		}
	}
	else_if = {
		limit = {
			has_idea = IST_harmony_in_tradition_1
		}
		swap_ideas = {
			remove_idea = IST_harmony_in_tradition_1
			add_idea = IST_harmony_in_tradition_2
		}
	}
	else_if = {
		limit = {
			has_idea = IST_harmony_in_tradition_2
		}
		swap_ideas = {
			remove_idea = IST_harmony_in_tradition_2
			add_idea = IST_harmony_in_tradition_3
		}
	}
	else_if = {
		limit = {
			has_idea = IST_harmony_in_tradition_3
		}
		swap_ideas = {
			remove_idea = IST_harmony_in_tradition_3
			add_idea = IST_harmony_in_tradition_4
		}
	}
	else_if = {
		limit = {
			has_idea = IST_harmony_in_tradition_4
		}
		swap_ideas = {
			remove_idea = IST_harmony_in_tradition_4
			add_idea = IST_harmony_in_tradition_5
		}
	}
}
IST_coordinates_ambition = {
	custom_effect_tooltip = {
		localization_key = IST_coordinates_ambition_tt
		add_to_variable = { x_coordinate_var = -20 }
		add_to_variable = { y_coordinate_var = -20 }
	}
}
IST_coordinates_ego = {
	custom_effect_tooltip = {
		localization_key = IST_coordinates_ego_tt
		add_to_variable = { x_coordinate_var = 20 }
		add_to_variable = { y_coordinate_var = -20 }
	}
}
IST_coordinates_faith = {
	custom_effect_tooltip = {
		localization_key = IST_coordinates_faith_tt
		add_to_variable = { x_coordinate_var = -20 }
		add_to_variable = { y_coordinate_var = 20 }
	}
}
IST_coordinates_security = {
	custom_effect_tooltip = {
		localization_key = IST_coordinates_security_tt
		add_to_variable = { x_coordinate_var = 20 }
		add_to_variable = { y_coordinate_var = 20 }
	}
}
IST_civil_war_effect = {
	create_dynamic_country = {
		original_tag = IST
   	 	inherit_technology = IST
		save_global_event_target_as = maglibing_resistance
		set_cosmetic_tag = IST_maglibing_resistance
		set_politics = {
			ruling_party = democratic
			elections_allowed = no
		}
		set_popularities = {
			democratic = 80
			neutrality = 10
			communism = 10
		}
	}
	IST = {
		every_controlled_state = { # Transfers States and gives Cores
			limit = {
				not_a_core_of_ROOT = yes
			}
			add_core_of = event_target:maglibing_resistance
			if = {
				limit = {
					IST_initial_uprising_states = yes
				}
				transfer_state_to = event_target:maglibing_resistance 
				add_to_temp_array = {
					initial_uprising_states_temp_array = THIS
				}
			}
			else = {
				add_to_temp_array = {
					potential_uprising_states_temp_array = THIS
				}
			}
		}
	}
	event_target:maglibing_resistance = { # TODO - decide which TAG will be the Resistance
		division_template = {
			name = "Militia"
			is_locked = yes
			template_counter = 6
			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
				infantry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }
			}
			priority = 0
		}
		for_each_scope_loop = { # Makes an array of non-initial states states with enought resistance
			array = potential_uprising_states_temp_array
			set_temp_variable = { rebellion_var = resistance }
			#subtract_from_temp_variable = { rebellion_var = compliance } # TODO
			if = {
				limit = {
					check_variable = { rebellion_var > 20 } # TODO
				}
				add_to_temp_array = {
					probable_uprising_states_temp_array = THIS
				}
			}
		}
		while_loop_effect = { # Add every state with enought resistance and at least 2 nearby rebelious states to the uprising
			limit = {
				any_state = {
					is_in_array = { probable_uprising_states_temp_array = THIS }
				}
			}
			for_each_scope_loop = {
				array = probable_uprising_states_temp_array
				if = {
					limit = {
						any_neighbor_state = {
							count = 2
							is_in_array = { initial_uprising_states_temp_array = THIS }
						}
					}
					transfer_state_to = PREV
					remove_from_temp_array = {
						probable_uprising_states_temp_array = THIS
					}
					add_to_temp_array = {
						initial_uprising_states_temp_array = THIS
					}
				}
			}
		}
		for_each_scope_loop = { # Make sure there will be no enclaves
			array = IST.controlled_states
			if = {
				limit = {
					any_neighbor_state = {
						is_in_array = { initial_uprising_states_temp_array = THIS }
					}
					NOT = {
						any_neighbor_state = {
							is_in_array = { IST.controlled_states = THIS }
						}
					}
				}
				transfer_state_to = PREV
			}
		}
		for_each_scope_loop = { # Creates Divisions
			array = initial_uprising_states_temp_array
			set_temp_variable = { divs_amount_var = resistance }
			subtract_from_temp_variable = { divs_amount_var = compliance }
			divide_temp_variable = { divs_amount_var = 5 }
			add_to_temp_variable = { divs_amount_var = 2 }
			round_temp_variable = divs_amount_var
			clamp_temp_variable = {
    			var = divs_amount_var 
   				min = 1
			}
			create_unit = {
				division = "division_template = \"Militia\" start_experience_factor = 0.1"
				owner = PREV
				count = divs_amount_var
				allow_spawning_on_enemy_provs = yes
			}
		}
		add_civil_war_target = IST
		declare_war_on = {
			target = IST
			type = civil_war
		}
	}
}
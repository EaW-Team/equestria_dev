ZOO_minor_decrease_ZOO_grand_railroad_project_consumer_goods_factor = {
	set_temp_variable = { ZOO_grand_railroad_project_consumer_goods_factor_change = -0.025 }
	ZOO_grand_railroad_project_consumer_goods_factor_change = yes
}

ZOO_decrease_ZOO_grand_railroad_project_consumer_goods_factor = {
	set_temp_variable = { ZOO_grand_railroad_project_consumer_goods_factor_change = -0.05 }
	ZOO_grand_railroad_project_consumer_goods_factor_change = yes
}

ZOO_major_decrease_ZOO_grand_railroad_project_consumer_goods_factor = {
	set_temp_variable = { ZOO_grand_railroad_project_consumer_goods_factor_change = -0.1 }
	ZOO_grand_railroad_project_consumer_goods_factor_change = yes
}

ZOO_huge_decrease_ZOO_grand_railroad_project_consumer_goods_factor = {
	set_temp_variable = { ZOO_grand_railroad_project_consumer_goods_factor_change = -0.15 }
	ZOO_grand_railroad_project_consumer_goods_factor_change = yes
}

ZOO_minor_increase_ZOO_grand_railroad_project_consumer_goods_factor = {
	set_temp_variable = { ZOO_grand_railroad_project_consumer_goods_factor_change = 0.05 }
	ZOO_grand_railroad_project_consumer_goods_factor_change = yes
}

ZOO_increase_ZOO_grand_railroad_project_consumer_goods_factor = {
	set_temp_variable = { ZOO_grand_railroad_project_consumer_goods_factor_change = 0.1 }
	ZOO_grand_railroad_project_consumer_goods_factor_change = yes
}

ZOO_major_increase_ZOO_grand_railroad_project_consumer_goods_factor = {
	set_temp_variable = { ZOO_grand_railroad_project_consumer_goods_factor_change = 0.15 }
	ZOO_grand_railroad_project_consumer_goods_factor_change = yes
}

ZOO_huge_increase_ZOO_grand_railroad_project_consumer_goods_factor = {
	set_temp_variable = { ZOO_grand_railroad_project_consumer_goods_factor_change = 0.2 }
	ZOO_grand_railroad_project_consumer_goods_factor_change = yes
}

ZOO_grand_railroad_project_consumer_goods_factor_change = {
	custom_effect_tooltip = ZOO_change_grand_railroad_project_consumer_goods_factor
	add_to_variable = { ZOO_grand_railroad_project_consumer_goods_factor = ZOO_grand_railroad_project_consumer_goods_factor_change }
	force_update_dynamic_modifier = yes
}

ZOO_delay_railroad_construction = {
	custom_effect_tooltip = ZOO_delay_railroad_construction_tt
	subtract_from_variable = { ZOO_railway_tiles_stored = modifier@ZOO_weekly_railway_tiles }
	subtract_from_variable = { ZOO_railway_tiles_stored = modifier@ZOO_weekly_railway_tiles }
}

ZOO_balance_of_power_change_effect = {
	meta_effect = {
        text = {
            add_power_balance_value = {
                id = ZOO_influence_BoP
                value = [BALANCE_CHANGE]
            }
        }
        BALANCE_CHANGE = "[?ZOO_mother_influence_gain]"
    }
	#Calculate overflow
	set_variable = { bop_id = 5 }
	f_get_bop_value = yes
	set_temp_variable = { ZOO_actual_mother_influence = bop_value }
	add_to_temp_variable = { ZOO_actual_mother_influence = ZOO_mother_influence_gain }

	if = {
		limit = { 
			check_variable = {
				var = ZOO_actual_mother_influence
				value = 1
				compare = greater_than_or_equals
			}
		}
		subtract_from_temp_variable = { ZOO_actual_mother_influence = 1 }
		multiply_temp_variable = { ZOO_actual_mother_influence = -1 }
		custom_effect_tooltip = zongo_queen_mother_too_influential_tt
		add_stability = ZOO_actual_mother_influence
	}
}

ZOO_clr_buttons = {
	set_country_flag = ZOO_railroad_construction
	clr_country_flag = ZOO_select_zamu_line_building
	clr_country_flag = ZOO_select_zuba_line_building
	clr_country_flag = ZOO_select_zupinamba_line_building
	clr_country_flag = ZOO_select_tanaigha_line_building
	clr_country_flag = ZOO_select_melahaka_line_building
	clr_country_flag = ZOO_select_roam_line_building
	clr_country_flag = ZOO_select_tampuk_line_building
	clr_country_flag = ZOO_select_naugdaw_line_building
	clr_country_flag = ZOO_select_roam_expansion_pt1_line_building
	clr_country_flag = ZOO_select_roam_expansion_pt2_line_building
	clr_country_flag = ZOO_select_zaikiria_line_building
	clr_country_flag = ZOO_select_kiria_line_building
	clr_country_flag = ZOO_select_sambovato_line_building
}

ZOO_stop_building = {
	ZOO_clr_buttons = yes
	clr_country_flag = ZOO_railroad_construction
}

ZOO_weekly_railroad_construction = {
	random_list = {
		900 = {
			#Nothing happens
		}
		10 = {
			#bandit attack
			country_event = zongo_dilemma.1
		}
		10 = {
			#worker demand higher wages
			country_event = zongo_dilemma.2
		}
		10 = {
			#natural terrain making it difficult
			country_event = zongo_dilemma.3
		}
		10 = {
			#wrong railway track size
			country_event = zongo_dilemma.4
		}
		10 = {
			#delivery delays
			country_event = zongo_dilemma.5
		}
		10 = {
			#generic behind of schedule
			country_event = zongo_dilemma.6
		}
		10 = {
			#native creature disrupting work
			country_event = zongo_dilemma.7
		}
		10 = {
			#corruption causing lack of funds
			country_event = zongo_dilemma.8
		}
		10 = {
			#Religious holiday, people take day off
			country_event = zongo_dilemma.9
		}
		10 = {
			#workers strike
			country_event = zongo_dilemma.10
			modifier = {
				factor = 0.7
				has_completed_focus = zoo_railway_4_2
			}
		}
	}
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_tiles_stored
				value = 1
				compare = greater_than_or_equals
			}
		}
		if = {
			limit = { has_country_flag = ZOO_select_zamu_line_building }
			ZOO_construct_zamu_line = yes
		}
		else_if = {
			limit = { has_country_flag = ZOO_select_zuba_line_building }
			ZOO_construct_zuba_line = yes
		}
		else_if = {
			limit = { has_country_flag = ZOO_select_zupinamba_line_building }
			ZOO_construct_zupinamba_line = yes
		}
		else_if = {
			limit = { has_country_flag = ZOO_select_tanaigha_line_building }
			ZOO_construct_tanaigha_line = yes
		}
		else_if = {
			limit = { has_country_flag = ZOO_select_melahaka_line_building }
			ZOO_construct_melahaka_line = yes
		}
		else_if = {
			limit = { has_country_flag = ZOO_select_roam_line_building }
			ZOO_construct_roam_line = yes
		}
		else_if = {
			limit = { has_country_flag = ZOO_select_tampuk_line_building }
			ZOO_construct_tampuk_line = yes
		}
		else_if = {
			limit = { has_country_flag = ZOO_select_naugdaw_line_building }
			ZOO_construct_naugdaw_line = yes
		}
		else_if = {
			limit = { has_country_flag = ZOO_select_roam_expansion_pt1_line_building }
			ZOO_construct_roam_expansion_pt1_line = yes
		}
		else_if = {
			limit = { has_country_flag = ZOO_select_roam_expansion_pt2_line_building }
			ZOO_construct_roam_expansion_pt2_line = yes
		}
		else_if = {
			limit = { has_country_flag = ZOO_select_zaikiria_line_building }
			ZOO_construct_zaikiria_line = yes
		}
		else_if = {
			limit = { has_country_flag = ZOO_select_kiria_line_building }
			ZOO_construct_kiria_line = yes
		}
		else_if = {
			limit = { has_country_flag = ZOO_select_sambovato_line_building }
			ZOO_construct_sambovato_line = yes
		}
		else = {
			country_event = zongo_railway.100
		}
	}
}

ZOO_construct_zamu_line = {
	#Remove the amount of full tiles that are build from stored, save the temp variable of amount build
	set_temp_variable = { ZOO_railway_tiles_to_be_built = ZOO_railway_tiles_stored }
	subtract_from_temp_variable = { ZOO_railway_tiles_to_be_built = 0.5 }
	round_temp_variable = ZOO_railway_tiles_to_be_built
	subtract_from_variable = { ZOO_railway_tiles_stored = ZOO_railway_tiles_to_be_built }

	#determine the end index, progress + amount build ZOO_railway_tiles_to_be_built
	set_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_zamu_line_progress }
	add_to_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tiles_to_be_built }


	set_temp_variable = { temp_2 = ZOO_railway_zamu_line_progress }
	for_loop_effect = {
		start = ZOO_railway_zamu_line_progress
		end = ZOO_railway_tiles_end_index
		value = temp
		compare = less_than
		
		add_to_temp_variable = { temp_2 = 1 }
		meta_effect = {
			text = {
				build_railway = {
					level = 1
					path = { [FIRST_TILE] [SECOND_TILE] }				
				}
			}
			
			FIRST_TILE = "[?ZOO_railway_zamu_line^temp]"
			SECOND_TILE = "[?ZOO_railway_zamu_line^temp_2]"
		}
		
	}
	add_to_variable = { ZOO_railway_zamu_line_progress = ZOO_railway_tiles_to_be_built }
	
	###FOR GUI
	set_variable = { ZOO_railway_zamu_line_progress_procent = ZOO_railway_zamu_line_progress }
	divide_variable = { ZOO_railway_zamu_line_progress_procent = ZOO_railway_zamu_line_length }
	multiply_variable = { ZOO_railway_zamu_line_progress_procent = 100 }
	###FOR GUI
	
	#End of the line?
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_zamu_line_progress
				value = ZOO_railway_zamu_line_length
				compare = greater_than_or_equals
			}
		}
		set_variable = { ZOO_railway_zamu_line_progress = 0 }
		add_to_variable = { ZOO_railway_zamu_line_level = 1 }
		set_variable = { ZOO_railway_zamu_line_progress_procent = 0 }
		if = {
			limit = {
				OR = {
					check_variable = {
						var = ZOO_railway_zamu_line_level
						value = ZOO_unlocked_level_x_railroads
						compare = greater_than_or_equals
					}
					is_ai = yes
				}
			}
			ZOO_stop_building = yes
		}
		if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zamu_line_level
					value = 1
					compare = equals
				}
			}
			country_event = zongo_railway.1
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zamu_line_level
					value = 2
					compare = equals
				}
			}
			country_event = zongo_railway.2
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zamu_line_level
					value = 3
					compare = equals
				}
			}
			country_event = zongo_railway.3
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zamu_line_level
					value = 4
					compare = equals
				}
			}
			country_event = zongo_railway.4
		}
		else = {
			country_event = zongo_railway.5
		}
	}
}

ZOO_construct_zupinamba_line = {
	#Remove the amount of full tiles that are build from stored, save the temp variable of amount build
	set_temp_variable = { ZOO_railway_tiles_to_be_built = ZOO_railway_tiles_stored }
	subtract_from_temp_variable = { ZOO_railway_tiles_to_be_built = 0.5 }
	round_temp_variable = ZOO_railway_tiles_to_be_built
	subtract_from_variable = { ZOO_railway_tiles_stored = ZOO_railway_tiles_to_be_built }

	#determine the end index, progress + amount build ZOO_railway_tiles_to_be_built
	set_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_zupinamba_line_progress }
	add_to_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tiles_to_be_built }

	set_temp_variable = { temp_2 = ZOO_railway_zupinamba_line_progress }
	for_loop_effect = {
		start = ZOO_railway_zupinamba_line_progress
		end = ZOO_railway_tiles_end_index
		value = temp
		compare = less_than
		
		add_to_temp_variable = { temp_2 = 1 }
		meta_effect = {
			text = {
				build_railway = {
					level = 1
					path = { [FIRST_TILE] [SECOND_TILE] }				
				}
			}
			
			FIRST_TILE = "[?ZOO_railway_zupinamba_line^temp]"
			SECOND_TILE = "[?ZOO_railway_zupinamba_line^temp_2]"
		}
	}
	add_to_variable = { ZOO_railway_zupinamba_line_progress = ZOO_railway_tiles_to_be_built }
	
	###FOR GUI
	set_variable = { ZOO_railway_zupinamba_line_progress_procent = ZOO_railway_zupinamba_line_progress }
	divide_variable = { ZOO_railway_zupinamba_line_progress_procent = ZOO_railway_zupinamba_line_length }
	multiply_variable = { ZOO_railway_zupinamba_line_progress_procent = 100 }
	###FOR GUI
	
	#End of the line?
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_zupinamba_line_progress
				value = ZOO_railway_zupinamba_line_length
				compare = greater_than_or_equals
			}
		}
		set_variable = { ZOO_railway_zupinamba_line_progress = 0 }
		add_to_variable = { ZOO_railway_zupinamba_line_level = 1 }
		set_variable = { ZOO_railway_zupinamba_line_progress_procent = 0 }
		if = {
			limit = {
				OR = {
					check_variable = {
						var = ZOO_railway_zupinamba_line_level
						value = ZOO_unlocked_level_x_railroads
						compare = greater_than_or_equals
					}
					is_ai = yes
				}
			}
			ZOO_stop_building = yes
		}
		
		if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zupinamba_line_level
					value = 1
					compare = equals
				}
			}
			country_event = zongo_railway.6
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zupinamba_line_level
					value = 2
					compare = equals
				}
			}
			country_event = zongo_railway.7
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zupinamba_line_level
					value = 3
					compare = equals
				}
			}
			country_event = zongo_railway.8
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zupinamba_line_level
					value = 4
					compare = equals
				}
			}
			country_event = zongo_railway.9
		}
		else = {
			country_event = zongo_railway.10
		}
	}
}

ZOO_construct_zuba_line = {
	#Remove the amount of full tiles that are build from stored, save the temp variable of amount build
	set_temp_variable = { ZOO_railway_tiles_to_be_built = ZOO_railway_tiles_stored }
	subtract_from_temp_variable = { ZOO_railway_tiles_to_be_built = 0.5 }
	round_temp_variable = ZOO_railway_tiles_to_be_built
	subtract_from_variable = { ZOO_railway_tiles_stored = ZOO_railway_tiles_to_be_built }

	#determine the end index, progress + amount build ZOO_railway_tiles_to_be_built
	set_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_zuba_line_progress }
	add_to_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tiles_to_be_built }

	set_temp_variable = { temp_2 = ZOO_railway_zuba_line_progress }
	for_loop_effect = {
		start = ZOO_railway_zuba_line_progress
		end = ZOO_railway_tiles_end_index
		value = temp
		compare = less_than
		
		add_to_temp_variable = { temp_2 = 1 }
		meta_effect = {
			text = {
				build_railway = {
					level = 1
					path = { [FIRST_TILE] [SECOND_TILE] }				
				}
			}
			
			FIRST_TILE = "[?ZOO_railway_zuba_line^temp]"
			SECOND_TILE = "[?ZOO_railway_zuba_line^temp_2]"
		}
	}
	add_to_variable = { ZOO_railway_zuba_line_progress = ZOO_railway_tiles_to_be_built }
	
	###FOR GUI
	set_variable = { ZOO_railway_zuba_line_progress_procent = ZOO_railway_zuba_line_progress }
	divide_variable = { ZOO_railway_zuba_line_progress_procent = ZOO_railway_zuba_line_length }
	multiply_variable = { ZOO_railway_zuba_line_progress_procent = 100 }
	###FOR GUI
	
	#End of the line?
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_zuba_line_progress
				value = ZOO_railway_zuba_line_length
				compare = greater_than_or_equals
			}
		}
		set_variable = { ZOO_railway_zuba_line_progress = 0 }
		add_to_variable = { ZOO_railway_zuba_line_level = 1 }
		set_variable = { ZOO_railway_zuba_line_progress_procent = 0 }
		if = {
			limit = {
				OR = {
					check_variable = {
						var = ZOO_railway_zuba_line_level
						value = ZOO_unlocked_level_x_railroads
						compare = greater_than_or_equals
					}
					is_ai = yes
				}
			}
			ZOO_stop_building = yes
		}
		
		if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zuba_line_level
					value = 1
					compare = equals
				}
			}
			country_event = zongo_railway.11
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zuba_line_level
					value = 2
					compare = equals
				}
			}
			country_event = zongo_railway.12
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zuba_line_level
					value = 3
					compare = equals
				}
			}
			country_event = zongo_railway.13
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zuba_line_level
					value = 4
					compare = equals
				}
			}
			country_event = zongo_railway.14
		}
		else = {
			country_event = zongo_railway.15
		}
	}
}

ZOO_construct_tanaigha_line = {
	#Remove the amount of full tiles that are build from stored, save the temp variable of amount build
	set_temp_variable = { ZOO_railway_tiles_to_be_built = ZOO_railway_tiles_stored }
	subtract_from_temp_variable = { ZOO_railway_tiles_to_be_built = 0.5 }
	round_temp_variable = ZOO_railway_tiles_to_be_built
	subtract_from_variable = { ZOO_railway_tiles_stored = ZOO_railway_tiles_to_be_built }

	#determine the end index, progress + amount build ZOO_railway_tiles_to_be_built
	set_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tanaigha_line_progress }
	add_to_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tiles_to_be_built }

	set_temp_variable = { temp_2 = ZOO_railway_tanaigha_line_progress }
	for_loop_effect = {
		start = ZOO_railway_tanaigha_line_progress
		end = ZOO_railway_tiles_end_index
		value = temp
		compare = less_than
		
		add_to_temp_variable = { temp_2 = 1 }
		meta_effect = {
			text = {
				build_railway = {
					level = 1
					path = { [FIRST_TILE] [SECOND_TILE] }				
				}
			}
			
			FIRST_TILE = "[?ZOO_railway_tanaigha_line^temp]"
			SECOND_TILE = "[?ZOO_railway_tanaigha_line^temp_2]"
		}
	}
	add_to_variable = { ZOO_railway_tanaigha_line_progress = ZOO_railway_tiles_to_be_built }
	
	###FOR GUI
	set_variable = { ZOO_railway_tanaigha_line_progress_procent = ZOO_railway_tanaigha_line_progress }
	divide_variable = { ZOO_railway_tanaigha_line_progress_procent = ZOO_railway_tanaigha_line_length }
	multiply_variable = { ZOO_railway_tanaigha_line_progress_procent = 100 }
	###FOR GUI
	
	#End of the line?
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_tanaigha_line_progress
				value = ZOO_railway_tanaigha_line_length
				compare = greater_than_or_equals
			}
		}
		set_variable = { ZOO_railway_tanaigha_line_progress = 0 }
		add_to_variable = { ZOO_railway_tanaigha_line_level = 1 }
		set_variable = { ZOO_railway_tanaigha_line_progress_procent = 0 }
		if = {
			limit = {
				OR = {
					check_variable = {
						var = ZOO_railway_tanaigha_line_level
						value = ZOO_unlocked_level_x_southern_railroads
						compare = greater_than_or_equals
					}
					is_ai = yes
				}
			}
			ZOO_stop_building = yes
		}
		
		if = {
			limit = {
				check_variable = {
					var = ZOO_railway_tanaigha_line_level
					value = 1
					compare = equals
				}
			}
			country_event = zongo_railway.16
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_tanaigha_line_level
					value = 2
					compare = equals
				}
			}
			country_event = zongo_railway.17
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_tanaigha_line_level
					value = 3
					compare = equals
				}
			}
			country_event = zongo_railway.18
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_tanaigha_line_level
					value = 4
					compare = equals
				}
			}
			country_event = zongo_railway.19
		}
		else = {
			country_event = zongo_railway.20
		}
	}
}

ZOO_construct_melahaka_line = {
	#Remove the amount of full tiles that are build from stored, save the temp variable of amount build
	set_temp_variable = { ZOO_railway_tiles_to_be_built = ZOO_railway_tiles_stored }
	subtract_from_temp_variable = { ZOO_railway_tiles_to_be_built = 0.5 }
	round_temp_variable = ZOO_railway_tiles_to_be_built
	subtract_from_variable = { ZOO_railway_tiles_stored = ZOO_railway_tiles_to_be_built }

	#determine the end index, progress + amount build ZOO_railway_tiles_to_be_built
	set_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_melahaka_line_progress }
	add_to_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tiles_to_be_built }

	set_temp_variable = { temp_2 = ZOO_railway_melahaka_line_progress }
	for_loop_effect = {
		start = ZOO_railway_melahaka_line_progress
		end = ZOO_railway_tiles_end_index
		value = temp
		compare = less_than
		
		add_to_temp_variable = { temp_2 = 1 }
		meta_effect = {
			text = {
				build_railway = {
					level = 1
					path = { [FIRST_TILE] [SECOND_TILE] }				
				}
			}
			
			FIRST_TILE = "[?ZOO_railway_melahaka_line^temp]"
			SECOND_TILE = "[?ZOO_railway_melahaka_line^temp_2]"
		}
	}
	add_to_variable = { ZOO_railway_melahaka_line_progress = ZOO_railway_tiles_to_be_built }
	
	###FOR GUI
	set_variable = { ZOO_railway_melahaka_line_progress_procent = ZOO_railway_melahaka_line_progress }
	divide_variable = { ZOO_railway_melahaka_line_progress_procent = ZOO_railway_melahaka_line_length }
	multiply_variable = { ZOO_railway_melahaka_line_progress_procent = 100 }
	###FOR GUI
	
	#End of the line?
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_melahaka_line_progress
				value = ZOO_railway_melahaka_line_length
				compare = greater_than_or_equals
			}
		}
		set_variable = { ZOO_railway_melahaka_line_progress = 0 }
		add_to_variable = { ZOO_railway_melahaka_line_level = 1 }
		set_variable = { ZOO_railway_melahaka_line_progress_procent = 0 }
		if = {
			limit = {
				OR = {
					check_variable = {
						var = ZOO_railway_melahaka_line_level
						value = ZOO_unlocked_level_x_southern_railroads
						compare = greater_than_or_equals
					}
					is_ai = yes
				}
			}
			ZOO_stop_building = yes
		}
		
		if = {
			limit = {
				check_variable = {
					var = ZOO_railway_melahaka_line_level
					value = 1
					compare = equals
				}
			}
			country_event = zongo_railway.21
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_melahaka_line_level
					value = 2
					compare = equals
				}
			}
			country_event = zongo_railway.22
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_melahaka_line_level
					value = 3
					compare = equals
				}
			}
			country_event = zongo_railway.23
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_melahaka_line_level
					value = 4
					compare = equals
				}
			}
			country_event = zongo_railway.24
		}
		else = {
			country_event = zongo_railway.25
		}
	}
}

ZOO_construct_roam_line = {
	#Remove the amount of full tiles that are build from stored, save the temp variable of amount build
	set_temp_variable = { ZOO_railway_tiles_to_be_built = ZOO_railway_tiles_stored }
	subtract_from_temp_variable = { ZOO_railway_tiles_to_be_built = 0.5 }
	round_temp_variable = ZOO_railway_tiles_to_be_built
	subtract_from_variable = { ZOO_railway_tiles_stored = ZOO_railway_tiles_to_be_built }

	#determine the end index, progress + amount build ZOO_railway_tiles_to_be_built
	set_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_roam_line_progress }
	add_to_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tiles_to_be_built }

	set_temp_variable = { temp_2 = ZOO_railway_roam_line_progress }
	for_loop_effect = {
		start = ZOO_railway_roam_line_progress
		end = ZOO_railway_tiles_end_index
		value = temp
		compare = less_than
		
		add_to_temp_variable = { temp_2 = 1 }
		meta_effect = {
			text = {
				build_railway = {
					level = 1
					path = { [FIRST_TILE] [SECOND_TILE] }				
				}
			}
			
			FIRST_TILE = "[?ZOO_railway_roam_line^temp]"
			SECOND_TILE = "[?ZOO_railway_roam_line^temp_2]"
		}
	}
	add_to_variable = { ZOO_railway_roam_line_progress = ZOO_railway_tiles_to_be_built }
	
	###FOR GUI
	set_variable = { ZOO_railway_roam_line_progress_procent = ZOO_railway_roam_line_progress }
	divide_variable = { ZOO_railway_roam_line_progress_procent = ZOO_railway_roam_line_length }
	multiply_variable = { ZOO_railway_roam_line_progress_procent = 100 }
	###FOR GUI
	
	#End of the line?
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_roam_line_progress
				value = ZOO_railway_roam_line_length
				compare = greater_than_or_equals
			}
		}
		set_variable = { ZOO_railway_roam_line_progress = 0 }
		add_to_variable = { ZOO_railway_roam_line_level = 1 }
		set_variable = { ZOO_railway_roam_line_progress_procent = ZOO_railway_roam_line_progress }
		if = {
			limit = {
				OR = {
					check_variable = {
						var = ZOO_railway_roam_line_level
						value = ZOO_unlocked_level_x_roam_railroads
						compare = greater_than_or_equals
					}
					is_ai = yes
				}
			}
			ZOO_stop_building = yes
		}
		
		if = {
			limit = {
				check_variable = {
					var = ZOO_railway_roam_line_level
					value = 1
					compare = equals
				}
			}
			country_event = zongo_railway.26
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_roam_line_level
					value = 2
					compare = equals
				}
			}
			country_event = zongo_railway.27
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_roam_line_level
					value = 3
					compare = equals
				}
			}
			country_event = zongo_railway.28
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_roam_line_level
					value = 4
					compare = equals
				}
			}
			country_event = zongo_railway.29
		}
		else = {
			country_event = zongo_railway.30
		}
	}
}

ZOO_construct_tampuk_line = {
	#Remove the amount of full tiles that are build from stored, save the temp variable of amount build
	set_temp_variable = { ZOO_railway_tiles_to_be_built = ZOO_railway_tiles_stored }
	subtract_from_temp_variable = { ZOO_railway_tiles_to_be_built = 0.5 }
	round_temp_variable = ZOO_railway_tiles_to_be_built
	subtract_from_variable = { ZOO_railway_tiles_stored = ZOO_railway_tiles_to_be_built }

	#determine the end index, progress + amount build ZOO_railway_tiles_to_be_built
	set_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tampuk_line_progress }
	add_to_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tiles_to_be_built }

	set_temp_variable = { temp_2 = ZOO_railway_tampuk_line_progress }
	for_loop_effect = {
		start = ZOO_railway_tampuk_line_progress
		end = ZOO_railway_tiles_end_index
		value = temp
		compare = less_than
		
		add_to_temp_variable = { temp_2 = 1 }
		meta_effect = {
			text = {
				build_railway = {
					level = 1
					path = { [FIRST_TILE] [SECOND_TILE] }				
				}
			}
			
			FIRST_TILE = "[?ZOO_railway_tampuk_line^temp]"
			SECOND_TILE = "[?ZOO_railway_tampuk_line^temp_2]"
		}
	}
	add_to_variable = { ZOO_railway_tampuk_line_progress = ZOO_railway_tiles_to_be_built }
	
	###FOR GUI
	set_variable = { ZOO_railway_tampuk_line_progress_procent = ZOO_railway_tampuk_line_progress }
	divide_variable = { ZOO_railway_tampuk_line_progress_procent = ZOO_railway_tampuk_line_length }
	multiply_variable = { ZOO_railway_tampuk_line_progress_procent = 100 }
	###FOR GUI
	
	#End of the line?
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_tampuk_line_progress
				value = ZOO_railway_tampuk_line_length
				compare = greater_than_or_equals
			}
		}
		set_variable = { ZOO_railway_tampuk_line_progress = 0 }
		add_to_variable = { ZOO_railway_tampuk_line_level = 1 }
		set_variable = { ZOO_railway_tampuk_line_progress_procent = 0 }
		if = {
			limit = {
				OR = {
					check_variable = {
						var = ZOO_railway_tampuk_line_level
						value = ZOO_unlocked_level_x_tampuk_railroads
						compare = greater_than_or_equals
					}
					is_ai = yes
				}
			}
			ZOO_stop_building = yes
		}
		
		if = {
			limit = {
				check_variable = {
					var = ZOO_railway_tampuk_line_level
					value = 1
					compare = equals
				}
			}
			country_event = zongo_railway.31
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_tampuk_line_level
					value = 2
					compare = equals
				}
			}
			country_event = zongo_railway.32
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_tampuk_line_level
					value = 3
					compare = equals
				}
			}
			country_event = zongo_railway.33
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_tampuk_line_level
					value = 4
					compare = equals
				}
			}
			country_event = zongo_railway.34
		}
		else = {
			country_event = zongo_railway.35
		}
	}
}

ZOO_construct_naugdaw_line = {
	#Remove the amount of full tiles that are build from stored, save the temp variable of amount build
	set_temp_variable = { ZOO_railway_tiles_to_be_built = ZOO_railway_tiles_stored }
	subtract_from_temp_variable = { ZOO_railway_tiles_to_be_built = 0.5 }
	round_temp_variable = ZOO_railway_tiles_to_be_built
	subtract_from_variable = { ZOO_railway_tiles_stored = ZOO_railway_tiles_to_be_built }

	#determine the end index, progress + amount build ZOO_railway_tiles_to_be_built
	set_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_naugdaw_line_progress }
	add_to_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tiles_to_be_built }


	set_temp_variable = { temp_2 = ZOO_railway_naugdaw_line_progress }
	for_loop_effect = {
		start = ZOO_railway_naugdaw_line_progress
		end = ZOO_railway_tiles_end_index
		value = temp
		compare = less_than
		
		add_to_temp_variable = { temp_2 = 1 }
		meta_effect = {
			text = {
				build_railway = {
					level = 1
					path = { [FIRST_TILE] [SECOND_TILE] }				
				}
			}
			
			FIRST_TILE = "[?ZOO_railway_naugdaw_line^temp]"
			SECOND_TILE = "[?ZOO_railway_naugdaw_line^temp_2]"
		}
		
	}
	add_to_variable = { ZOO_railway_naugdaw_line_progress = ZOO_railway_tiles_to_be_built }
	
	###FOR GUI
	set_variable = { ZOO_railway_naugdaw_line_progress_procent = ZOO_railway_naugdaw_line_progress }
	divide_variable = { ZOO_railway_naugdaw_line_progress_procent = ZOO_railway_naugdaw_line_length }
	multiply_variable = { ZOO_railway_naugdaw_line_progress_procent = 100 }
	###FOR GUI
	
	#End of the line?
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_naugdaw_line_progress
				value = ZOO_railway_naugdaw_line_length
				compare = greater_than_or_equals
			}
		}
		set_variable = { ZOO_railway_naugdaw_line_progress = 0 }
		add_to_variable = { ZOO_railway_naugdaw_line_level = 1 }
		set_variable = { ZOO_railway_naugdaw_line_progress_procent = 0 }
		if = {
			limit = {
				OR = {
					check_variable = {
						var = ZOO_railway_naugdaw_line_level
						value = ZOO_unlocked_level_x_naugdaw_railroads
						compare = greater_than_or_equals
					}
					is_ai = yes
				}
			}
			ZOO_stop_building = yes
		}
		if = {
			limit = {
				check_variable = {
					var = ZOO_railway_naugdaw_line_level
					value = 1
					compare = equals
				}
			}
			country_event = zongo_railway.36
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_naugdaw_line_level
					value = 2
					compare = equals
				}
			}
			country_event = zongo_railway.37
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_naugdaw_line_level
					value = 3
					compare = equals
				}
			}
			country_event = zongo_railway.38
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_naugdaw_line_level
					value = 4
					compare = equals
				}
			}
			country_event = zongo_railway.39
		}
		else = {
			country_event = zongo_railway.40
		}
	}
}

ZOO_construct_roam_expansion_pt1_line = {
	#Remove the amount of full tiles that are build from stored, save the temp variable of amount build
	set_temp_variable = { ZOO_railway_tiles_to_be_built = ZOO_railway_tiles_stored }
	subtract_from_temp_variable = { ZOO_railway_tiles_to_be_built = 0.5 }
	round_temp_variable = ZOO_railway_tiles_to_be_built
	subtract_from_variable = { ZOO_railway_tiles_stored = ZOO_railway_tiles_to_be_built }

	#determine the end index, progress + amount build ZOO_railway_tiles_to_be_built
	set_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_roam_expansion_pt1_line_progress }
	add_to_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tiles_to_be_built }


	set_temp_variable = { temp_2 = ZOO_railway_roam_expansion_pt1_line_progress }
	for_loop_effect = {
		start = ZOO_railway_roam_expansion_pt1_line_progress
		end = ZOO_railway_tiles_end_index
		value = temp
		compare = less_than
		
		add_to_temp_variable = { temp_2 = 1 }
		meta_effect = {
			text = {
				build_railway = {
					level = 1
					path = { [FIRST_TILE] [SECOND_TILE] }				
				}
			}
			
			FIRST_TILE = "[?ZOO_railway_roam_expansion_pt1_line^temp]"
			SECOND_TILE = "[?ZOO_railway_roam_expansion_pt1_line^temp_2]"
		}
		
	}
	add_to_variable = { ZOO_railway_roam_expansion_pt1_line_progress = ZOO_railway_tiles_to_be_built }
	
	###FOR GUI
	set_variable = { ZOO_railway_roam_expansion_pt1_line_progress_procent = ZOO_railway_roam_expansion_pt1_line_progress }
	divide_variable = { ZOO_railway_roam_expansion_pt1_line_progress_procent = ZOO_railway_roam_expansion_pt1_line_length }
	multiply_variable = { ZOO_railway_roam_expansion_pt1_line_progress_procent = 100 }
	###FOR GUI
	
	#End of the line?
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_roam_expansion_pt1_line_progress
				value = ZOO_railway_roam_expansion_pt1_line_length
				compare = greater_than_or_equals
			}
		}
		set_variable = { ZOO_railway_roam_expansion_pt1_line_progress = 0 }
		add_to_variable = { ZOO_railway_roam_expansion_pt1_line_level = 1 }
		set_variable = { ZOO_railway_roam_expansion_pt1_line_progress_procent = 0 }
		if = {
			limit = {
				OR = {
					check_variable = {
						var = ZOO_railway_roam_expansion_pt1_line_level
						value = ZOO_unlocked_level_x_railroads
						compare = greater_than_or_equals
					}
					is_ai = yes
				}
			}
			ZOO_stop_building = yes
		}
		if = {
			limit = {
				check_variable = {
					var = ZOO_railway_roam_expansion_pt1_line_level
					value = 1
					compare = equals
				}
			}
			country_event = zongo_railway.41
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_roam_expansion_pt1_line_level
					value = 2
					compare = equals
				}
			}
			country_event = zongo_railway.42
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_roam_expansion_pt1_line_level
					value = 3
					compare = equals
				}
			}
			country_event = zongo_railway.43
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_roam_expansion_pt1_line_level
					value = 4
					compare = equals
				}
			}
			country_event = zongo_railway.44
		}
		else = {
			country_event = zongo_railway.45
		}
	}
}

ZOO_construct_roam_expansion_pt2_line = {
	#Remove the amount of full tiles that are build from stored, save the temp variable of amount build
	set_temp_variable = { ZOO_railway_tiles_to_be_built = ZOO_railway_tiles_stored }
	subtract_from_temp_variable = { ZOO_railway_tiles_to_be_built = 0.5 }
	round_temp_variable = ZOO_railway_tiles_to_be_built
	subtract_from_variable = { ZOO_railway_tiles_stored = ZOO_railway_tiles_to_be_built }

	#determine the end index, progress + amount build ZOO_railway_tiles_to_be_built
	set_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_roam_expansion_pt2_line_progress }
	add_to_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tiles_to_be_built }


	set_temp_variable = { temp_2 = ZOO_railway_roam_expansion_pt2_line_progress }
	for_loop_effect = {
		start = ZOO_railway_roam_expansion_pt2_line_progress
		end = ZOO_railway_tiles_end_index
		value = temp
		compare = less_than
		
		add_to_temp_variable = { temp_2 = 1 }
		meta_effect = {
			text = {
				build_railway = {
					level = 1
					path = { [FIRST_TILE] [SECOND_TILE] }				
				}
			}
			
			FIRST_TILE = "[?ZOO_railway_roam_expansion_pt2_line^temp]"
			SECOND_TILE = "[?ZOO_railway_roam_expansion_pt2_line^temp_2]"
		}
		
	}
	add_to_variable = { ZOO_railway_roam_expansion_pt2_line_progress = ZOO_railway_tiles_to_be_built }
	
	###FOR GUI
	set_variable = { ZOO_railway_roam_expansion_pt2_line_progress_procent = ZOO_railway_roam_expansion_pt2_line_progress }
	divide_variable = { ZOO_railway_roam_expansion_pt2_line_progress_procent = ZOO_railway_roam_expansion_pt2_line_length }
	multiply_variable = { ZOO_railway_roam_expansion_pt2_line_progress_procent = 100 }
	###FOR GUI
	
	#End of the line?
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_roam_expansion_pt2_line_progress
				value = ZOO_railway_roam_expansion_pt2_line_length
				compare = greater_than_or_equals
			}
		}
		set_variable = { ZOO_railway_roam_expansion_pt2_line_progress = 0 }
		add_to_variable = { ZOO_railway_roam_expansion_pt2_line_level = 1 }
		set_variable = { ZOO_railway_roam_expansion_pt2_line_progress_procent = 0 }
		if = {
			limit = {
				OR = {
					check_variable = {
						var = ZOO_railway_roam_expansion_pt2_line_level
						value = ZOO_unlocked_level_x_railroads
						compare = greater_than_or_equals
					}
					is_ai = yes
				}
			}
			ZOO_stop_building = yes
		}
		if = {
			limit = {
				check_variable = {
					var = ZOO_railway_roam_expansion_pt2_line_level
					value = 1
					compare = equals
				}
			}
			country_event = zongo_railway.46
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_roam_expansion_pt2_line_level
					value = 2
					compare = equals
				}
			}
			country_event = zongo_railway.47
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_roam_expansion_pt2_line_level
					value = 3
					compare = equals
				}
			}
			country_event = zongo_railway.48
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_roam_expansion_pt2_line_level
					value = 4
					compare = equals
				}
			}
			country_event = zongo_railway.49
		}
		else = {
			country_event = zongo_railway.50
		}
	}
}

ZOO_construct_zaikiria_line = {
	#Remove the amount of full tiles that are build from stored, save the temp variable of amount build
	set_temp_variable = { ZOO_railway_tiles_to_be_built = ZOO_railway_tiles_stored }
	subtract_from_temp_variable = { ZOO_railway_tiles_to_be_built = 0.5 }
	round_temp_variable = ZOO_railway_tiles_to_be_built
	subtract_from_variable = { ZOO_railway_tiles_stored = ZOO_railway_tiles_to_be_built }

	#determine the end index, progress + amount build ZOO_railway_tiles_to_be_built
	set_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_zaikiria_line_progress }
	add_to_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tiles_to_be_built }


	set_temp_variable = { temp_2 = ZOO_railway_zaikiria_line_progress }
	for_loop_effect = {
		start = ZOO_railway_zaikiria_line_progress
		end = ZOO_railway_tiles_end_index
		value = temp
		compare = less_than
		
		add_to_temp_variable = { temp_2 = 1 }
		meta_effect = {
			text = {
				build_railway = {
					level = 1
					path = { [FIRST_TILE] [SECOND_TILE] }				
				}
			}
			
			FIRST_TILE = "[?ZOO_railway_zaikiria_line^temp]"
			SECOND_TILE = "[?ZOO_railway_zaikiria_line^temp_2]"
		}
		
	}
	add_to_variable = { ZOO_railway_zaikiria_line_progress = ZOO_railway_tiles_to_be_built }
	
	###FOR GUI
	set_variable = { ZOO_railway_zaikiria_line_progress_procent = ZOO_railway_zaikiria_line_progress }
	divide_variable = { ZOO_railway_zaikiria_line_progress_procent = ZOO_railway_zaikiria_line_length }
	multiply_variable = { ZOO_railway_zaikiria_line_progress_procent = 100 }
	###FOR GUI
	
	#End of the line?
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_zaikiria_line_progress
				value = ZOO_railway_zaikiria_line_length
				compare = greater_than_or_equals
			}
		}
		set_variable = { ZOO_railway_zaikiria_line_progress = 0 }
		add_to_variable = { ZOO_railway_zaikiria_line_level = 1 }
		set_variable = { ZOO_railway_zaikiria_line_progress_procent = 0 }
		if = {
			limit = {
				OR = {
					check_variable = {
						var = ZOO_railway_zaikiria_line_level
						value = ZOO_unlocked_level_x_railroads
						compare = greater_than_or_equals
					}
					is_ai = yes
				}
			}
			ZOO_stop_building = yes
		}
		if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zaikiria_line_level
					value = 1
					compare = equals
				}
			}
			country_event = zongo_railway.51
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zaikiria_line_level
					value = 2
					compare = equals
				}
			}
			country_event = zongo_railway.52
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zaikiria_line_level
					value = 3
					compare = equals
				}
			}
			country_event = zongo_railway.53
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_zaikiria_line_level
					value = 4
					compare = equals
				}
			}
			country_event = zongo_railway.54
		}
		else = {
			country_event = zongo_railway.55
		}
	}
}

ZOO_construct_kiria_line = {
	#Remove the amount of full tiles that are build from stored, save the temp variable of amount build
	set_temp_variable = { ZOO_railway_tiles_to_be_built = ZOO_railway_tiles_stored }
	subtract_from_temp_variable = { ZOO_railway_tiles_to_be_built = 0.5 }
	round_temp_variable = ZOO_railway_tiles_to_be_built
	subtract_from_variable = { ZOO_railway_tiles_stored = ZOO_railway_tiles_to_be_built }

	#determine the end index, progress + amount build ZOO_railway_tiles_to_be_built
	set_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_kiria_line_progress }
	add_to_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tiles_to_be_built }


	set_temp_variable = { temp_2 = ZOO_railway_kiria_line_progress }
	for_loop_effect = {
		start = ZOO_railway_kiria_line_progress
		end = ZOO_railway_tiles_end_index
		value = temp
		compare = less_than
		
		add_to_temp_variable = { temp_2 = 1 }
		meta_effect = {
			text = {
				build_railway = {
					level = 1
					path = { [FIRST_TILE] [SECOND_TILE] }				
				}
			}
			
			FIRST_TILE = "[?ZOO_railway_kiria_line^temp]"
			SECOND_TILE = "[?ZOO_railway_kiria_line^temp_2]"
		}
		
	}
	add_to_variable = { ZOO_railway_kiria_line_progress = ZOO_railway_tiles_to_be_built }
	
	###FOR GUI
	set_variable = { ZOO_railway_kiria_line_progress_procent = ZOO_railway_kiria_line_progress }
	divide_variable = { ZOO_railway_kiria_line_progress_procent = ZOO_railway_kiria_line_length }
	multiply_variable = { ZOO_railway_kiria_line_progress_procent = 100 }
	###FOR GUI
	
	#End of the line?
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_kiria_line_progress
				value = ZOO_railway_kiria_line_length
				compare = greater_than_or_equals
			}
		}
		set_variable = { ZOO_railway_kiria_line_progress = 0 }
		add_to_variable = { ZOO_railway_kiria_line_level = 1 }
		set_variable = { ZOO_railway_kiria_line_progress_procent = 0 }
		if = {
			limit = {
				OR = {
					check_variable = {
						var = ZOO_railway_kiria_line_level
						value = ZOO_unlocked_level_x_railroads
						compare = greater_than_or_equals
					}
					is_ai = yes
				}
			}
			ZOO_stop_building = yes
		}
		if = {
			limit = {
				check_variable = {
					var = ZOO_railway_kiria_line_level
					value = 1
					compare = equals
				}
			}
			country_event = zongo_railway.56
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_kiria_line_level
					value = 2
					compare = equals
				}
			}
			country_event = zongo_railway.57
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_kiria_line_level
					value = 3
					compare = equals
				}
			}
			country_event = zongo_railway.58
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_kiria_line_level
					value = 4
					compare = equals
				}
			}
			country_event = zongo_railway.59
		}
		else = {
			country_event = zongo_railway.60
		}
	}
}

ZOO_construct_sambovato_line = {
	#Remove the amount of full tiles that are build from stored, save the temp variable of amount build
	set_temp_variable = { ZOO_railway_tiles_to_be_built = ZOO_railway_tiles_stored }
	subtract_from_temp_variable = { ZOO_railway_tiles_to_be_built = 0.5 }
	round_temp_variable = ZOO_railway_tiles_to_be_built
	subtract_from_variable = { ZOO_railway_tiles_stored = ZOO_railway_tiles_to_be_built }

	#determine the end index, progress + amount build ZOO_railway_tiles_to_be_built
	set_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_sambovato_line_progress }
	add_to_temp_variable = { ZOO_railway_tiles_end_index = ZOO_railway_tiles_to_be_built }

	set_temp_variable = { temp_2 = ZOO_railway_sambovato_line_progress }
	for_loop_effect = {
		start = ZOO_railway_sambovato_line_progress
		end = ZOO_railway_tiles_end_index
		value = temp
		compare = less_than
		
		add_to_temp_variable = { temp_2 = 1 }
		meta_effect = {
			text = {
				build_railway = {
					level = 1
					path = { [FIRST_TILE] [SECOND_TILE] }				
				}
			}
			
			FIRST_TILE = "[?ZOO_railway_sambovato_line^temp]"
			SECOND_TILE = "[?ZOO_railway_sambovato_line^temp_2]"
		}
	}
	add_to_variable = { ZOO_railway_sambovato_line_progress = ZOO_railway_tiles_to_be_built }
	
	###FOR GUI
	set_variable = { ZOO_railway_sambovato_line_progress_procent = ZOO_railway_sambovato_line_progress }
	divide_variable = { ZOO_railway_sambovato_line_progress_procent = ZOO_railway_sambovato_line_length }
	multiply_variable = { ZOO_railway_sambovato_line_progress_procent = 100 }
	###FOR GUI
	
	#End of the line?
	if = {
		limit = {
			check_variable = {
				var = ZOO_railway_sambovato_line_progress
				value = ZOO_railway_sambovato_line_length
				compare = greater_than_or_equals
			}
		}
		set_variable = { ZOO_railway_sambovato_line_progress = 0 }
		add_to_variable = { ZOO_railway_sambovato_line_level = 1 }
		set_variable = { ZOO_railway_sambovato_line_progress_procent = ZOO_railway_sambovato_line_progress }
		if = {
			limit = {
				OR = {
					check_variable = {
						var = ZOO_railway_sambovato_line_level
						value = ZOO_unlocked_level_x_roam_railroads
						compare = greater_than_or_equals
					}
					is_ai = yes
				}
			}
			ZOO_stop_building = yes
		}
		
		if = {
			limit = {
				check_variable = {
					var = ZOO_railway_sambovato_line_level
					value = 1
					compare = equals
				}
			}
			country_event = zongo_railway.61
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_sambovato_line_level
					value = 2
					compare = equals
				}
			}
			country_event = zongo_railway.62
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_sambovato_line_level
					value = 3
					compare = equals
				}
			}
			country_event = zongo_railway.63
		}
		else_if = {
			limit = {
				check_variable = {
					var = ZOO_railway_sambovato_line_level
					value = 4
					compare = equals
				}
			}
			country_event = zongo_railway.64
		}
		else = {
			country_event = zongo_railway.65
		}
	}
}
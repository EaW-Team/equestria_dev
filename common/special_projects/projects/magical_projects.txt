sp_what_is_friendship = {
	specialization = specialization_magical
	icon = GFX_sp_magical_what_is_friendship


	project_tags = {
		sp_tag_magical
	}

	ai_will_do = {
		base = 1
	}

	allowed = {
		always = no
	}
	
	available = {
		always = no
	}
	
	prototype_time = 1

	complexity = sp_complexity.insane
	
	project_output = {
		country_effects = {
			add_political_power = 100
		}
	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		#sp_land_generic_reward_army_xp_1
		#sp_land_generic_reward_army_xp_2
		#sp_land_generic_reward_army_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_race_tech_1
		sp_magical_generic_reward_race_tech_2
		sp_magical_generic_reward_race_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}

	unique_prototype_rewards = {
#		sp_TEST_reward = {
#			fire_only_once = yes
#	
#				threshold = { 
#					min = 0
#					max = 100
#				}
#	
#				weight = {
#					base = 99999
#				}
#	
#				option = {
#					token = sp_TEST_option
#	
#					iteration_output = {
#						country_effects = {
#							
#						}
#	
#						scientist_effects = {
#	
#						}
#	
#						facility_state_effects = {
#	
#						}
#					}
#			}
#		}
	}
}

######################################
######################################

#EQUESTRIA THIS LAND I LOVE

######################################
######################################

sp_magical_antiair = { ## windcannon
	specialization = specialization_magical
	icon = GFX_sp_magical_magitech_quarries

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 4
		 }
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 2
	}

	available = {
		FROM = {
			has_tech = magical_weapons1
		}
	}

	project_output = {
		country_effects = {
			
			custom_override_tooltip = {
				tooltip = {
					localization_key = SP_UNLOCK_BUILDING_ICON_DESC
					BUILDING = magical_anti_air
					BUILDING_DESCRIPTION = magical_anti_air_desc
					ICON_FRAME = 30
				}
				set_technology = {
					tech_magical_anti_air = 1
					popup = no
				}
			}
			mark_technology_tree_layout_dirty = yes
		}
	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}
}


sp_magical_shield_projector = { ## magicdefences
	specialization = specialization_magical
	icon = GFX_sp_magical_magitech_quarries

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 2
	}

	available = {
		FROM = {
			has_tech = magical_weapons1
		}
	}

	project_output = {
		country_effects = {
			
			custom_override_tooltip = {
				tooltip = {
					localization_key = SP_UNLOCK_BUILDING_ICON_DESC
					BUILDING = magical_shield
					BUILDING_DESCRIPTION = magical_shield_desc
					ICON_FRAME = 30
				}
				set_technology = {
					tech_magical_shield = 1
					popup = no
				}
			}
			mark_technology_tree_layout_dirty = yes
		}
	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}
}

sp_magical_assisted_quarries2 = { ## Magic-Assisted Quarries2
	specialization = specialization_magical
	icon = GFX_sp_magical_magitech_quarries

	project_tags = {
		sp_tag_magical
	}
	allowed = {
			tag = EQS
		}

	resource_cost = {
		resources = { 
			crystals = 4
		 }
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 2
	}

	available = {
		FROM = {
			has_tech = tech_magical_quarry
		}
	}

	project_output = {
		country_effects = {
			set_technology = {
				tech_magical_assisted_quarries_improved = 1
				popup = no
			}
			custom_effect_tooltip = tech_effect|tech_magical_assisted_quarries_improved
		}
	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}
}



######################################
######################################

  ###  #### #    # #### ###  #   ##
 #     #    ##   # #    #  # #  #  #
 #  ## ###  # #  # ###  ###  # #
 #   # #    #  # # #    # #  #  #  #
  ###  #### #   ## #### #  # #   ##

######################################
######################################

sp_magical_telekinetic_fields = { ## Induced Telekinetic Fields
	specialization = specialization_magical
	icon = GFX_sp_magical_telekinetic_fields

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.large
	prototype_time = sp_time.prototype.short
	breakthrough_cost = {
		specialization_magical = 1
	}

	available = {
		FROM = {
			has_tech = magical_weapons1
		}
	}

	project_output = {
		country_effects = {
			if = {
				limit = {
					NOT = {
						has_dlc = "Man the Guns"
					}
				}
				#custom_effect_tooltip = {
				#	localization_key = SP_UNLOCK_TECH
				#	TECH = tech_magical_telekinetic_field_ship
				#}
				add_equipment_bonus = {
					project = FROM
					bonus = {
						ship_hull_submarine = {
							armor_value = 0.1 instant = yes
						}
						ship_hull_light = {
							armor_value = 0.1 instant = yes
						}
						ship_hull_cruiser = {
							armor_value = 0.1 instant = yes
						}
						ship_hull_heavy = {
							armor_value = 0.1 instant = yes
						}
						ship_hull_carrier = {
							armor_value = 0.1 instant = yes
						}
					}
				}
				#hidden_effect = {
				#	set_technology = {
				#		tech_magical_telekinetic_field_ship = 1
				#		popup = no
				#	}					
				#}
			}
			if = {
				limit = {
					NOT = {
						has_dlc = "No Step Back"
					}
				}
				#custom_effect_tooltip = {
				#	localization_key = SP_UNLOCK_TECH
				#	TECH = tech_magical_telekinetic_field_tank
				#}
				add_equipment_bonus = {
					project = FROM
					bonus = {
						light_tank_chassis = {
							armor_value = 0.1 instant = yes
						}
						medium_tank_chassis = {
							armor_value = 0.1 instant = yes
						}
						heavy_tank_chassis = {
							armor_value = 0.1 instant = yes
						}
						super_heavy_tank_chassis = {
							armor_value = 0.1 instant = yes
						}
					}
				}
				#set_technology = {
				#	tech_magical_telekinetic_field_tank = 1
				#	popup = no
				#}
			}
			if = {
				limit = {
					NOT = {
						has_dlc = "By Blood Alone"
					}
				}
				#custom_effect_tooltip = {
				#	localization_key = SP_UNLOCK_TECH
				#	TECH = tech_magical_telekinetic_field_plane
				#}
				add_equipment_bonus = {
					project = FROM
					bonus = {
						small_plane_airframe = {
							armor_value = 0.1 instant = yes
						}
						cv_small_plane_airframe = {
							armor_value = 0.1 instant = yes
						}
						small_plane_cas_airframe = {
							armor_value = 0.1 instant = yes
						}
						cv_small_plane_cas_airframe = {
							armor_value = 0.1 instant = yes
						}
						small_plane_naval_bomber_airframe = {
							armor_value = 0.1 instant = yes
						}
						cv_small_plane_naval_bomber_airframe = {
							armor_value = 0.1 instant = yes
						}
						medium_plane_airframe = {
							armor_value = 0.1 instant = yes
						}
						medium_plane_fighter_airframe = {
							armor_value = 0.1 instant = yes
						}
						large_plane_airframe = {
							armor_value = 0.1 instant = yes
						}
						transport_plane_equipment = {
							armor_value = 0.1 instant = yes
						}
						medium_plane_scout_plane_airframe = {
							armor_value = 0.1 instant = yes
						}
					}
				}
				#set_technology = {
				#	tech_magical_telekinetic_field_plane = 1
				#	popup = no
				#}
			}
		}
		enable_equipment_modules = {
			limit = { has_dlc = "Man the Guns" }
			ship_shield_module
		}
		enable_equipment_modules = {
			limit = { has_dlc = "No Step Back" }
			tank_shield_module
		}
		enable_equipment_modules = {
			limit = { has_dlc = "By Blood Alone" }
			plane_shield_module
		}
	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}
}

sp_magical_assisted_quarries = { ## Magic-Assisted Quarries
	specialization = specialization_magical
	icon = GFX_sp_magical_magitech_quarries

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 2
	}

	available = {
		FROM = {
			has_tech = excavation3
		}
	}

	project_output = {
		country_effects = {
			
			custom_override_tooltip = {
				tooltip = {
					localization_key = SP_UNLOCK_BUILDING_ICON_DESC
					BUILDING = magical_quarry
					BUILDING_DESCRIPTION = magical_quarry_desc
					ICON_FRAME = 30
				}
				set_technology = {
					tech_magical_quarry = 1
					popup = no
				}
			}
			mark_technology_tree_layout_dirty = yes
		}
	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}
}

sp_magical_supply_organisation = { ## Magitech Depot Organisation
	specialization = specialization_magical
	icon = GFX_sp_magical_magitech_depot_org

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.short
	breakthrough_cost = {
		specialization_magical = 1
	}

	project_output = {
		country_effects = {
			set_technology = {
				tech_magical_supply_organisation = 1
				popup = no
			}
			custom_effect_tooltip = tech_effect|tech_magical_supply_organisation
		}
	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}

	unique_prototype_rewards = {

		sp_magical_supply_organisation_choice_reward = {
			fire_only_once = yes

			threshold = { 
				min = 35
				max = 100
			}

			weight = {
				base = 1000
			}

			option = { ## Supply Node Range
				token = sp_magical_supply_organisation_supply_node_choice

				iteration_output = {
					country_effects = {
						set_technology = {
							tech_magical_supply_organisation_supply_node_range = 1
							popup = no
						}
						custom_effect_tooltip = tech_effect|tech_magical_supply_organisation_supply_node_range	
					}
				}
			}

			option = { ## General Supply Grace
				token = sp_magical_supply_organisation_supply_grace_choice

				iteration_output = {
					country_effects = {
						set_technology = {
							tech_magical_depot_organisation_supply_grace = 1
							popup = no
						}
						custom_effect_tooltip = tech_effect|tech_magical_depot_organisation_supply_grace
					}
				}
			}

			option = { ## Special Forces Supply Grace
				token = sp_magical_supply_organisation_special_forces_supply_grace_choice

				iteration_output = {
					country_effects = {
						set_technology = {
							tech_magical_depot_organisation_sf_supply_grace = 1
							popup = no
						}
						custom_effect_tooltip = tech_effect|tech_magical_depot_organisation_sf_supply_grace		
					}
				}
			}
		}
	}
}

sp_magical_imperceptibility_studies = { ## Magical Imperceptibility Studies
	specialization = specialization_magical
	icon = GFX_sp_magical_interceptability_studies


	allowed = {
		has_dlc = "La Resistance"		
	}

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	available = {
		FROM = {
			has_intelligence_agency = yes
		}
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.short
	breakthrough_cost = {
		specialization_magical = 1
	}

	project_output = {
		country_effects = {
			set_technology = {
				tech_magical_imperceptibility_studies = 1
				popup = no
			}
			custom_effect_tooltip = tech_effect|tech_magical_imperceptibility_studies
		}
	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}

	unique_prototype_rewards = {

		sp_magical_interceptability_studies_choice_reward = {
			fire_only_once = yes

			threshold = { 
				min = 35
				max = 100
			}

			weight = {
				base = 1000
			}

			option = { ## Offensive spying focus
				token = sp_magical_interceptability_studies_offensive_choice

				iteration_output = {
					country_effects = {
						set_technology = {
							tech_magical_imperceptibility_studies_offensive = 1
							popup = no
						}
						custom_effect_tooltip = tech_effect|tech_magical_imperceptibility_studies_offensive						
					}
				}
			}

			option = { ## Defensive spying focus
				token = sp_magical_interceptability_studies_defensive_choice

				iteration_output = {
					country_effects = {
						set_technology = {
							tech_magical_imperceptibility_studies_defensive = 1
							popup = no
						}
						custom_effect_tooltip = tech_effect|tech_magical_imperceptibility_studies_defensive						
					}
				}
			}
		}
	}
}

sp_magical_thaumaturgical_encryption_keys = { ## Thaumaturgical Encryption Keys
	specialization = specialization_magical
	icon = GFX_sp_magical_thaumaturgical_encryption_keys

	allowed = {
		has_dlc = "La Resistance"		
	}

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	available = {
		FROM = {
			has_intelligence_agency = yes
			custom_trigger_tooltip = {
				tooltip = form_department_tooltip
				has_done_agency_upgrade = upgrade_form_department

			}
		}
	}
	

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.long
	breakthrough_cost = {
		specialization_magical = 1
	}

	project_output = {
		country_effects = {
			set_technology = {
				tech_magical_thaumaturgical_encryption_keys = 1
				popup = no
			}
			custom_effect_tooltip = tech_effect|tech_magical_thaumaturgical_encryption_keys
			gain_random_agency_upgrade = yes
			gain_random_agency_upgrade = yes
		}
	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}

	unique_prototype_rewards = {

		sp_magical_thaumaturgical_encryption_keys_choice_reward = {
			fire_only_once = yes

			threshold = { 
				min = 35
				max = 100
			}

			weight = {
				base = 1000
			}

			option = { ## Refocus on decryption  
				token = sp_magical_thaumaturgical_encryption_keys_decryption_choice

				iteration_output = {
					country_effects = {
						set_technology = {
							tech_magical_thaumaturgical_encryption_keys_decryption = 1
							popup = no
						}
						custom_effect_tooltip = tech_effect|tech_magical_thaumaturgical_encryption_keys_decryption
					}
				}
			}

			option = { ## Maintain focus on encryption
				token = sp_magical_thaumaturgical_encryption_keys_encryption_choice

				iteration_output = {
					country_effects = {
						set_technology = {
							tech_magical_thaumaturgical_encryption_keys_encryption = 1
							popup = no
						}
						custom_effect_tooltip = tech_effect|tech_magical_thaumaturgical_encryption_keys_encryption
					}
				}
			}
		}
	}
}

sp_magical_force_multiplication = { ## Magical Force Multiplication
	specialization = specialization_magical
	icon = GFX_sp_magical_force_multiplication

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		}
	}

	available = {
		FROM = {
			OR = {
				has_tech = marines
				has_tech = tech_mountaineers
				has_tech = paratroopers
				has_tech = tech_pegasi
				has_tech = tech_knights
				has_tech = tech_jager
				has_tech = tech_spirit_warriors
			}
			has_tech = magical_weapons1
		}
	}

	special_project_parent = {
		sp_land_military_engineering_vehicles
	}
	

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 2
	}


	project_output = {

		country_effects = {
			set_technology = {
				tech_magical_shock_company = 1
				popup = no
			}
			custom_effect_tooltip = tech_effect|tech_magical_shock_company
		}
	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}

	unique_prototype_rewards = {

		sp_magical_force_multiplication_choice_reward = {
			fire_only_once = yes

			threshold = { 
				min = 35
				max = 100
			}

			weight = {
				base = 1000
			}

			option = { ## make ASVs cheaper
				token = sp_magical_force_multiplication_cheaper_ASV_choice

				iteration_output = {
					equipment_bonus = {
						armored_support_vehicle = {
							build_cost_ic = -0.15
						}
					}
					
				}
			}

			option = { ## Piercing boost
				token = sp_magical_force_multiplication_piercing_choice

				iteration_output = {
					sub_unit_bonus = {
						magical_shock_company = {
							ap_attack = 2
						}
					}
					
				}
			}

			option = { ## Organisation boost
				token = sp_magical_force_multiplication_organisation_choice

				iteration_output = {
					sub_unit_bonus = {
						magical_shock_company = {
							max_organisation = 5
						}
					}
					
				}
			}

		}

	}
}

sp_magical_synthetic_mineral_growth = { ## Synthetic Mineral Growth
	specialization = specialization_magical
	icon = GFX_sp_magical_synthetic_mineral_growth

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		}
	}

	available = {
		FROM = {
			has_tech = synth_oil_experiments
			has_tech = magical_weapons1
		}
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.long
	breakthrough_cost = {
		specialization_magical = 1
	}


	project_output = {

		country_effects = {			
			custom_override_tooltip = {
				tooltip = {
					localization_key = SP_UNLOCK_BUILDING_ICON_DESC
					BUILDING = synthetic_crystal_refinery
					BUILDING_DESCRIPTION = synthetic_crystal_refinery_desc
					ICON_FRAME = 29
				}
				set_technology = {
					tech_synthetic_crystal_refinery = 1
					popup = no
				}
			}
			custom_effect_tooltip = sp_magical_synthetic_mineral_growth_tt
			mark_technology_tree_layout_dirty = yes
		}
	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}
}

sp_magical_thaumaturgical_diagnoses = { ## Thaumaturgical Diagnoses
	specialization = specialization_magical
	icon = GFX_sp_magical_thaumaturgical_diagnoses

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	available = {
		FROM = {
			has_tech = tech_field_hospital
			has_tech = magical_weapons1
		}
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.small
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 1
	}


	project_output = {

		country_effects = {
			add_tech_bonus = {
				name = sp_rockets_high_speed_flight_control_bonus
				bonus = 1.5
				uses = 1
				ahead_reduction = 2
				category = hospital_tech
			}
			add_timed_idea = {
				idea = sp_thaumaturgical_diagnoses
				days = 210
			}
		}
	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}

	unique_prototype_rewards = {

		sp_magical_thaumaturgical_diagnoses_choice_reward = {
			fire_only_once = yes

			threshold = { 
				min = 35
				max = 100
			}

			weight = {
				base = 1000
			}

			option = { ## population growth boost
				token = sp_magical_thaumaturgical_diagnoses_cheaper_pop_growth_choice

				iteration_output = {
					country_effects = {
						set_technology = {
							tech_magical_thaumaturgical_diagnoses_pop_growth = 1
							popup = no
						}
						custom_effect_tooltip = tech_effect|tech_magical_thaumaturgical_diagnoses_pop_growth
					}
				}
			}

			option = { ## hospital unit boost
				token = sp_magical_thaumaturgical_diagnoses_hospital_unit_choice

				iteration_output = {
					sub_unit_bonus = {
						field_hospital = {
							casualty_trickleback = 0.05
							experience_loss_factor = -0.05
						}
					}
				}
			}

			# option = { ## battalion modifier boost
			# 	token = sp_magical_thaumaturgical_diagnoses_organisation_choice

			# 	iteration_output = {
			# 		sub_unit_bonus = {
			# 			field_hospital = {
			# 				battalion_mult = {
			# 					category = category_all_infantry
			# 					max_strength = 0.05
			# 				}
			# 			}
			# 		}
			# 	}
			# }

		}

	}
}

sp_magical_earth_shatter_crystal_projectiles = { ## Energy Shatter Crystal Projectiles
	specialization = specialization_magical
	icon = GFX_sp_magical_earth_shatter_crystal_projectiles

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		}
	}

	available = {
		FROM = {
			has_tech = magical_weapons2
		}
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 2
	}


	project_output = {

		country_effects = {
			if = {
				limit = {
					NOT = {
						has_dlc = "Man the Guns"
					}
				}
				#custom_effect_tooltip = {
				#	localization_key = SP_UNLOCK_TECH
				#	TECH = tech_magical_crystal_projectile_ship
				#}
				add_equipment_bonus = {
					project = FROM
					bonus = {
						ship_hull_light = {
							lg_armor_piercing = 0.1 hg_armor_piercing = 0.1 instant = yes
						}
						ship_hull_cruiser = {
							lg_armor_piercing = 0.1 hg_armor_piercing = 0.1 instant = yes
						}
						ship_hull_heavy = {
							lg_armor_piercing = 0.1 hg_armor_piercing = 0.1 instant = yes
						}
					}
				}
				#set_technology = {
				#	tech_magical_crystal_projectile_ship = 1
				#	popup = no
				#}
			}
			if = {
				limit = {
					NOT = {
						has_dlc = "No Step Back"
					}
				}
				#custom_effect_tooltip = {
				#	localization_key = SP_UNLOCK_TECH
				#	TECH = tech_magical_crystal_projectile_tank
				#}
				add_equipment_bonus = {
					project = FROM
					bonus ={
						light_tank_chassis = {
							ap_attack = 0.1 instant = yes
						}
						medium_tank_chassis = {
							ap_attack = 0.1 instant = yes
						}
						heavy_tank_chassis = {
							ap_attack = 0.1 instant = yes
						}
						super_heavy_tank_chassis = {
							ap_attack = 0.1 instant = yes
						}
					}
				}
				#set_technology = {
				#	tech_magical_crystal_projectile_tank = 1
				#	popup = no
				#}
			}
			if = {
				limit = {
					NOT = {
						has_dlc = "By Blood Alone"
					}
				}
				#custom_effect_tooltip = {
				#	localization_key = SP_UNLOCK_TECH
				#	TECH = tech_magical_crystal_projectile_plane
				#}
				add_equipment_bonus = {
					project = FROM
					bonus = {
						small_plane_cas_airframe = {
							air_ground_attack = 0.10 instant = yes
						}
						cv_small_plane_cas_airframe = {
							air_ground_attack = 0.10 instant = yes
						}
						medium_plane_airframe = {
							air_ground_attack = 0.10 instant = yes
						}
					}
				}
				#set_technology = {
				#	tech_magical_crystal_projectile_plane = 1
				#	popup = no
				#}
			}
		}
		enable_equipment_modules = {
			limit = {
				has_dlc = "Man the Guns"
			}
			ship_light_crystal_projectile_module
			ship_medium_crystal_projectile_module
			ship_heavy_crystal_projectile_module
		}
		enable_equipment_modules = {
			limit = {
				has_dlc = "No Step Back"
			}
			tank_light_crystal_projectile_module
			tank_medium_crystal_projectile_module
			tank_heavy_crystal_projectile_module
		}
		enable_equipment_modules = {
			limit = {
				has_dlc = "By Blood Alone"
			}
			plane_crystal_projectile_module
		}
	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}
}

 #####    ####   #    #  #####    ####  
 #    #  #    #  ##  ##  #    #  #      
 #####   #    #  # ## #  #####    ####  
 #    #  #    #  #    #  #    #       # 
 #    #  #    #  #    #  #    #  #    # 
 #####    ####   #    #  #####    ####  

sp_air_bouncing_bomb = {
	specialization = specialization_air 	
	icon = GFX_sp_air_bouncing_bomb

	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		has_dlc = "Gotterdammerung"		
	}

	available = { 
		# FROM is country 
		# THIS/ROOT is project
		if = {
			limit = {
				has_dlc = "By Blood Alone"
			}
			FROM = {
				has_tech = heavy_bombs
			}
		}
		else = {
			OR = {
				FROM = { has_tech = tactical_bomber2 }
				FROM = { has_tech = strategic_bomber2 }
			}
		}
	}

	breakthrough_cost = {
		specialization_air = 1
	}

	resource_cost = {
		resources = {
			steel = 4
			aluminium = 4
			rubber = 2
		}
	}

	prototype_time = sp_time.prototype.medium	

	complexity = sp_complexity.medium 

	project_output = {
		country_effects = {
			custom_effect_tooltip = sp_air_bouncing_bomb_completion_tt
		}
	}

	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3		
	}

	unique_prototype_rewards = {
		sp_air_bouncing_bomb_backspin_mechanism_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 80
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_air_bouncing_bomb_backspin_mechanism_reward_option
						
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.gain.medium }
					}
					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.high
							specialization = specialization_air 
						}
					}
				}
			}
		}

		sp_air_bouncing_bomb_training_accidents_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 80
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_air_bouncing_bomb_training_accidents_reward_option
						
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = -0.02 }
						air_experience = 25
					}
				}
			}
		}

		sp_air_bouncing_bomb_type_of_explosives_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 80
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_air_bouncing_bomb_type_of_explosives_reward_option
						
				iteration_output = {
					#country_effects = {
					#	FROM = { add_project_progress_ratio = 0.10 }
					#}
					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.high
							specialization = specialization_air 
						}
					}
				}
			}
		}

		sp_air_bouncing_bomb_aircraft_modifications_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 80
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_air_bouncing_bomb_aircraft_modifications_reward_option
						
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.gain.low }
						air_experience = 5
					}
				}
			}
		}
	}
}


sp_air_earthshaker_bomb = {
	specialization = specialization_air 	
	icon = GFX_sp_air_earthshaker_bomb

	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		has_dlc = "Gotterdammerung"		
	}

	available = { 
		if = {
			limit = { has_dlc = "By Blood Alone" }
			FROM = {
				has_tech = heavy_bombs
			}
		}
		else = {
			FROM = {
				has_tech = strategic_bomber2
			}
		}
	}
	
	breakthrough_cost = {
		specialization_air = 1
	}
	
	resource_cost = {
		resources = {
			steel = 4
			tungsten = 8

		}
	}

	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.medium

	project_output = {
		country_effects = {
			custom_effect_tooltip = sp_air_earthshaker_bomb_completion_tt
		}
		enable_equipment_modules = {
			limit = { has_dlc = "By Blood Alone" }
			earthshaker_bomb_release
		}
	}

	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		sp_air_earthshaker_bomb_unique_reward = {
			fire_only_once = yes

			threshold = { 
				min = 40
				max = 90
			}

			weight = {
				base = 100
			}

			option = {
				token = sp_air_earthshaker_bomb_preference_naval_targetting
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
						
							add_equipment_bonus = {
								name = sp_earthshaker_bomb_naval_targetting
								bonus = {
									large_plane_airframe = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										naval_strike_targetting = 0.1									
									}
								}
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_earthshaker_bomb_naval_targetting
								bonus = {
									large_plane_airframe = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										naval_strike_targetting = 0.1
									}
								}
							}
						}
					}
				}
			}

			option = {
				token = sp_air_earthshaker_bomb_preference_raw_power
				default = yes
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
						
							add_equipment_bonus = {
								name = sp_earthshaker_bomb_power
								bonus = {
									large_plane_airframe = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										naval_strike_attack = 0.05
										air_bombing = 0.05									
									}
								}
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_earthshaker_bomb_power
								bonus = {
									large_plane_airframe = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										naval_strike_attack = 0.05
										air_bombing = 0.05
									}
								}
							}
						}
					}
				}
			}

			option = {
				token = sp_air_earthshaker_bomb_preference_both
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
						
							add_equipment_bonus = {
								name = sp_earthshaker_bomb_both
								bonus = {
									large_plane_airframe = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										naval_strike_targetting = 0.1
										naval_strike_attack = 0.05
										air_bombing = 0.05
										build_cost_ic = 0.05								
									}
								}
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_earthshaker_bomb_both
								bonus = {
									large_plane_airframe = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										naval_strike_targetting = 0.1
										naval_strike_attack = 0.05
										air_bombing = 0.05
										build_cost_ic = 0.05
									}
								}
							}
						}
					}
				}
			}
		}
	}
}




   ##    #  #####    ####   #####     ##    ######  ##### 
  #  #   #  #    #  #    #  #    #   #  #   #         #   
 #    #  #  #    #  #       #    #  #    #  #####     #   
 ######  #  #####   #       #####   ######  #         #   
 #    #  #  #   #   #    #  #   #   #    #  #         #   
 #    #  #  #    #   ####   #    #  #    #  #         #   


sp_air_intercontinental_bomber = {
	specialization = specialization_air 	
	icon = GFX_sp_air_intercontinental_bomber

	project_tags = sp_tag_aircraft

	allowed = {
		has_dlc = "Gotterdammerung"	
	}

	available = { 
		FROM = {
			if = {
				limit = { 
					has_dlc = "By Blood Alone"
					}
				has_tech = improved_large_airframe
			}
			else = {
				has_tech = strategic_bomber2
			}
		}
	}

	breakthrough_cost = {
		specialization_air = 2
	}
	
	resource_cost = {
		resources = {
			aluminium = 24
			rubber = 12
		}
	}
	
	prototype_time = sp_time.prototype.very_long

	complexity = sp_complexity.large

	project_output = {
		enable_equipments = {
			limit = {
				has_dlc = "By Blood Alone"
			}
			strat_bomber_intercontinental_airframe_1
		}

		enable_equipments = {
			limit = {
				NOT = { has_dlc = "By Blood Alone" }
			}
			strat_bomber_intercontinental_equipment_1 
		}	

#		country_effects = {
#			if = {
#				limit = {
#					original_tag = GER
#					has_country_flag = GER_amerikabomber_focke_wulf_flag
#				}
#				custom_effect_tooltip = GER_amerikabomber_focke_wulf_name
#				#SCRIPTED EFFECT BOOSTING AMERIKABOMBER
#				GER_amerika_bomber_focke_wulf_completion_SP_effects = yes
#
#				custom_effect_tooltip = generic_skip_one_line_tt
#				#SCRIPTED EFFECT BOOSTING MIO
#				mio:GER_focke_wulf_organization = {
#					GER_amerika_bomber_focke_wulf_completion_MIO_effects = yes
#				}
#			}
#		}
	}



	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3
	}

	unique_prototype_rewards = {
		sp_air_intercontinental_bomber_unique_reward = {
			fire_only_once = yes

			threshold = { 
				min = 40
				max = 90
			}

			weight = {
				base = 100
			}

			option = {
				token = sp_air_intercontinental_bomber_preference_balanced
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
						
							add_equipment_bonus = {
								name = sp_air_intercontinental_bomber_balanced
								bonus = {
									strat_bomber_intercontinental_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										reliability = 0.05									
									}
								}
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_intercontinental_bomber_balanced
								bonus = {
									strat_bomber_intercontinental_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										reliability = 0.05
									}
								}
							}
						}
					}
				}
			}

			option = {
				token = sp_air_intercontinental_bomber_preference_bombing_payload
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
						
							add_equipment_bonus = {
								name = sp_air_intercontinental_bomber_bombing_payload
								bonus = {
									strat_bomber_intercontinental_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										air_bombing = 0.15
										air_defence	= -0.05
										air_attack = -0.1
									}
								}
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_intercontinental_bomber_bombing_payload
								bonus = {
									strat_bomber_intercontinental_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
								      air_bombing = 0.15
										air_defence	= -0.05
										air_attack = -0.1	
									}
								}
							}
						}
					}
				}
			}

			option = {
				token = sp_air_intercontinental_bomber_preference_protection
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
						
							add_equipment_bonus = {
								name = sp_air_intercontinental_bomber_protection
								bonus = {
									strat_bomber_intercontinental_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										air_defence = 0.15
										air_attack = -0.1
										air_bombing = -0.1
									}
								}
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_intercontinental_bomber_protection
								bonus = {
									strat_bomber_intercontinental_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										air_defence = 0.15
										air_attack = -0.1
										air_bombing = -0.1
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

sp_air_mothership_aircraft = {
	specialization = specialization_air 	
	icon = GFX_sp_air_mothership_aircraft

	project_tags = sp_tag_aircraft

	complexity = sp_complexity.medium 

	allowed = {
		has_dlc = "Gotterdammerung"
	}

	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3
	}

	available = { 
		if = {
			limit = {
				has_dlc = "By Blood Alone"
			}
			FROM = {
				has_tech = improved_large_airframe
			}
		}
		else = {
			FROM = { 
				has_tech = strategic_bomber2
			}
		}
	}

	breakthrough_cost = {
		specialization_air = 2
	}
	
	resource_cost = {
		resources = {
			aluminium = 18
			rubber = 8
		}
	}

	prototype_time = sp_time.prototype.long

	project_output = {
		country_effects = {
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = reinforced_wings_mothership
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = miniature_fighters
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = aerial_hangars
			}
		}		

		enable_equipments = {
			mothership_equipment_0
		}
	}



	unique_prototype_rewards = {
		sp_air_mothership_unique_reward = {
			fire_only_once = yes

			threshold = { 
				min = 40
				max = 90
			}

			weight = {
				base = 100
			}

			option = {
				token = sp_air_mothership_preference_speed_agility
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
						
							add_equipment_bonus = {
								name = sp_air_mothership_speed_agility
								bonus = {
									mothership_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										air_agility = 0.1
										maximum_speed = 0.1
										fuel_consumption = 0.15
									}
								}
							}
						}	
						else = {
							add_equipment_bonus = {
								name = sp_air_mothership_speed_agility
								bonus = {
									mothership_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
								      air_agility = 0.1
										maximum_speed = 0.1
										fuel_consumption = 0.15							
									}
								}
							}						
						}		
					}
				}
			}

			option = {
				token = sp_air_mothership_preference_reliability
				default = yes
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
						
							add_equipment_bonus = {
								name = sp_air_mothership_balanced
								bonus = {
									mothership_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										reliability = 0.1									
									}
								}
							}
						}							
						else = {
							add_equipment_bonus = {
								name = sp_air_mothership_balanced
								bonus = {
									mothership_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										reliability = 0.1									
									}
								}
							}						
						}
					} 
				}
			}

			option = {
				token = sp_air_mothership_preference_strength
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
						
							add_equipment_bonus = {
								name = sp_air_mothership_strength
								bonus = {
									mothership_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										air_defence = 0.1
										air_attack = 0.1	
										build_cost_ic = 0.1						
									}
								}
							}
						}	
						else = {
							add_equipment_bonus = {
								name = sp_air_mothership_strength
								bonus = {
									mothership_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										air_defence = 0.1
										air_attack = 0.1
										build_cost_ic = 0.1
									}
								}
							}						
						}
					}
				}
			}		
		}	
	}
}


sp_air_gunship = {
	specialization = specialization_air 	
	#icon = GFX_sp_air_mothership_aircraft

	project_tags = sp_tag_aircraft

	complexity = sp_complexity.medium 

	resource_cost = {
		resources = {
			aluminium = 18
			rubber = 8
		}
	}

	available = { 
		if = {
			limit = {
				has_dlc = "By Blood Alone"
			}
			FROM = {
				has_tech = bba_strategic_airlifter
			}
		}
		else = {
			FROM = { 
				has_tech = strategic_airlifter
			}
		}
	}
	
	prototype_time = sp_time.prototype.medium

	project_output = {
		country_effects = {
			if = {
				limit = {
					has_dlc = "By Blood Alone"
				}
				hidden_effect = {
					set_technology = {
						gunship_tech_bba = 1
						popup = no
					}
				}
				custom_effect_tooltip = sp_air_gunship_bba_custom_tt
			}
			else = {
				hidden_effect = {
					set_technology = {
						gunship_tech = 1
						popup = no
					}
				}
				custom_effect_tooltip = sp_air_gunship_custom_tt

			}
		}	

		enable_equipment_modules = {
			limit = { has_dlc = "By Blood Alone"}
			gunship_armament
		}
	}

	empty_reward_weight = {
		base = 0.0
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
	}
	unique_prototype_rewards = {
	}
}



      #  ######  #####   ####  
      #  #         #    #      
      #  #####     #     ####  
      #  #         #         # 
 #    #  #         #    #    # 
  ####   ######    #     ####  



sp_air_jet_engine = {
	specialization = specialization_air 	
	icon = GFX_sp_air_jet_engine

	project_tags = {
		sp_tag_aircraft
		sp_tag_jet
	}

	available = { 
		FROM = {
			if = {
				limit = { has_dlc = "By Blood Alone" }
				has_tech = engines_2
				OR = {
					has_tech = improved_small_airframe
					has_tech = improved_medium_airframe
				}
			}
			else = {
				OR = {
					has_tech = fighter2
					has_tech = tactical_bomber2
				}
			}
		}
	}
	
	breakthrough_cost = {
		specialization_air = 3
	}
	
	resource_cost = {
		resources = {
			chromium = 12
			aluminium = 4
			steel = 2
		}
	}

	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.large

	project_output = {

		country_effects = {
			if = {
				limit = { has_dlc = "By Blood Alone" }
			
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = sp_centrifugal_jet_tech
				}
			}
			if =  {	
				limit = {
					has_dlc = "By Blood Alone"
				}
				add_design_template_bonus = {
					name = air_equipment
					uses = 1
					cost_factor = 0.75
					equipment = small_plane_airframe
					equipment = medium_plane_airframe
					equipment = large_plane_airframe
				}
				add_design_template_bonus = {
					name = air_equipment
					uses = 1
					cost_factor = 0.5
					equipment = small_plane_airframe
					equipment = medium_plane_airframe
					equipment = large_plane_airframe
				}				
			}
			else = {
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_fighter_equipment_1
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_strike_craft_equipment_x
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_tac_bomber_equipment_1
				}				
				add_equipment_bonus = {
					name = sp_air_jet_engine
					bonus = {
						medium_plane_airframe = {
							air_agility = 0.05
							maximum_speed = 0.05
							instant = yes
						}
					}
				}
				add_equipment_bonus = {
					name = sp_air_jet_engine
					bonus = {
						small_plane_airframe = {
							air_agility = 0.05
							maximum_speed = 0.05
							instant = yes
						}
					}
				}
			}
			mark_technology_tree_layout_dirty = yes
		}		

		enable_equipment_modules = {
			limit = { has_dlc = "By Blood Alone"}
			jet_engine_1x
			jet_engine_2x
			jet_engine_3x
			jet_engine_4x
			jet_engine_6x
			jet_engine_8x
		}
		
		enable_equipment_modules = {
			limit = { has_dlc = "No Step Back"}
				tank_gas_turbine_engine
		}
	}

	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3
	}

	unique_prototype_rewards = {
		sp_air_jet_engine_unique_reward = {
			fire_only_once = yes

			threshold = { 
				min = 40
				max = 90
			}

			weight = {
				base = 100
			}

			option = {
				token = sp_air_jet_engine_preference_fighter
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}		
							add_tech_bonus = {
								name = sp_air_light_air_tech_bonus
								bonus = 0.5
								uses = 1
								category = light_air
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_jet_engine_fighter
								bonus = {
									jet_tac_bomber_equipment = { 
										air_ground_attack = -0.05
										air_range = -0.05
										build_cost_ic = 0.05
									}
								}
							}
							add_equipment_bonus = {	
								name = sp_air_jet_engine_fighter
								bonus = {
									jet_fighter_equipment = {
										maximum_speed = 0.05
										air_agility = 0.05
										build_cost_ic = -0.05
									}	
								}
							}						
						}
					}
				}
			}
		

			option = {
				token = sp_air_jet_engine_preference_compromise
				default = yes
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
						
							add_tech_bonus = {
								name = sp_air_air_equipment_tech_bonus
								bonus = 0.25
								uses = 2
								category = air_equipment
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_jet_engine_compromise
								bonus = {
									jet_tac_bomber_equipment = {
										reliability = 0.03
									}
								}
							}
							add_equipment_bonus = {	
								name = sp_air_jet_engine_compromise
								bonus = {
									jet_fighter_equipment = {
										reliability = 0.03
									}	
								}
							}						
						}
					}
				}
		}

			option = {
				token = sp_air_jet_engine_preference_bomber
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}
							add_tech_bonus = {
								name = sp_air_medium_air_tech_bonus
								bonus = 0.5
								uses = 1
								category = medium_air
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_jet_engine_bomber
								bonus = {
									jet_tac_bomber_equipment = {
										air_ground_attack = 0.05
										air_range = 0.05
										build_cost_ic = -0.05
									}
								}
							}
							add_equipment_bonus = {	
								name = sp_air_jet_engine_bomber
								bonus = {
									jet_fighter_equipment = {
										maximum_speed = -0.05
										air_agility = -0.05
										build_cost_ic = 0.05
									}	
								}
							}						
						}
					}
				}
			}		
		}	
	}
}

sp_air_axial_jet_engine = {
	specialization = specialization_air 	
	icon = GFX_sp_air_axial_jet_engine

	project_tags = {
		sp_tag_aircraft
		sp_tag_jet
	}

	special_project_parent = {
		sp_air_jet_engine
	}

	available = { 
		FROM = {
			if = {
				limit = { has_dlc = "By Blood Alone" }
				has_tech = engines_3
				OR = {
					has_tech = advanced_small_airframe
					has_tech = advanced_medium_airframe
				}
			}
			else = {
				OR = {
					has_tech = jet_fighter1
					has_tech = jet_tactical_bomber1
				}
			}	
		}
	}
	
	breakthrough_cost = {
		specialization_air = 2
	}

	resource_cost = {
		resources = {
			chromium = 18
			aluminium = 10
			steel = 4
		}
	}

	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.large

	project_output = {
		country_effects = {
			if = {
				limit = { has_dlc = "By Blood Alone" }
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = modern_small_airframe
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = modern_medium_airframe
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = modern_large_airframe
				}
						
				add_design_template_bonus = {
					name = air_equipment
					uses = 1
					cost_factor = 0.75
					equipment = medium_plane_airframe
					equipment = small_plane_airframe
					equipment = large_plane_airframe
				}
				add_design_template_bonus = {
					name = air_equipment
					uses = 1
					cost_factor = 0.5
					equipment = small_plane_airframe
					equipment = medium_plane_airframe
					equipment = large_plane_airframe
				}
			}
			else = {
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_fighter_equipment_2
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_strike_craft_equipment_x_2
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_tac_bomber_equipment_2
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_strat_bomber_equipment_1
				}
				add_equipment_bonus = {
					name = sp_air_axial_jet_engine
					bonus = {
						medium_plane_airframe = {
							air_range = 0.1
							instant = yes
						}
					}
				}
				add_equipment_bonus = {
					name = sp_air_axial_jet_engine
					bonus = {
						small_plane_airframe = {
							air_range = 0.1
							instant = yes
						}
					}
				}
				add_equipment_bonus = {
					name = sp_air_axial_jet_engine
					bonus = {
						large_plane_airframe = {
							air_agility = 0.05
							maximum_speed = 0.05
							air_range = 0.1
							instant = yes
						}
					}
				}	
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH_WITH_EXTRA_PROJECT
				TECH = country_culture|attack_helicopter_equipment_1_short
				EXTRA_PROJECT = sp_air_helicopter
			}
		}		

		enable_equipment_modules = {
			limit = { has_dlc = "By Blood Alone"}
			jet_engine_axial_1x
			jet_engine_axial_2x
			jet_engine_axial_3x
			jet_engine_axial_4x
			jet_engine_axial_6x
			jet_engine_axial_8x
		}
	}

	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		sp_air_axial_jet_engine_unique_reward = {
			fire_only_once = yes

			threshold = { 
				min = 40
				max = 90
			}

			weight = {
				base = 100
			}

			option = {
				token = sp_air_axial_jet_engine_preference_fighter
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}
							add_tech_bonus = {
								name = sp_air_light_air_tech_bonus
								bonus = 0.5
								uses = 1
								category = light_air
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_jet_engine_fighter_2
								bonus = {
									jet_tac_bomber_equipment = {
										air_ground_attack = -0.03
										air_range = -0.03
										build_cost_ic = 0.03
									}
								}
							}
							add_equipment_bonus = {	
								name = sp_air_jet_engine_fighter_2
								bonus = {
									jet_fighter_equipment = {
										maximum_speed = 0.03
										air_agility = 0.03
										build_cost_ic = -0.03
									}	
								}
							}						
						}
					}
				}
			}
		

			option = {
				token = sp_air_axial_jet_engine_preference_compromise
				default = yes
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
						
							add_tech_bonus = {
								name = sp_air_air_equipment_tech_bonus
								bonus = 0.33
								uses = 2
								category = air_equipment
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_jet_engine_compromise_2
								bonus = {
									jet_tac_bomber_equipment = {
										reliability = 0.05
									}
								}
							}
							add_equipment_bonus = {	
								name = sp_air_jet_engine_compromise_2
								bonus = {
									jet_fighter_equipment = {
										reliability = 0.05
									}	
								}
							}						
						}
					}
				}
		}

			option = {
				token = sp_air_axial_jet_engine_preference_bomber
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}
							add_tech_bonus = {
								name = sp_air_medium_air_tech_bonus
								bonus = 0.5
								uses = 1
								category = medium_air
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_jet_engine_bomber_2
								bonus = {
									jet_tac_bomber_equipment = {
										air_ground_attack = 0.03
										air_range = 0.03
										build_cost_ic = -0.03
									}
								}
							}
							add_equipment_bonus = {	
								name = sp_air_jet_engine_bomber_2
								bonus = {
									jet_fighter_equipment = {
										maximum_speed = -0.03
										air_agility = -0.03
										build_cost_ic = 0.03
									}	
								}
							}						
						}
					}
				}
			}		
		}	
	}
}

sp_air_advanced_jet_engine = {
	specialization = specialization_air 	
	#icon = GFX_sp_air_axial_jet_engine

	project_tags = {
		sp_tag_aircraft
		sp_tag_jet
	}

	allowed = {
		#has_dlc = "Gotterdammerung"	
		#has_dlc = "By Blood Alone"
	}

	special_project_parent = {
		sp_air_axial_jet_engine
	}

	breakthrough_cost = {
		specialization_air = 2
	}
	resource_cost = {
		resources = {
			chromium = 24
			aluminium = 16
			rubber = 8
		}
	}

	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.large

	project_output = {
		country_effects = {
			if = {
				limit = {
					NOT = {
						has_dlc = "By Blood Alone"
					}
				}

				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_fighter_equipment_x
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_strike_craft_equipment_x_3
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_heavy_fighter_equipment_x
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_tac_bomber_equipment_x
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_strat_bomber_equipment_x
				}
				if = {
					limit = {
						has_dlc = "La Resistance"
					}
					custom_effect_tooltip = {
						localization_key = SP_UNLOCK_TECH
						TECH = jet_scout_plane_equipment_x
					}
				}
			}

			mark_technology_tree_layout_dirty = yes
		}	

		enable_equipment_modules = {
			limit = { has_dlc = "By Blood Alone"}
			jet_engine_2_1x
			jet_engine_2_2x
			jet_engine_2_3x
			jet_engine_2_4x
			jet_engine_2_6x
			jet_engine_2_8x
		}
	}

	empty_reward_weight = {
		base = 0.0
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
	}

	unique_prototype_rewards = {
	}
}

sp_air_supersonic_jet = {
	specialization = specialization_air 	
	icon = GFX_sp_air_supersonic_jet

	project_tags = {
		sp_tag_aircraft
		sp_tag_jet
	}

	special_project_parent = {
		sp_air_axial_jet_engine
	}

	complexity = sp_complexity.large

	allowed = {
		has_dlc = "Gotterdammerung"	
	}
	available = {
		FROM = {
			if = {
				limit = { has_dlc = "By Blood Alone" }
				has_tech = modern_small_airframe_2
			}
			else = {
				has_tech = jet_fighter2
			}
	 		
		}
	}

	breakthrough_cost = {
		specialization_air = 2
	}
	
	resource_cost = {
		resources = {
			aluminium = 24
			chromium = 16
			rubber = 8
		}
	}

	prototype_time = sp_time.prototype.long

	project_output = {
		country_effects = {
			if = {
				limit = { has_dlc = "By Blood Alone" }
				add_design_template_bonus = {
					name = sp_air_supersonic_jet_fighter_free_design
					uses = 1
					cost_factor = 1
					equipment = small_plane_airframe_5
				}
			}
		}	

		enable_equipments = {
			limit = {
				has_dlc = "By Blood Alone"
			}
			small_plane_airframe_6
		}

		enable_equipments = {
			limit = {
				NOT = { has_dlc = "By Blood Alone" }
			}
			supersonic_fighter_equipment_1 
		}	
	}

	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3
	}

	unique_prototype_rewards = {
		sp_air_supersonic_jet_unique_reward = {
			fire_only_once = yes

			threshold = { 
				min = 40
				max = 90
			}

			weight = {
				base = 100
			}

			option = {
				token = sp_air_supersonic_jet_preference_cost_reduction
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}
							add_equipment_bonus = {
								name = sp_air_supersonic_jet_cost_reduction
								bonus = {
									small_plane_airframe_6 = {
										air_range = -0.05
										maximum_speed = -0.05
										reliability = -0.1
										build_cost_ic = -0.1
									}
								}
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_supersonic_jet_cost_reduction
								bonus = {
									supersonic_fighter_equipment_1 = {
										air_range = -0.05
										maximum_speed = -0.05
										reliability = -0.1
										build_cost_ic = -0.1
									}
								}
							}						
						}
					}
				}
			}
		

			option = {
				token = sp_air_supersonic_jet_preference_compromise
				default = yes
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}												
							add_equipment_bonus = {
								name = sp_air_supersonic_jet_compromise
								bonus = {
									small_plane_airframe_6 = {
										reliability = 0.03
									}
								}
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_supersonic_jet_compromise
								bonus = {
									supersonic_fighter_equipment_1 = {
										reliability = 0.05
									}
								}
							}						
						}
					}
				}
			}

			option = {
				token = sp_air_supersonic_jet_preference_cost_increase
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}
							add_equipment_bonus = {
								name = sp_air_supersonic_jet_cost_increase
								bonus = {
									small_plane_airframe_6 = {
										reliability = 0.05
										build_cost_ic = 0.1
										air_agility = 0.05
										air_defence = 0.05
									}
								}
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_supersonic_jet_cost_increase
								bonus = {
									supersonic_fighter_equipment_1 = {
										reliability = 0.05
										build_cost_ic = 0.1
										air_agility = 0.05
										air_defence = 0.05
									}
								}
							}						
						}
					}
				}
			}		
		}	
	}
}

sp_air_super_large_airframe = {
	specialization = specialization_air 	
	#icon = GFX_PLACEHOLDER_sp_project_icon

	project_tags = {
		sp_tag_aircraft
		sp_tag_jet
	}

	complexity = sp_complexity.medium

	resource_cost = {
		resources = {
			aluminium = 24
			rubber = 12
		}
	}
	allowed = {
		has_dlc = "Gotterdammerung"		
	}

	available = {
		FROM = {
			if = {
				limit = { has_dlc = "By Blood Alone" }
				has_tech = modern_large_airframe_2
			}
			else = {
				has_tech = jet_strategic_bomber_a
			}
	 		
		}
	}

	special_project_parent = {
		sp_air_intercontinental_bomber
		sp_air_advanced_jet_engine
	}

	prototype_time = sp_time.prototype.very_long

	project_output = {

		enable_equipments = {
			limit = {
				has_dlc = "By Blood Alone"
			}
			super_large_plane_airframe_1 
		}

		enable_equipments = {
			limit = {
				NOT = { has_dlc = "By Blood Alone" }
			}
			jet_heavy_strat_bomber_equipment_x 
		}	
	}



	empty_reward_weight = {
		base = 0.0
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
	}

	unique_prototype_rewards = {
	}
}




 #    #  ######  #       #   ####    ####   #####   #####  ######  #####  
 #    #  #       #       #  #    #  #    #  #    #    #    #       #    # 
 ######  #####   #       #  #       #    #  #    #    #    #####   #    # 
 #    #  #       #       #  #       #    #  #####     #    #       #####  
 #    #  #       #       #  #    #  #    #  #         #    #       #   #  
 #    #  ######  ######  #   ####    ####   #         #    ######  #    # 



sp_air_helicopter = {
	specialization = specialization_air 	
	icon = GFX_sp_air_helicopter

	project_tags = {
		sp_tag_aircraft
		sp_tag_helicopter
	}

	allowed = {
		has_dlc = "Gotterdammerung"		
	}

	breakthrough_cost = {
		specialization_air = 2
	}

	resource_cost = {
		resources = {
			aluminium = 12
			steel = 8
		}
	}

	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.medium

	project_output = {
		country_effects = {
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_helicopter_transport_pods_tech
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_helicopter_artillery_observers_tech
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_helicopter_med_evac_tech
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH_WITH_EXTRA_PROJECT
				TECH = country_culture|attack_helicopter_equipment_1_short
				EXTRA_PROJECT = sp_air_axial_jet_engine
			}
			
		}		

		enable_equipments = {
			helicopter_equipment_1 
		}

		enable_subunits = { 
			helicopter_brigade
		}

		enable_equipment_modules = {
			limit = {
				has_dlc = "Gotterdammerung"
				has_dlc = "No Step Back"
			}
			lc_helipad #Module for Land Cruiser
		}
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3
	}

	unique_prototype_rewards = {
		sp_air_helicopter_unique_reward = {
			fire_only_once = yes

			threshold = { 
				min = 40
				max = 90
			}

			weight = {
				base = 100
			}

			option = {
				token = sp_air_helicopter_preference_speed
				
				iteration_output = {
					country_effects = {
						add_equipment_bonus = {
							name = sp_air_helicopter_speed
							bonus = {
								helicopter_equipment  = {
									maximum_speed = 0.1
									fuel_consumption = 0.05
									build_cost_ic = 0.05
								}
							}
						}
					}
				}
			}
		

			option = {
				token = sp_air_helicopter_preference_compromise
				default = yes
				iteration_output = {
					country_effects = {
						add_equipment_bonus = {
							name = sp_air_helicopter_compromise
							bonus = {
								helicopter_equipment  = {
									reliability = 0.05
								}
							}
						}
					}
				}
			}

			option = {
				token = sp_air_helicopter_preference_protection
				
				iteration_output = {
					country_effects = {					
						add_equipment_bonus = {
							name = sp_air_helicopter_protection
							bonus = {
								helicopter_equipment  = {
									armor_value = 0.1
									defense = 0.1
									breakthrough = 0.1
									fuel_consumption = 0.15
									build_cost_ic = 0.1
								}
							}
						}
					}
				}		
			}	
		}
	}
}

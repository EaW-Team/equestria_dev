BRZ_anti_pacifism_campaign_cat = {
	BRZ_pacifist_crackdown = {

		icon = generic_prepare_civil_war

		available = {
			NOT = { has_country_flag = BRZ_anti_pacifism_campaign_in_progress }
		}

		cost = 25

		fire_only_once = yes

		days_remove = 60

		ai_will_do = {
			factor = 150
		}

		visible = {
			OR = {
				has_idea = BRZ_pacifism1
				has_idea = BRZ_pacifism2
				has_idea = BRZ_pacifism3
				has_idea = BRZ_pacifism4
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BRZ_pacifist_crackdown"
			hidden_effect = {
				set_country_flag = BRZ_anti_pacifism_campaign_in_progress
			}
		}

		modifier = {
			war_support_weekly = 0.005
			stability_weekly = -0.01
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_pacifist_crackdown"
			hidden_effect = {
				clr_country_flag = BRZ_anti_pacifism_campaign_in_progress
			}
			if = {
				limit = {
					has_idea = BRZ_pacifism1
				}
				swap_ideas = {
					remove_idea = BRZ_pacifism1
					add_idea = BRZ_pacifism2
				}
			}
			else_if = {
				limit = {
					has_idea = BRZ_pacifism2
				}
				swap_ideas = {
					remove_idea = BRZ_pacifism2
					add_idea = BRZ_pacifism3
				}
			}
			else_if = {
				limit = {
					has_idea = BRZ_pacifism3
				}
				swap_ideas = {
					remove_idea = BRZ_pacifism3
					add_idea = BRZ_pacifism4
				}
			}
			else = {
				remove_ideas = BRZ_pacifism4
			}
		}
	}

	BRZ_war_work_incentives = {

		icon = generic_prepare_civil_war

		available = {
			NOT = { has_country_flag = BRZ_anti_pacifism_campaign_in_progress }
		}

		cost = 25

		fire_only_once = yes

		days_remove = 60

		ai_will_do = {
			factor = 150
		}

		visible = {
			OR = {
				has_idea = BRZ_pacifism1
				has_idea = BRZ_pacifism2
				has_idea = BRZ_pacifism3
				has_idea = BRZ_pacifism4
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BRZ_war_work_incentives"
			hidden_effect = {
				set_country_flag = BRZ_anti_pacifism_campaign_in_progress
			}
		}

		modifier = {
			war_support_weekly = 0.005
			political_power_factor = -0.05
			industrial_capacity_factory = 0.15
			industrial_capacity_dockyard = 0.15
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_war_work_incentives"
			hidden_effect = {
				clr_country_flag = BRZ_anti_pacifism_campaign_in_progress
			}
			if = {
				limit = {
					has_idea = BRZ_pacifism1
				}
				swap_ideas = {
					remove_idea = BRZ_pacifism1
					add_idea = BRZ_pacifism2
				}
			}
			else_if = {
				limit = {
					has_idea = BRZ_pacifism2
				}
				swap_ideas = {
					remove_idea = BRZ_pacifism2
					add_idea = BRZ_pacifism3
				}
			}
			else_if = {
				limit = {
					has_idea = BRZ_pacifism3
				}
				swap_ideas = {
					remove_idea = BRZ_pacifism3
					add_idea = BRZ_pacifism4
				}
			}
			else = {
				remove_ideas = BRZ_pacifism4
			}
		}
	}

	BRZ_war_propoganda = {

		icon = generic_prepare_civil_war

		available = {
			NOT = { has_country_flag = BRZ_anti_pacifism_campaign_in_progress }
		}

		cost = 25

		fire_only_once = yes

		days_remove = 60

		ai_will_do = {
			factor = 150
		}

		visible = {
			OR = {
				has_idea = BRZ_pacifism1
				has_idea = BRZ_pacifism2
				has_idea = BRZ_pacifism3
				has_idea = BRZ_pacifism4
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BRZ_war_propoganda"
			hidden_effect = {
				set_country_flag = BRZ_anti_pacifism_campaign_in_progress
			}
		}

		modifier = {
			war_support_weekly = 0.005
			political_power_factor = -0.2
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_war_propoganda"
			hidden_effect = {
				clr_country_flag = BRZ_anti_pacifism_campaign_in_progress
			}
			if = {
				limit = {
					has_idea = BRZ_pacifism1
				}
				swap_ideas = {
					remove_idea = BRZ_pacifism1
					add_idea = BRZ_pacifism2
				}
			}
			else_if = {
				limit = {
					has_idea = BRZ_pacifism2
				}
				swap_ideas = {
					remove_idea = BRZ_pacifism2
					add_idea = BRZ_pacifism3
				}
			}
			else_if = {
				limit = {
					has_idea = BRZ_pacifism3
				}
				swap_ideas = {
					remove_idea = BRZ_pacifism3
					add_idea = BRZ_pacifism4
				}
			}
			else = {
				remove_ideas = BRZ_pacifism4
			}
		}
	}

	BRZ_rewrite_our_history = {

		icon = generic_prepare_civil_war

		available = {
			NOT = { has_country_flag = BRZ_anti_pacifism_campaign_in_progress }
		}

		cost = 25

		fire_only_once = yes

		days_remove = 30

		ai_will_do = {
			factor = 150
		}

		visible = {
			OR = {
				has_idea = BRZ_pacifism1
				has_idea = BRZ_pacifism2
				has_idea = BRZ_pacifism3
				has_idea = BRZ_pacifism4
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BRZ_if_day"
			hidden_effect = {
				set_country_flag = BRZ_anti_pacifism_campaign_in_progress
			}
		}

		modifier = {
			war_support_weekly = 0.01
			political_power_factor = -0.3
			local_resources_factor = -0.15
			industrial_capacity_factory = -0.15
			industrial_capacity_dockyard = -0.15
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_if_day"
			hidden_effect = {
				clr_country_flag = BRZ_anti_pacifism_campaign_in_progress
			}
			if = {
				limit = {
					has_idea = BRZ_pacifism1
				}
				swap_ideas = {
					remove_idea = BRZ_pacifism1
					add_idea = BRZ_pacifism2
				}
			}
			else_if = {
				limit = {
					has_idea = BRZ_pacifism2
				}
				swap_ideas = {
					remove_idea = BRZ_pacifism2
					add_idea = BRZ_pacifism3
				}
			}
			else_if = {
				limit = {
					has_idea = BRZ_pacifism3
				}
				swap_ideas = {
					remove_idea = BRZ_pacifism3
					add_idea = BRZ_pacifism4
				}
			}
			else = {
				remove_ideas = BRZ_pacifism4
			}
		}
	}

	BRZ_defensive_spirit = {

		icon = generic_prepare_civil_war

		ai_will_do = {
			factor = 200
		}

		cost = 25

		fire_only_once = yes

		visible = {
			has_defensive_war = yes
			OR = {
				has_idea = BRZ_pacifism1
				has_idea = BRZ_pacifism2
				has_idea = BRZ_pacifism3
				has_idea = BRZ_pacifism4
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BRZ_defenceive_spirit"
			hidden_effect = {
				clr_country_flag = BRZ_anti_pacifism_campaign_in_progress
			}
			if = {
				limit = {
					has_idea = BRZ_pacifism1
				}
				remove_ideas = BRZ_pacifism1
			}
			else_if = {
				limit = {
					has_idea = BRZ_pacifism2
				}
				remove_ideas = BRZ_pacifism2
			}
			else_if = {
				limit = {
					has_idea = BRZ_pacifism3
				}
				remove_ideas = BRZ_pacifism3
			}
			else = {
				remove_ideas = BRZ_pacifism4
			}
			add_war_support = 0.1
		}
	}
}

# Restauration of the Empire
BRZ_restauration_of_the_empire = {
	BRZ_to_rescue_the_emperor = {
		# Contingency in case somebody took Griffenheim in the peace conference
		icon = GFX_decision_crossed_swords
		
		allowed = {
			original_tag = BRZ
		}
		
		visible = {
			has_country_flag = can_declare_empire
			is_subject = no
			
			NOT = { owns_state = 382 } # Griffenheim
			
			# Note: Ignatius has his own decision, with special requirements
			if = {
				limit = {
					NOT = { has_country_flag = BRZ_revenge_tree_loaded }
				}
				has_completed_focus = BRZ_march_on_griffenheim
			}
			else = {
				has_completed_focus = BRZ_war_on_the_maarspawn
			}
			
			NOT = {
				OR = {
					has_war_with = 382.owner
					has_wargoal_against = 382.owner
				}
			}
		}
		
		cost = 25
		
		ai_will_do = {
			faction = 200
		}
		
		days_remove = 30
		
		war_with_on_remove = GR1 # Owner of Griffenheim
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_to_rescue_the_emperor"

			hidden_effect = {
				# Give wargoals
				create_wargoal = {
					type = take_state_focus
					target = 382.owner
					generator = { 382 }
				}
				#Don't give wargoal on same country twice
				if = {
					limit = {
						NOT = { 
							437 = { # Crona (connection to Griffenheim)
								owner = { 
									owns_state = 382 # Griffenheim
									NOT = { tag = ROOT } 
								} 
							} 
						}
					}
					create_wargoal = {
						type = take_state_focus
						target = 437.owner
						generator = { 437 }
					}
				}
			}
		
			declare_war_on = {
				target = 382.owner
				type = annex_everything
			}
		}
	}

	BRZ_proclaim_the_bronzehill_regency = {
		icon = GFX_decision_category_form_griffon_empire
		
		allowed = {
			original_tag = BRZ
		}
		
		visible = {
			NOT = { has_country_flag = BRZ_revenge_tree_loaded }
			has_country_flag = can_declare_empire # Event chain needs to play out (for Regent in Exile/Ignatius path) - Otherwise set early in the focus tree
			is_subject = no
			OR = {
				owns_state = 382 # Griffenheim
				has_completed_focus = BRZ_march_on_griffenheim
			}
		}
		
		available = {
			owns_state = 382 # Griffenheim
		}
		
		fire_only_once = yes
		
		ai_will_do = {
			factor = 200
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_proclaim_the_bronzehill_regency"
			every_possible_country = {
				limit = {
					has_character = GRI_emperor_grover_vi
				}
				GRI_emperor_grover_vi = {
					set_nationality = ROOT
				}
			}
			every_possible_country = {
				limit = {
					has_character = GRI_benito
				}
				GRI_benito = {
					set_nationality = ROOT
				}
			}
			if = {
				limit = {
					date > 1021.5.21
				}
				country_event = bronzehill_grover_coronation.1
			}
			else = {
				custom_effect_tooltip = BRZ_grover_vi_regency
				add_ideas = BRZ_grover_vi
			}
			hidden_effect = {
				if = {
					limit = {
						GRI = {
							has_idea = GRI_grover_vi
						}
					}
					GRI = {
						remove_ideas = GRI_grover_vi
					}
				}
				news_event = bronzehill_news.2
			}

			hidden_effect = { set_country_flag = { flag = holds_griffon_capital value = 1 } }
			drop_cosmetic_tag = yes
			save_global_event_target_as = griffonian_empire
			set_variable = { global.griffonian_empire_var = THIS }
			
			if = {
				limit = {
					has_country_leader = {
						character = BRZ_barker_steelpaw
						ruling_only = yes
					}
				}
				set_cosmetic_tag = BRZ_EMPIRE_IDC
			}
			else = {
				set_cosmetic_tag = BRZ_EMPIRE
			}

			set_capital = { state = 382 remember_old_capital = no }
			
			set_country_flag = BRZ_has_declared_the_empire
			
			# Remove all military pacts against GRI
			set_country_flag = herzland_diplomacy_blocked
			every_country = {
				limit = {
					has_guaranteed = ROOT
					is_guaranteed_by = ROOT
				}
				diplomatic_relation = {
					country = ROOT
					relation = guarantee
					active = no
				}
				ROOT = {
					diplomatic_relation = {
						country = PREV
						relation = guarantee
						active = no
					}
				}
				diplomatic_relation = {
					country = ROOT
					relation = military_access
					active = no
				}
				ROOT = {
					diplomatic_relation = {
						country = PREV
						relation = military_access
						active = no
					}
				}
			}
			
			GRI = {
				every_core_state = {
					add_core_of = ROOT
				}
			}
			if = {
				limit = {
					is_faction_leader = yes
				}
				dismantle_faction = yes
			}
			if = {
				limit = {
					is_in_faction = yes
				}
				leave_faction = yes
			}
			create_faction = "imperial_restoration_league"
			
			# Emperor is saved, final bonuses are removed
			if = {
				limit = {
					has_idea = BRZ_in_defence_of_tradition_idea
				}
				remove_ideas = BRZ_in_defence_of_tradition_idea
			}
			if = {
				limit = {
					has_idea = BRZ_our_cause_for_justice_idea
				}
				remove_ideas = BRZ_our_cause_for_justice_idea
			}
			if = {
				limit = {
					has_idea = BRZ_principle_of_total_dedication_idea
				}
				remove_ideas = BRZ_principle_of_total_dedication_idea
			}
			if = {
				limit = {
					has_idea = BRZ_march_of_the_working_dog_idea
				}
				remove_ideas = BRZ_march_of_the_working_dog_idea
			}
			if = {
				limit = {
					has_idea = BRZ_the_dogs_of_war
				}
				remove_ideas = BRZ_the_dogs_of_war
			}
			
			# Imperial owned economy doesn't make sense anymore
			if = {
				limit = {
					has_idea = BRZ_imperial_industry
				}
				remove_ideas = BRZ_imperial_industry
			}
			if = {
				limit = {
					has_idea = BRZ_imperial_industry_2
				}
				remove_ideas = BRZ_imperial_industry_2
			}
			if = {
				limit = {
					has_idea = BRZ_imperial_industry_3
				}
				remove_ideas = BRZ_imperial_industry_3
			}
			if = {
				limit = {
					has_idea = BRZ_imperial_industry_4
				}
				swap_ideas = {
					remove_idea = BRZ_imperial_industry_4
					add_idea = BRZ_integrated_economy
				}
			}
			if = {
				limit = {
					has_idea = BRZ_imperial_industry_4_stw
				}
				swap_ideas = {
					remove_idea = BRZ_imperial_industry_4_stw
					add_idea = BRZ_integrated_economy
				}
			}
			
			# New problems to deal with
			add_ideas = BRZ_overstretched_bureaucracy
			add_ideas = BRZ_disjointed_military
			
			# Can core the Herzland
			STW = { add_to_ROOT_potential_cores = yes } # Strawberry
			FEA = { add_to_ROOT_potential_cores = yes } # Feathisia
			PYT = { add_to_ROOT_potential_cores = yes } # Greifenmarschen
			ROU = { add_to_ROOT_potential_cores = yes } # Romau
			YAL = { add_to_ROOT_potential_cores = yes } # Yale
			ANG = { add_to_ROOT_potential_cores = yes } # Angriver
			KAT = { add_to_ROOT_potential_cores = yes } # Katherin
			
			if = {
				limit = {
					has_country_leader = { ruling_only = yes character = BRZ_rufus_loudbark }
				}
				hidden_effect = {
					country_event = {
						id = grover.28
						days = 1
					}
					load_focus_tree = {
						tree = bronzehill_loudbark_tree
						keep_completed = yes
					}
				}
			}
			else_if = {
				limit = {
					has_country_leader = { ruling_only = yes character = BRZ_barnaby_bronzetail }
				}
				hidden_effect = {
					country_event = {
						id = grover.30
						days = 1
					}
					load_focus_tree = {
						tree = bronzehill_barnaby_tree
						keep_completed = yes
					}
				}
			}
			else_if = {
				limit = {
					has_government = communism
					NOT = {
						has_country_leader = { ruling_only = yes character = BRZ_barker_steelpaw }
					}
				}
				hidden_effect = {
					country_event = {
						id = grover.31
						days = 1
					}
					load_focus_tree = {
						tree = bronzehill_softfur_tree
						keep_completed = yes
					}
				}
			}
			else_if = {
				limit = {
					has_country_leader = { ruling_only = yes character = BRZ_barker_steelpaw }
				}
				hidden_effect = {
					country_event = {
						id = grover.29
						days = 1
					}
					load_focus_tree = {
						tree = bronzehill_steelpaw_tree
						keep_completed = yes
					}
				}
			}
			else_if = {
				limit = {
					has_country_leader = { ruling_only = yes character = BRZ_count_ignatius_bronzetail }
				}
				hidden_effect = {
					#country_event = {
					#	id = bronzehill.27
					#	days = 1
					#}
					if = {
						limit = {
							has_country_flag = gabriela_peacefully_submitted
						}
						country_event = {
							id = bronzehill_loyalist.12
							days = 4
						}
					}
					load_focus_tree = {
						tree = bronzehill_ignatius_tree
						keep_completed = yes
					}
				}
			}
		}
	}
	
	BRZ_declare_unification_of_the_herzland = {
		icon = GFX_decision_category_form_griffon_empire
		
		allowed = {
			original_tag = BRZ
		}
		
		visible = {
			has_country_flag = BRZ_has_declared_the_empire
		}
		
		available = {
			GRI = { all_core_state = { is_owned_by = ROOT } } # Griffonian Empire
			STW = { all_core_state = { is_owned_by = ROOT } } # Strawberry
			FEA = { all_core_state = { is_owned_by = ROOT } } # Feathisia
			PYT = { all_core_state = { is_owned_by = ROOT } } # Greifenmarschen
			ROU = { all_core_state = { is_owned_by = ROOT } } # Romau
			YAL = { all_core_state = { is_owned_by = ROOT } } # Yale
			ANG = { all_core_state = { is_owned_by = ROOT } } # Angriver
			KAT = { all_core_state = { is_owned_by = ROOT } } # Katherin
		}
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_declare_unification_of_the_herzland"
			
			add_timed_idea = {
				idea = BRZ_unified_the_herzland
				days = 180
			}
			
			set_country_flag = has_unified_herzland
			
			set_global_flag = GRI_empire_rising_flag
			
			if = {
				limit = {
					has_country_flag = BRZ_revenge_tree_loaded
				}
				add_to_variable = { BRZ_revenge_army_fervour = 1 }
				custom_effect_tooltip = BRZ_revenge_army_fervour_add_1
				BRZ_update_fervour = yes
			}
			
			custom_effect_tooltip = GRI_unlock_mandates_tooltip
		}
	}
}

BRZ_imperial_economic_development_cat = {

	# Decisions for the Trains
	
	BRZ_trains_to_skyfall_and_griffton = {
		icon = GFX_decision_generic_train
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_the_imperial_high_speed_rail
		}
		
		available = {
			controls_state = 381 # Skyfall
			owns_state = 381 # Skyfall
			controls_state = 380 # Griffton
			owns_state = 380 # Griffton
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_trains_to_skyfall_and_griffton"
			
			hidden_effect = {
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 433 # Rottendedam
					target_state = 381 # Skyfall
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 381 # Skyfall
					target_state = 380 # Griffton
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 4
					
					start_state = 433 # Rottendedam
					target_state = 381 # Skyfall
				}
				build_railway = {
					level = 4
					
					start_state = 381 # Skyfall
					target_state = 380 # Griffton
				}
			}
			
			set_country_flag = BRZ_build_trains_to_skyfall
		}
	}
	
	BRZ_trains_to_cloudbury = {
		icon = GFX_decision_generic_train
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_the_imperial_high_speed_rail
		}
		
		available = {
			controls_state = 485 # Cloudbury
			owns_state = 485 # Cloudbury
			#controls_state = 432 # Winghagen (on the way) - railways are build smartly
			#controls_state = 556 # Rotten Rift (on the way) - railways are build smartly
			#controls_state = 557 # Doendejord (on the way) - railways are build smartly
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_trains_to_cloudbury"
			
			set_country_flag = BRZ_build_trains_to_cloudbury
			
			hidden_effect = {
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 433 # Rottendedam
					target_state = 485 # Cloudbury
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 486 # Readewetter
					target_state = 485 # Cloudbury
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 4
					
					start_state = 433 # Rottendedam
					target_state = 485 # Cloudbury
				}
				build_railway = {
					level = 4
					
					start_state = 486 # Readewetter
					target_state = 485 # Cloudbury
				}

			}
		}
	}
	
	BRZ_trains_to_hellquill = {
		icon = GFX_decision_generic_train
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_the_imperial_high_speed_rail
		}
		
		available = {
			OR = { # Hellquill Knights can submit
				any_subject_country = {
					owns_state = 537 # Hellquill
				}
				owns_state = 537 # Hellquill
			}
			OR = { # Hellquill Knights can submit
				any_subject_country = {
					owns_state = 552 # Swordsson
				}
				owns_state = 552 # Swordsson
			}
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_trains_to_hellquill"
			
			set_country_flag = BRZ_build_trains_to_hellquill
			
			hidden_effect = {
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 423 # Katerin
					target_state = 537 # Hellquill
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 537 # Hellquill
					target_state = 552 # Swordsson
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 4
					
					start_state = 423 # Katerin
					target_state = 537 # Hellquill
				}
				build_railway = {
					level = 4
					
					start_state = 537 # Hellquill
					target_state = 552 # Swordsson
				}
			}
		}
	}
	
	BRZ_trains_to_griffonstone = {
		icon = GFX_decision_generic_train
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_the_imperial_high_speed_rail
		}
		
		available = {
			controls_state = 389 # Griffonstone
			owns_state = 389 # Griffonstone
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_trains_to_griffonstone"
			
			set_country_flag = BRZ_build_trains_to_griffonstone
			
			hidden_effect = {
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 398 # Greenback
					target_state = 389 # Griffonstone
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 4
					
					start_state = 398 # Greenback
					target_state = 389 # Griffonstone
				}

			}
		}
	}
	
	BRZ_trains_to_the_northern_tip = {
		icon = GFX_decision_generic_train
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_the_imperial_high_speed_rail
		}
		
		available = {
			OR = { # Skynavia can submit
				any_subject_country = {
					controls_state = 522 # Skynavia
					owns_state = 522 # Skynavia
				}
				AND = {
					controls_state = 522 # Skynavia
					owns_state = 522 # Skynavia
				}
			}
			controls_state = 429 # Kungland
			owns_state = 429 # Kungland
			controls_state = 482 # Snälland
			owns_state = 482 # Snälland
			controls_state = 483 # Skyrim
			owns_state = 483 # Skyrim
			controls_state = 430 # Borasland
			owns_state = 430 # Borasland
			num_of_civilian_factories_available_for_projects > 5
			has_country_flag = BRZ_build_trains_to_cloudbury
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 6
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_trains_to_the_northern_tip"
			
			set_country_flag = BRZ_build_trains_to_the_northern_tip
			
			hidden_effect = {
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 433 # Rottendedam
					target_state = 429 # Turhamm
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 429 # Turhamm
					target_state = 482 # Järnköping
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 482 # Järnköping
					target_state = 483 # Skyrim
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 483 # Skyrim
					target_state = 430 # Veteborg
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 430 # Veteborg
					target_state = 522 # New Skynavia
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 4
					
					start_state = 433 # Rottendedam
					target_state = 429 # Turhamm
				}
				build_railway = {
					level = 4
					
					start_state = 429 # Turhamm
					target_state = 482 # Järnköping
				}
				build_railway = {
					level = 4
					
					start_state = 482 # Järnköping
					target_state = 483 # Skyrim
				}
				build_railway = {
					level = 4
					
					start_state = 483 # Skyrim
					target_state = 430 # Veteborg
				}
				build_railway = {
					level = 4
					
					start_state = 430 # Veteborg
					target_state = 522 # New Skynavia
				}
			}
		}
	}
	
	BRZ_trains_to_aquileia = {
		icon = GFX_decision_generic_train
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_the_imperial_high_speed_rail
		}
		
		available = {
			controls_state = 435 # Rila
			owns_state = 435 # Rila
			controls_state = 377 # Aquileia
			owns_state = 377 # Aquileia
			controls_state = 442 # Flowena
			owns_state = 442 # Flowena
			controls_state = 376 # Pridea
			owns_state = 376 # Pridea
			num_of_civilian_factories_available_for_projects > 5
			has_country_flag = BRZ_build_trains_to_skyfall
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 6
		}

		days_remove = 100

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_trains_to_aquileia"
			
			set_country_flag = BRZ_build_trains_to_aquileia
			
			hidden_effect = {
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 674 # Romau
					target_state = 442 # Flowena
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 442 # Flowena
					target_state = 377 # Aquila
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 380 # Griffton
					target_state = 435 # Rila
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 435 # Rila
					target_state = 377 # Aquila
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 377 # Aquila
					target_state = 376 # Pridea
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 4
					
					start_state = 674 # Romau
					target_state = 442 # Flowena
				}
				build_railway = {
					level = 4
					
					start_state = 442 # Flowena
					target_state = 377 # Aquila
				}
				build_railway = {
					level = 4
					
					start_state = 380 # Griffton
					target_state = 435 # Rila
				}
				build_railway = {
					level = 4
					
					start_state = 435 # Rila
					target_state = 377 # Aquila
				}
				build_railway = {
					level = 4
					
					start_state = 377 # Aquila
					target_state = 376 # Pridea
				}
			}
		}
	}
	
	BRZ_trains_to_francistria_and_talouse = {
		icon = GFX_decision_generic_train
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_the_imperial_high_speed_rail
		}
		
		available = {
			controls_state = 515 # Francistria
			owns_state = 515 # Francistria
			controls_state = 366 # Talononte
			owns_state = 366 # Talononte
			num_of_civilian_factories_available_for_projects > 4
			has_country_flag = BRZ_build_trains_to_aquileia # Connects to Pridea
			has_country_flag = BRZ_build_trains_to_griffonstone # Connects to Griffonstone
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_trains_to_francistria_and_talouse"
			
			set_country_flag = BRZ_build_trains_to_francistria
			
			hidden_effect = {
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 376 # Pridea
					target_state = 366 # Talononte
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 366 # Talononte
					target_state = 515 # Francistria
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 515 # Francistria
					target_state = 389 # Griffonstone
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 4
					
					start_state = 376 # Pridea
					target_state = 366 # Talononte
				}
				build_railway = {
					level = 4
					
					start_state = 366 # Talononte
					target_state = 515 # Francistria
				}
				build_railway = {
					level = 4
					
					start_state = 515 # Francistria
					target_state = 389 # Griffonstone
				}
			}
		}
	}
	
	BRZ_trains_to_wingbardy = {
		icon = GFX_decision_generic_train
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_the_imperial_high_speed_rail
		}
		
		available = {
			controls_state = 371 # Karthin
			owns_state = 371 # Karthin
			controls_state = 369 # Wrobert
			owns_state = 369 # Wrobert
			controls_state = 530 # Falcor
			owns_state = 530 # Falcor
			num_of_civilian_factories_available_for_projects > 5
			has_country_flag = BRZ_build_trains_to_francistria
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 6
		}

		days_remove = 80

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_trains_to_wingbardy"
			
			set_country_flag = BRZ_build_trains_to_wingbardy
			
			hidden_effect = {
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 366 # Talononte
					target_state = 369 # Wrobert
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 369 # Wrobert
					target_state = 371 # Karthin
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 515 # Francistria
					target_state = 530 # Falcor
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 530 # Falcor
					target_state = 371 # Karthin
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 4
					
					start_state = 366 # Talononte
					target_state = 369 # Wrobert
				}
				build_railway = {
					level = 4
					
					start_state = 369 # Wrobert
					target_state = 371 # Karthin
				}
				build_railway = {
					level = 4
					
					start_state = 515 # Francistria
					target_state = 530 # Falcor
				}
				build_railway = {
					level = 4
					
					start_state = 530 # Falcor
					target_state = 371 # Karthin
				}
			}
		}
	}
	
	BRZ_trains_to_southern_coast = {
		icon = GFX_decision_generic_train
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_the_imperial_high_speed_rail
		}
		
		available = {
			controls_state = 671 # Thymiaustadt
			owns_state = 671 # Thymiaustadt
			controls_state = 445 # Midora
			owns_state = 445 # Midora
			num_of_civilian_factories_available_for_projects > 5
			has_country_flag = BRZ_build_trains_to_wingbardy
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 6
		}

		days_remove = 60

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_trains_to_southern_coast"
			
			set_country_flag = BRZ_build_trains_to_the_southern_coast
			
			hidden_effect = {
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 530 # Falcor
					target_state = 671 # Thymiaustadt
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 530 # Falcor
					target_state = 445 # Midora
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 4
					
					start_state = 530 # Falcor
					target_state = 671 # Thymiaustadt
				}
				build_railway = {
					level = 4
					
					start_state = 530 # Falcor
					target_state = 445 # Midora
				}

			}
		}
	}
	
	BRZ_trains_to_the_grenzland = {
		icon = GFX_decision_generic_train
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_the_imperial_high_speed_rail
		}
		
		available = {
			controls_state = 608 # Lumium
			owns_state = 608 # Lumium
			controls_state = 508 # Kivessin
			owns_state = 508 # Kivessin
			controls_state = 598 # Kaiv
			owns_state = 598 # Kaiv
			controls_state = 385 # Syndia
			owns_state = 385 # Syndia
			controls_state = 512 # Riaportu
			owns_state = 512 # Riaportu
			num_of_civilian_factories_available_for_projects > 7
			has_country_flag = BRZ_build_trains_to_the_southern_coast
			has_country_flag = BRZ_build_trains_to_hellquill
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 8
		}

		days_remove = 120

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_trains_to_the_grenzland"
			
			set_country_flag = BRZ_build_trains_to_grenzland
			
			hidden_effect = {
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 552 # Swordsson
					target_state = 608 # Lumium
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 608 # Swordsson
					target_state = 508 # Kivessin
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_province = 10377 # Kivessin prov
					target_province = 10764 # Kaiv prov - if not done this way, it will only reach to Kalintsk 
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 671 # Thymiaustadt
					target_state = 385 # Sydia
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 385 # Sydia
					target_state = 508 # Kivessin
				}
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 385 # Sydia
					target_state = 512 # Riaportu
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 4
					
					start_state = 552 # Swordsson
					target_state = 608 # Lumium
				}
				build_railway = {
					level = 4
					
					start_state = 608 # Swordsson
					target_state = 508 # Kivessin
				}
				build_railway = {
					level = 4
					
					start_province = 10377 # Kivessin prov
					target_province = 10764 # Kaiv prov - if not done this way, it will only reach to Kalintsk 
				}
				build_railway = {
					level = 4
					
					start_state = 671 # Thymiaustadt
					target_state = 385 # Sydia
				}
				build_railway = {
					level = 4
					
					start_state = 385 # Sydia
					target_state = 508 # Kivessin
				}
				build_railway = {
					level = 4
					
					start_state = 385 # Sydia
					target_state = 512 # Riaportu
				}
			}
		}
	}
	
	BRZ_trains_to_sunset = {
		icon = GFX_decision_generic_train
		cost = 30
		
		visible = {
			has_completed_focus = BRZ_the_imperial_high_speed_rail
			OR = { # Normally not visible
				any_subject_country = {
					owns_state = 356 # Sunset
				}
				owns_state = 356 # Sunset
			}
		}
		
		available = {
			OR = {
				any_subject_country = {
					controls_state = 356 # Sunset
					owns_state = 356 # Sunset
				}
				AND = {
					controls_state = 356 # Sunset
					owns_state = 356 # Sunset
				}
			}
			num_of_civilian_factories_available_for_projects > 3
			has_country_flag = BRZ_build_trains_to_francistria
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_trains_to_sunset"
			
			set_country_flag = BRZ_build_trains_to_sunset
			
			hidden_effect = {
				build_railway = {
					level = 4
					build_only_on_allied = yes
					
					start_state = 366 # Talononte
					target_state = 356 # Sunset
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 4
					
					start_state = 366 # Talononte
					target_state = 356 # Sunset
				}
			}
		}
	}
	
	# Support The Countryside
	
	BRZ_populate_the_interriver = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_support_the_countryside
		}
		
		available = {
			owns_state = 405 # Interriver
			owns_state = 666 # Rima
			owns_state = 440 # Reitschild
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 60

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_populate_the_interriver"
			
			405 = { # Interriver
				add_extra_state_shared_building_slots = 2
				add_manpower = 75000
			}
			666 = { # Rima
				add_extra_state_shared_building_slots = 1
				add_manpower = 50000
			}
			440 = { # Reitschild
				add_extra_state_shared_building_slots = 1
				add_manpower = 50000
			}
		}
	}
	
	BRZ_the_riches_of_northern_strawberry = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_support_the_countryside
		}
		
		available = {
			owns_state = 546 # Starclaw
			owns_state = 545 # Dwarftail
			owns_state = 458 # Winterbell (railroad only)
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_the_riches_of_northern_strawberry"
			
			hidden_effect = {
				build_railway = {
					level = 1
					build_only_on_allied = yes
					
					start_province = 1603 # Flussschloss (victory point)
					target_province = 6482 # Eindheim (Dwarftail state)
				}
				build_railway = {
					level = 1
					build_only_on_allied = yes
					
					start_province = 10372 # Starclaw
					target_province = 6482 # Dwarftail
				}
				build_railway = {
					level = 1
					build_only_on_allied = yes
					
					start_province = 6482 # Dwarftail
					target_province = 1254 # Crownspike
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 1
					
					start_province = 1603 # Flussschloss (victory point)
					target_province = 6482 # Eindheim (Dwarftail state)
				}
				build_railway = {
					level = 1
					
					start_province = 10372 # Starclaw
					target_province = 6482 # Dwarftail
				}
				build_railway = {
					level = 1
					
					start_province = 6482 # Dwarftail
					target_province = 1254 # Crownspike
				}
			}
			
			546 = { # Starclaw
				add_extra_state_shared_building_slots = 1
				add_manpower = 75000
			}
			545 = { # Dwarftail
				add_extra_state_shared_building_slots = 1
				add_manpower = 75000
			}
		}
	}
	
	BRZ_the_lands_east_of_the_raven = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_support_the_countryside
		}
		
		available = {
			owns_state = 424 # Raven Lakes
			owns_state = 479 # Pineshade
			owns_state = 555 # King's Realm
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_the_lands_east_of_the_raven"
				
			424 = { # Raven Lakes
				add_extra_state_shared_building_slots = 1
				add_manpower = 50000
			}		
			479 = { # Pineshade
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
				add_manpower = 50000
			}
			555 = { # King's Realm
				add_extra_state_shared_building_slots = 1
				add_manpower = 50000
			}
		}
	}
	
	BRZ_build_up_verenia = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_support_the_countryside
		}
		
		available = {
			owns_state = 400 # Eyrie
			owns_state = 401 # Erie
			owns_state = 673 # Comrick
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_the_lands_east_of_the_raven"
				
			400 = { # Eyrie
				add_extra_state_shared_building_slots = 2
			}		
			401 = { # Erie
				add_extra_state_shared_building_slots = 1
			}
			673 = { # Comrick
				add_extra_state_shared_building_slots = 1
			}
		}
	}
	
	BRZ_settlement_programs_in_vedina = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_support_the_countryside
		}
		
		available = {
			controls_state = 404 # Sydvästland
			controls_state = 482 # Snälland
			controls_state = 484 # Kullbotton
			controls_state = 576 # Flodbotton
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_settlement_programs_in_vedina"
			
			404 = { # Some settlers for Sydvästland
				add_extra_state_shared_building_slots = 1
				add_manpower = 50000
			}
			482 = { # Some settlers for Snälland
				add_extra_state_shared_building_slots = 1
				add_manpower = 75000
			}
			484 = { # Some settlers for Kullbotton
				add_extra_state_shared_building_slots = 1
				add_manpower = 50000
			}
			576 = { # Some settlers for Flodbotton
				add_extra_state_shared_building_slots = 1
				add_manpower = 50000
			}
		}
	}
	
	# Mass Motorization
	
	BRZ_build_the_oldbeaken_engine_works = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_mass_motorization
		}
		
		available = {
			owns_state = 379 # Oldbeaken
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_the_oldbeaken_engine_works"
			
			379 = { # Oldbeaken
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = industrial_complex
					level = 2
					instant_build = yes
				}
			}
		}
	}
	
	BRZ_build_oldwingburg_tractor_factory = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_mass_motorization
		}
		
		available = {
			owns_state = 378 # Oldwingburg
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_oldwingburg_tractor_factory"
			
			378 = { # Oldwingburg
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = industrial_complex
					level = 2
					instant_build = yes
				}
			}
			447 = {
				add_extra_state_shared_building_slots = 1
			}
			399 = {
				add_extra_state_shared_building_slots = 1
			}
		}
	}
	
	BRZ_build_the_romau_tank_factory = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_mass_motorization
		}
		
		available = {
			owns_state = 674 # Romau
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_the_romau_tank_factory"
			
			674 = { # Romau
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = arms_factory
					level = 2
					instant_build = yes
				}
			}
		}
	}
	
	# Expedition To The Northern Mountains
	
	BRZ_gems_of_the_sunstriker_mountains = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_expedition_to_the_northern_mountains
		}
		
		available = {
			owns_state = 475 # Arrowpeaks
			owns_state = 476 # Silkhorn
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_the_romau_tank_factory"
			
			475 = { # Arrowpeaks (Sunstriker)
				add_resource = {
					type = crystals
					amount = 10
				}
			}
			476 = {	# Silkhorn (Sunstriker)		
				add_resource = {
					type = crystals
					amount = 6
				}
			}
		}
	}
	
	BRZ_gems_of_the_lost_mountains = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_expedition_to_the_northern_mountains
		}
		
		available = {
			owns_state = 480 # Windford
			owns_state = 450 # Cavegrove
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_the_romau_tank_factory"
			
			480 = { # Windfort (GriffRep)
				add_resource = {
					type = crystals
					amount = 10
				}
			}
			450 = { # Cavegrove (GriffRep)
				add_resource = {
					type = crystals
					amount = 6
				}
			}
		}
	}
	
	BRZ_furnaces_of_dimpeak = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_expedition_to_the_northern_mountains
		}
		
		available = {
			owns_state = 475 # Arrowpeaks
			owns_state = 476 # Silkhorn
			owns_state = 459 # Dimpeak
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_the_romau_tank_factory"
			
			475 = { # Arrowpeaks (Sunstriker)
				add_resource = {
					type = steel
					amount = 12
				}
			}
			476 = { # Silkhorn (Sunstriker)
				add_resource = {
					type = steel
					amount = 14
				}
			}
			459 = { # Dimpeak (Sunstriker)
				add_resource = {
					type = steel
					amount = 5
				}
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
		}
	}
	
	BRZ_rare_metals_from_up_north = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_expedition_to_the_northern_mountains
		}
		
		available = {
			owns_state = 477 # Whitebearded
			owns_state = 476 # Silkhorn
			owns_state = 450 # Cavegrove
			owns_state = 474 # Lostgate
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_the_romau_tank_factory"
			
			477 = { # Whitebearded (Sunstriker)
				add_resource = {
					type = chromium
					amount = 12
				}
			}
			476 = { # Silkhorn (Sunstriker)
				add_resource = {
					type = tungsten
					amount = 10
				}
			}
			450 = { # Cavegrove (GriffRep)
				add_resource = {
					type = tungsten
					amount = 5
				}
			}
			474 = { # Lostgate (GriffRep)
				add_resource = {
					type = tungsten
					amount = 12
				}
				add_resource = {
					type = chromium
					amount = 5
				}
			}
		}
	}
	
	BRZ_all_that_what_glitters = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_expedition_to_the_northern_mountains
		}
		
		available = {
			owns_state = 450 # Cavegrove
			owns_state = 474 # Lostgate
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_the_romau_tank_factory"
			
			450 = { # Cavegrove (GriffRep)
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = industrial_complex
					level = 1
				}
			}
			474 = { # Lostgate (GriffRep)
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = industrial_complex
					level = 1
				}
			}
			
			hidden_effect = {
				
			}
		}
	}
	
	# New Industrial Centres Decisions
	
	BRZ_plastic_industry_in_osnabeak = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_new_industrial_centres
		}
		
		available = {
			controls_state = 443 # Osnabeak
			num_of_civilian_factories_available_for_projects > 2
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 3
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_plastic_industry_in_osnabeak"
			
			443 = { # Some light industry in Osnabeak
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
		}
	}
	
	BRZ_lumbermills_for_the_scheisswald = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_new_industrial_centres
		}
		
		available = {
			controls_state = 422 # S Scheißwald
			controls_state = 506 # Lingermill
			controls_state = 554 # Straßmark
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_lumbermills_for_the_scheisswald"
			
			422 = { # Some light industry in Southern Scheißwald
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
			506 = { # Some light industry in Lingermill
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
			554 = { # Some light industry in Straßmark
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
		}
	}
	
	BRZ_tourist_industry_in_rottendedam = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_new_industrial_centres
		}
		
		available = {
			controls_state = 433 # Rottendedam
			num_of_civilian_factories_available_for_projects > 2
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 3
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_tourist_industry_in_rottendedam"
			
			433 = { # Some light industry in Rottendedam
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = industrial_complex
					level = 2
					instant_build = yes
				}
			}
		}
	}
	
	BRZ_food_industry_along_the_angriver = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_new_industrial_centres
		}
		
		available = {
			controls_state = 411 # Angriver
			controls_state = 547 # Angleclaw
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 60

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_food_industry_along_the_angriver"
			
			411 = { # Angriver
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = industrial_complex
					level = 1
				}
			}
			547 = { # Angleclaw
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = industrial_complex
					level = 1
				}
			}
		}
	}
	
	BRZ_reinvigorate_cloudburies_wool_industry = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_new_industrial_centres
		}
		
		available = {
			controls_state = 485 # Cloudbury
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 60

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_reinvigorate_cloudburies_wool_industry"
			
			485 = { # Some light industry and opportunities in Cloudbury
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
			557 = { # Development opportunities for Doendejord
				add_extra_state_shared_building_slots = 1
			}
		}
	}
	
	# Imperial Gunforges
	BRZ_helheim_arsenal = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_imperial_gunforges
		}
		
		available = {
			controls_state = 397 # Helheim
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_helheim_arsenal"
			
			397 = { # Some military industry in Helheim
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = arms_factory
					level = 2
					instant_build = yes
				}
			}
		}
	}
	
	BRZ_dockyards_on_the_west_coast = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_imperial_gunforges
		}
		
		available = {
			controls_state = 381 # Skyfall
			controls_state = 379 # Oldbeaken
			controls_state = 380 # Griffton
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 60

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_dockyards_on_the_west_coast"
			
			381 = { # Some military industry in Skyfall
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = dockyard
					level = 1
					instant_build = yes
				}
			}
			380 = { # Some military industry in Griffton
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = dockyard
					level = 1
					instant_build = yes
				}
			}
			379 = { # Some military industry in Oldbeken
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = dockyard
					level = 1
					instant_build = yes
				}
			}
		}
	}
	
	BRZ_mirabelle_munition_plant = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_imperial_gunforges
		}
		
		available = {
			controls_state = 538 # Mirabelle
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_mirabelle_munition_plant"
			
			538 = { # Some military industry in Mirabelle
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = arms_factory
					level = 2
					instant_build = yes
				}
			}
		}
	}
	
	BRZ_build_the_katerinburg_arsenal = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_imperial_gunforges
		}
		
		available = {
			controls_state = 423 # Katerinburg
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_the_katerinburg_arsenal"
			
			423 = { # Some military industry in Katerinburg
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = arms_factory
					level = 2
					instant_build = yes
				}
			}
		}
	}
	
	BRZ_workshops_in_rural_feathisia = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_imperial_gunforges
		}
		
		available = {
			controls_state = 434 # Central Plain
			controls_state = 666 # Rima
			controls_state = 441 # Luxwingburg
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_workshops_in_rural_feathisia"
			
			434 = { # Some military industry in Central Plain
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = arms_factory
					level = 1
					instant_build = yes
				}
			}
			666 = { # Some military industry in Rima
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = arms_factory
					level = 1
					instant_build = yes
				}
			}
			441 = { # Some military industry in Luxwingburg
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = arms_factory
					level = 1
					instant_build = yes
				}
			}
		}
	}
	
	# Lights Of Griffonia
	
	BRZ_restore_aquila = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_lights_of_griffonia
		}
		
		available = {
			controls_state = 377 # Aquila
			controls_state = 516 # Vyzima
			controls_state = 473 # Littlebay
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_restore_aquila"
			
			377 = { # Some development possibilies for Aquila (test if useful, maybe its full?)
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
			516 = { # Vyzima
				add_extra_state_shared_building_slots = 1
			}
			473 = { # Littlebay
				add_extra_state_shared_building_slots = 1
			}
		}
	}
	
	BRZ_restore_karthin = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_lights_of_griffonia
		}
		
		available = {
			controls_state = 371 # Karthin
			controls_state = 373 # Warthog Forest
			controls_state = 536 # Bloodtalon
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_restore_karthin"
			
			371 = { # Some development possibilies for Karthin
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
			373 = { # Warthog Forest
				add_extra_state_shared_building_slots = 1
			}
			536 = { # Bloodtalon
				add_extra_state_shared_building_slots = 1
			}
		}
	}
	
	BRZ_restore_griffonstone = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_lights_of_griffonia
		}
		
		available = {
			controls_state = 389 # Griffonstone
			controls_state = 384 # Wohnsitz
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_restore_griffonstone"
			
			389 = { # Some development possibilies for Griffonstone
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
			384 = { # Wohnsitz
				add_extra_state_shared_building_slots = 2
			}
		}
	}
	
	BRZ_restore_riaportu = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_lights_of_griffonia
		}
		
		available = {
			controls_state = 512 # Riaportu
			controls_state = 594 # Balisemont
			controls_state = 599 # Night Forest South
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_restore_riaportu"
			
			512 = { # Some development possibilies for Riaportu
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
			594 = { # Balisemont
				add_extra_state_shared_building_slots = 1
			}
			599 = { # Night Forest South
				add_extra_state_shared_building_slots = 1
			}
		}
	}
	
	BRZ_restore_solarspike_temples = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_lights_of_griffonia
			NOT = { # Barking-Sun is too atheist to care
				has_country_leader = { ruling_only = yes character = BRZ_barker_steelpaw }
			}
		}
		
		available = {
			controls_state = 531 # Solarspike
			controls_state = 488 # Coalfall
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_restore_solarspike_temples"
			
			531 = { # Some development possibilies for Solarspike
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
				
			}
			488 = { # Some development possibilies for Coalfall
				add_extra_state_shared_building_slots = 2
			}
		}
	}
	
	# Support The Electronics Industry
	
	BRZ_greengate_high_tech_industry = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_support_the_electronic_industry
		}
		
		available = {
			controls_state = 398 # Greenback
			controls_state = 439 # Yale
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_greengate_high_tech_industry"
			
			398 = { # Some light industry in Greenback
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
			439 = { # Some light industry in Yale
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
		}
	}
	
	BRZ_build_the_kronburg_facility = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_support_the_electronic_industry
		}
		
		available = {
			controls_state = 555 # King's Realm
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 50

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_the_kronburg_facility"
			
			555 = { # Some light industry in Greenback
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
			if = {
				limit = {
					has_dlc = "La Resistance"
				}
				add_ideas = BRZ_the_kronburg_facility_lar
			}
			else = {
				add_ideas = BRZ_the_kronburg_facility_nolar
			}
		}
	}
	
	BRZ_radio_industry_in_de_vleugels = {
		icon = generic_construction
		cost = 50
		
		visible = {
			has_completed_focus = BRZ_support_the_electronic_industry
		}
		
		available = {
			controls_state = 520 # De Vleugels
			num_of_civilian_factories_available_for_projects > 3
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 4
		}

		days_remove = 60

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_radio_industry_in_de_vleugels"
			
			520 = { # Some light industry in De Vleugels
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = industrial_complex
					level = 2
					instant_build = yes
				}
			}
		}
	}
	
	# Pan-Griffonian Development Initiative
	
	BRZ_fishing_industry_of_lake_rumare = {
		icon = generic_construction
		cost = 100
		
		visible = {
			has_completed_focus = BRZ_pan_griffonian_development_initiative
		}
		
		available = {
			controls_state = 383 # Rumare
			controls_state = 384 # Wohnsitz
			controls_state = 679 # Stone Highland
			controls_state = 408 # Sparleto
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_fishing_industry_of_lake_rumare"
			
			383 = { # Some development possibilies for Rumare
				add_extra_state_shared_building_slots = 2
				
			}
			384 = { # Some development possibilies for Wohnsitz
				add_extra_state_shared_building_slots = 2
				
			}
			679 = { # Some development possibilies for Stone Highland
				add_extra_state_shared_building_slots = 2
				
			}
			408 = { # Some development possibilies for Sparleto
				add_extra_state_shared_building_slots = 2
				
			}
		}
	}
		
	BRZ_urbanize_greifwald = {
		icon = generic_construction
		cost = 100
		
		visible = {
			has_completed_focus = BRZ_pan_griffonian_development_initiative
		}
		
		available = {
			controls_state = 436 # Töchanerwald
			controls_state = 457 # Cloudgard
			controls_state = 496 # Glensi	
			controls_state = 493 # Lissay
			controls_state = 494 # Eagleton
			controls_state = 495 # Falcontown
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_urbanize_greifwald"
			
			436 = { # Some development possibilies for Töchanerwald
				add_extra_state_shared_building_slots = 2
			}
			457 = { # Some development possibilies for Cloudgard
				add_extra_state_shared_building_slots = 2
			}
			496 = { # Some development possibilies for Glensi
				add_extra_state_shared_building_slots = 1
				add_manpower = 25000
			}
			493 = { # Some development possibilies for Lissay
				add_extra_state_shared_building_slots = 2
			}
			494 = { # Some development possibilies for Eagleton
				add_extra_state_shared_building_slots = 1
			}
			495 = { # Some development possibilies for Falcontown
				add_extra_state_shared_building_slots = 1
			}
		}
	}
	
	BRZ_industry_for_the_cossacks = {
		icon = generic_construction
		cost = 100
		
		visible = {
			has_completed_focus = BRZ_pan_griffonian_development_initiative
		}
		
		available = {
			controls_state = 598 # Kaiv
			controls_state = 597 # Soloboda
			controls_state = 611 # Buzzovina
			controls_state = 596 # Pohryfynnja
			controls_state = 631 # Lower Copperclaws
			controls_state = 610 # Holdcrestov
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_industry_for_the_cossacks"
			
			598 = { # Some development possibilies for Kaiv
				add_extra_state_shared_building_slots = 2
			}
			597 = { # Some development possibilies for Soloboda
				add_extra_state_shared_building_slots = 2
			}
			611 = { # Some development possibilies for Buzzovina
				add_extra_state_shared_building_slots = 1
			}
			596 = { # Some development possibilies for Pohryfynnja
				add_extra_state_shared_building_slots = 1
			}
			631 = { # Some development possibilies for Lower Copperclaws
				add_extra_state_shared_building_slots = 1
			}
			610 = { # Some development possibilies for Holdcrestov
				add_extra_state_shared_building_slots = 1
			}
		}
	}
		
	BRZ_opportunies_in_lushi = {
		icon = generic_construction
		cost = 100
		
		visible = {
			has_completed_focus = BRZ_pan_griffonian_development_initiative
		}
		
		available = {
			controls_state = 591 # Talvona
			controls_state = 632 # Draksland
			controls_state = 607 # Cessabit
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_opportunies_in_lushi"
			
			591 = { # Some development possibilies for Talvona
				add_extra_state_shared_building_slots = 2
			}
			632 = { # Some development possibilies for Draksland
				add_extra_state_shared_building_slots = 2
			}
			607 = { # Some development possibilies for Cessabit
				add_extra_state_shared_building_slots = 2
			}
		}
	}
	
	BRZ_promote_development_in_southern_griffonia = {
		icon = generic_construction
		cost = 100
		
		visible = {
			has_completed_focus = BRZ_pan_griffonian_development_initiative
		}
		
		available = {
			controls_state = 549 # Niemals
			controls_state = 504 # Sudfolc
			controls_state = 503 # Alba Torre
			controls_state = 374 # Taloncana
			controls_state = 534 # Asbolus
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_opportunies_in_lushi"
			
			549 = { # Some development possibilies for Niemals
				add_extra_state_shared_building_slots = 2
			}
			504 = { # Some development possibilies for Sudfolc
				add_extra_state_shared_building_slots = 1
			}
			503 = { # Some development possibilies for Alba Torre
				add_extra_state_shared_building_slots = 2
			}
			374 = { # Some development possibilies for Taloncana
				add_extra_state_shared_building_slots = 1
			}
			534 = { # Some development possibilies for Asbolus
				add_extra_state_shared_building_slots = 2
			}
		}
	}
	
	BRZ_dog_communities_in_the_nothern_mountains = {
		icon = generic_construction
		cost = 100
		
		visible = {
			has_completed_focus = BRZ_pan_griffonian_development_initiative
		}
		
		available = {
			controls_state = 475 # Arrowpeak
			controls_state = 477 # Whitebeared
			controls_state = 476 # Silkhorn
			controls_state = 459 # Dimpeak
			num_of_civilian_factories_available_for_projects > 5
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 6
		}

		days_remove = 70

		ai_will_do = {
			factor = 20
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_opportunies_in_lushi"
			
			475 = { # Some development possibilies for Arrowpeak
				add_extra_state_shared_building_slots = 2
				add_manpower = 100000
			}
			477 = { # Some development possibilies for Whitebeared
				add_extra_state_shared_building_slots = 2
				add_manpower = 100000
			}
			476 = { # Some development possibilies for Silkhorn
				add_extra_state_shared_building_slots = 2
				add_manpower = 75000
			}
			459 = { # Some development possibilies for Dimpeak
				add_extra_state_shared_building_slots = 2
				add_manpower = 100000
			}
		}
	}
}

foreign_politics = {
	BRZ_alliance = {
		icon = griffon
		cost = 50
		fire_only_once = yes
		ai_will_do = {
			factor = 160
		}
		allowed = {
			original_tag = BRZ
		}
		visible = {
			is_subject = no
			NOT = {
				has_guaranteed = FROM
				is_guaranteed_by = FROM
				has_country_flag = herzland_diplomacy_blocked
			}
			FROM = {
				exists = yes
				is_subject = no
				NOT = {
					has_country_flag = herzland_diplomacy_blocked
				}
			}
		}
		available = {
			FROM = {
				has_war = no
			}
			custom_trigger_tooltip = {
				tooltip = diplomacy_limited_tooltip
				OR = {
					hidden_trigger = {
						has_government = communism
						NOT = {
							has_country_flag = BRZ_revenge_tree_loaded
						}
						FROM = {
							has_government = communism
							NOT = {
								has_country_flag = herzland_diplomacy_blocked
							}
						}
					}
					hidden_trigger = {
						has_government = neutrality
						NOT = {
							has_country_flag = BRZ_revenge_tree_loaded
						}
						FROM = {
							OR = {
								has_government = neutrality
								has_government = democratic
							}
							NOT = {
								has_country_flag = have_regular_puppets
								has_country_flag = herzland_diplomacy_blocked
							}
						}
					}
					hidden_trigger = {
						has_government = fascism
						NOT = {
							has_country_flag = BRZ_revenge_tree_loaded
						}
						FROM = {
							has_government = fascism
							NOT = {
								has_country_flag = have_regular_puppets
								has_country_flag = herzland_diplomacy_blocked
							}
						}
					}
					hidden_trigger = {
						has_country_flag = BRZ_revenge_tree_loaded
						FROM = {
							NOT = {
								has_country_flag = have_regular_puppets
								has_country_flag = herzland_diplomacy_blocked
							}
						}
					}
				}
			}
			has_war = no
		}
		targets = { ANG PYT KAT FEA YAL ROU STW }
		target_trigger = {
			FROM = {
				OR = {
					original_tag = ANG
					original_tag = PYT
					original_tag = KAT
					original_tag = FEA
					original_tag = YAL
					original_tag = ROU
					original_tag = STW
				}
			}
		}
		target_root_trigger = {
			is_subject = no
			NOT = {
				has_guaranteed = FROM
				is_guaranteed_by = FROM
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BRZ_alliance target: [From.GetName]"
			FROM = {
				country_event = griffonian.10
			}
		}
	}
	
	BRZ_attack_the_empire_if_gabriela_doesnt_do_it = {
		icon = GFX_decision_generic_prepare_civil_war
		
		allowed = {
			original_tag = BRZ
		}
		
		visible = {
			has_completed_focus = BRZ_in_defence_of_tradition
			is_subject = no
			NOT = { has_war_with = GRI }
			NOT = { owns_state = 382 } # Griffenheim
		}
		
		available = {
			date > 1010.07.01
			
			custom_trigger_tooltip = {
				tooltip = BRZ_has_no_pacifism_active_tt
				NOT = {
					OR = {
						has_idea = BRZ_pacifism1
						has_idea = BRZ_pacifism2
						has_idea = BRZ_pacifism3
						has_idea = BRZ_pacifism4
					}
				}
			}
		}
		
		ai_will_do = {
			factor = 1
			
			modifier = {
				date < 1011.01.01
				factor = 0
			}
		}
		
		fire_only_once = yes
		
		cost = 50
		days_remove = 30
		
		war_with_on_remove = GR1 # Griffenheim owner tag alias
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_attack_the_empire_if_gabriela_doesnt_do_it"
		
			add_state_claim = 382 # Griffenheim
			add_state_claim = 405
			add_state_claim = 397
			add_state_claim = 437 # Crona
			add_state_claim = 555
			
			# Give wargoals
			create_wargoal = {
				type = take_state_focus
				target = 382.owner
				generator = { 382 }
			}
			#Don't give wargoal on same country twice
			if = {
				limit = {
					NOT = { 
						437 = { # Crona (connection to Griffenheim)
							owner = { 
								owns_state = 382 # Griffenheim
								NOT = { tag = ROOT } 
							} 
						} 
					}
				}
				create_wargoal = {
					type = take_state_focus
					target = 437.owner
					generator = { 437 }
				}
			}
		
			declare_war_on = {
				target = 382.owner
				type = annex_everything
			}
		}
	}
	
	BRZ_retake_our_claims = {
		icon = GFX_decision_infiltrate_state
		
		allowed = {
			original_tag = BRZ
		}
		
		target_root_trigger = {
			has_country_flag = BRZ_has_declared_the_empire
			is_subject = no
		}
		
		target_trigger = {
			FROM = {
				any_owned_state = {
					is_claimed_by = ROOT
				}
			}
			FROM = {
				NOT = { is_subject_of = ROOT }
			}
			NOT = {
				ROOT = {
					OR = {
						has_wargoal_against = FROM
						has_war_with = FROM
					}
				}
			}
		}
		
		ai_will_do = {
			base = 0
		}
		
		days_remove = 30
		
		war_with_target_on_remove = yes
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_retake_our_claims"
			
			hidden_effect = {
				create_wargoal = {
					target = FROM
					type = annex_everything
				}
			}
			
			declare_war_on = {
				target = FROM
				type = annex_everything
			}
		}
	}
}

political_actions = {
	BRZ_move_back_our_government = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		fire_only_once = yes
		
		ai_will_do = { factor = 200 }
		
		visible = { has_completed_focus = BRZ_the_mountain_retreat }
		
		available = { has_war = no }
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BZR_move_back_our_government"
			
			# Part of the stab back (focus costs 15)
			add_stability = 0.1
			
			# Back to the starting pos
			539 = { # Crownspike
				set_victory_points = { # Kaza-Gull
					province = 1254
					value = 5
				}
			}
			424 = { # Raven Lakes
				set_victory_points = { # Ravensburg
					province = 10042
					value = 15
				}
				set_victory_points = { # Hundsfeld
					province = 1138
					value = 5
				}
			}
		}
	}
	
	BRZ_invite_griffon_scientists = {
		icon = GFX_decision_generic_research
		
		allowed = { tag = BRZ }
		
		ai_will_do = { factor = 200 }
		
		cost = 40
		
		visible = {
			NOT = { has_idea = proper_science_base }
			has_completed_focus = BRZ_invite_yale_professors
			OR = {
				is_subject_of = GRI
				is_subject_of = STW
				is_subject_of = FEA
			}
		}
		
		days_remove = 75
		
		modifier = {
			political_power_factor = -0.1
			consumer_goods_factor = 0.2
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_invite_griffon_scientists"
			
			custom_effect_tooltip = increase_science_base_tt
			increase_science_base = yes
		}
	}
	
	BRZ_incorporate_griffon_scientists = {
		icon = GFX_decision_generic_research
		
		allowed = { tag = BRZ }
		
		ai_will_do = { factor = 200 }
		
		cost = 40
		
		visible = {
			NOT = { has_idea = proper_science_base }
			owns_state = 382 # Griffenheim
			has_country_flag = BRZ_has_declared_the_empire
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_incorporate_griffon_scientists"
			
			custom_effect_tooltip = increase_science_base_tt
			increase_science_base = yes
		}
	}
	
	BRZ_integrate_the_lost_colony = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		ai_will_do = { factor = 200 }
		
		fire_only_once = yes
		
		cost = 100
		
		visible = {
			owns_state = 243
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_integrate_the_lost_colony"
			
			GRF = { add_to_ROOT_potential_cores = yes } # Griffon Colony
			GFF = { add_to_ROOT_potential_cores = yes } # Griffon Frontier
		}
	}
	
	BRZ_decision_show_history_decisions = {
		icon = GFX_decision_generic
		
		allowed = { original_tag = BRZ }
		
		visible = { has_country_flag = BRZ_hide_histroy_decisions }
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_decision_show_history_decisions"
			
			clr_country_flag = BRZ_hide_histroy_decisions
		}
	}
	
	BRZ_decision_hide_history_decisions = {
		icon = GFX_decision_generic
		
		allowed = { original_tag = BRZ }
		
		visible = { 
			NOT = { has_country_flag = BRZ_hide_histroy_decisions } 
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_decision_hide_history_decisions"
			
			set_country_flag = BRZ_hide_histroy_decisions
		}
	}
}

BRZ_bronzehill_council_cat = {
	BRZ_council_timeout_mission = {
		icon = GFX_decision_generic
		
		allowed = { always = no }
		
		priority = 100 # First in this category
		
		selectable_mission = no # As soon as the council is ready, fire
		
		available = {
			if = {
				limit = {
					has_country_flag = BRZ_softfur_in_the_council
				}
				custom_trigger_tooltip = {
					tooltip = BRZ_powerstruggle_faction_successful
					OR = {
						check_variable = { BRZ_council_powerstruggle_influence_copperhill > 99 }
						check_variable = { BRZ_council_powerstruggle_influence_loudbark > 99 }
						check_variable = { BRZ_council_powerstruggle_influence_softfur > 99 }
						check_variable = { BRZ_council_powerstruggle_radicalization > 49 }
					}
				}
			} else = {
				custom_trigger_tooltip = {
					tooltip = BRZ_powerstruggle_faction_successful_no_soft
					OR = {
						check_variable = { BRZ_council_powerstruggle_influence_copperhill > 99 }
						check_variable = { BRZ_council_powerstruggle_influence_loudbark > 99 }
						check_variable = { BRZ_council_powerstruggle_influence_softfur > 99 }
						check_variable = { BRZ_council_powerstruggle_radicalization > 49 }
					}
				}
			}
		}
		
		days_mission_timeout = 200
		# Balancing remark: The player should be able to reach 100 influence for the preferred faction in ~180 days. Any sooner will break the balance
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Complete BRZ_council_timeout_mission"
			
			if = {
				limit = {
					check_variable = { BRZ_council_powerstruggle_radicalization > 49 }
				}
				country_event = bronzehill_council.3 # Barking-Sun's coup
			} else = {
				country_event = bronzehill_council.2 # Outcome
			}
			if = {
				limit = {
					has_idea = BRZ_powerstruggle_in_the_council
				}
				remove_ideas = BRZ_powerstruggle_in_the_council
			}
			
			if = {
				limit = {
					NOT = { has_country_flag = BRZ_softfur_in_the_council }
				}
				set_temp_variable = { radicalization_stab_hit = BRZ_council_powerstruggle_radicalization }
				divide_temp_variable = { radicalization_stab_hit = 100 }
				multiply_temp_variable = { radicalization_stab_hit = -0.4 } # Max stab hit is 20% at 50 radicalization
				add_stability = radicalization_stab_hit
			}
		}
		
		timeout_effect = { 
			log = "[GetDateText]: [Root.GetName]: Timeout BRZ_council_timeout_mission"
			country_event = bronzehill_council.2 # Outcome
			if = {
				limit = {
					has_idea = BRZ_powerstruggle_in_the_council
				}
				remove_ideas = BRZ_powerstruggle_in_the_council
			}
			
			if = {
				limit = {
					NOT = { has_country_flag = BRZ_softfur_in_the_council }
				}
				set_temp_variable = { radicalization_stab_hit = BRZ_council_powerstruggle_radicalization }
				divide_temp_variable = { radicalization_stab_hit = 100 }
				multiply_temp_variable = { radicalization_stab_hit = -0.4 } # Max stab hit is 20% at 50 radicalization
				add_stability = radicalization_stab_hit
			}
			
			# Failed, ends with the strongest faction but no majority (Barking-Sun can't take over this way)
			# Small penalty for immersion
			add_stability = -0.1
		}
	}
	
	BRZ_copperhill_influence_mission = {
		icon = GFX_decision_generic
		
		allowed = { always = no }
		
		priority = 50
		
		available = {
			always = no
		}
		
		days_mission_timeout = 30
		
		timeout_effect = { 
			log = "[GetDateText]: [Root.GetName]: Timeout BRZ_copperhill_influence_mission"
			
			activate_mission = BRZ_copperhill_influence_mission
			
			add_to_variable = {
				var = BRZ_council_powerstruggle_influence_copperhill
				value = 5
				tooltip = BRZ_copperhill_influence_rise_5
			}
			
			# reduce loudbark
			if = {
				limit = {
					check_variable = {
						BRZ_council_powerstruggle_influence_loudbark > 70
					}
				}
				subtract_from_variable = {
					var = BRZ_council_powerstruggle_influence_loudbark
					value = 3
					tooltip = BRZ_loudbark_influence_shrink_3
				}
			} else_if = {
				limit = {
					check_variable = {
						BRZ_council_powerstruggle_influence_loudbark > 25
					}
				}
				subtract_from_variable = {
					var = BRZ_council_powerstruggle_influence_loudbark
					value = 2
					tooltip = BRZ_loudbark_influence_shrink_2
				}
			} else_if = {
				limit = {
					check_variable = {
						BRZ_council_powerstruggle_influence_loudbark > 10
					}
				}
				subtract_from_variable = {
					var = BRZ_council_powerstruggle_influence_loudbark
					value = 1
					tooltip = BRZ_loudbark_influence_shrink_1
				}
			}
		}
	}
	
	BRZ_loudbark_influence_mission = {
		icon = GFX_decision_generic
		
		allowed = { always = no }
		
		priority = 45
		
		available = {
			always = no
		}
		
		days_mission_timeout = 30
		
		timeout_effect = { 
			log = "[GetDateText]: [Root.GetName]: Timeout BRZ_loudbark_influence_mission"
			
			activate_mission = BRZ_loudbark_influence_mission
			
			add_to_variable = {
				var = BRZ_council_powerstruggle_influence_loudbark
				value = 5
				tooltip = BRZ_loudbark_influence_rise_5
			}
			
			if = {
				limit = {
					has_country_flag = BRZ_softfur_in_the_council
				}
				# reduce softfur
				if = {
					limit = {
						check_variable = {
							BRZ_council_powerstruggle_influence_softfur > 70
						}
					}
					subtract_from_variable = {
						var = BRZ_council_powerstruggle_influence_softfur
						value = 3
						tooltip = BRZ_softfur_influence_shrink_3
					}
				} else_if = {
					limit = {
						check_variable = {
							BRZ_council_powerstruggle_influence_softfur > 25
						}
					}
					subtract_from_variable = {
						var = BRZ_council_powerstruggle_influence_softfur
						value = 2
						tooltip = BRZ_softfur_influence_shrink_2
					}
				} else_if = {
					limit = {
						check_variable = {
							BRZ_council_powerstruggle_influence_softfur > 10
						}
					}
					subtract_from_variable = {
						var = BRZ_council_powerstruggle_influence_softfur
						value = 1
						tooltip = BRZ_softfur_influence_shrink_1
					}
				}
			} else = {
				# if softfur unavailable, reduce copperhill
				if = {
					limit = {
						check_variable = {
							BRZ_council_powerstruggle_influence_copperhill > 70
						}
					}
					subtract_from_variable = {
						var = BRZ_council_powerstruggle_influence_copperhill
						value = 3
						tooltip = BRZ_copperhill_influence_shrink_3
					}
				} else_if = {
					limit = {
						check_variable = {
							BRZ_council_powerstruggle_influence_copperhill > 25
						}
					}
					subtract_from_variable = {
						var = BRZ_council_powerstruggle_influence_copperhill
						value = 2
						tooltip = BRZ_copperhill_influence_shrink_2
					}
				} else_if = {
					limit = {
						check_variable = {
							BRZ_council_powerstruggle_influence_copperhill > 10
						}
					}
					subtract_from_variable = {
						var = BRZ_council_powerstruggle_influence_copperhill
						value = 1
						tooltip = BRZ_copperhill_influence_shrink_1
					}
				}
			}
		}
	}
	
	BRZ_softfur_influence_mission = {
		icon = GFX_decision_generic
		
		allowed = { always = no }
		
		priority = 40
		
		available = {
			always = no
		}
		
		days_mission_timeout = 30
		
		timeout_effect = { 
			log = "[GetDateText]: [Root.GetName]: Timeout BRZ_softfur_influence_mission"
			
			activate_mission = BRZ_softfur_influence_mission
			
			add_to_variable = {
				var = BRZ_council_powerstruggle_influence_softfur
				value = 6
				tooltip = BRZ_softfur_influence_rise_6
			}
			
			# reduces Copperhill
			if = {
				limit = {
					check_variable = {
						BRZ_council_powerstruggle_influence_copperhill > 70
					}
				}
				subtract_from_variable = {
					var = BRZ_council_powerstruggle_influence_copperhill
					value = 3
					tooltip = BRZ_copperhill_influence_shrink_3
				}
			} else_if = {
				limit = {
					check_variable = {
						BRZ_council_powerstruggle_influence_copperhill > 25
					}
				}
				subtract_from_variable = {
					var = BRZ_council_powerstruggle_influence_copperhill
					value = 2
					tooltip = BRZ_copperhill_influence_shrink_2
				}
			} else_if = {
				limit = {
					check_variable = {
						BRZ_council_powerstruggle_influence_copperhill > 10
					}
				}
				subtract_from_variable = {
					var = BRZ_council_powerstruggle_influence_copperhill
					value = 1
					tooltip = BRZ_copperhill_influence_shrink_1
				}
			}
		}
	}
	
	BRZ_steelpaw_influence_mission = {
		icon = GFX_decision_generic
		
		allowed = { always = no }
		
		priority = 35
		
		available = {
			always = no
		}
		
		days_mission_timeout = 30
		
		timeout_effect = { 
			log = "[GetDateText]: [Root.GetName]: Timeout BRZ_steelpaw_influence_mission"
			
			activate_mission = BRZ_steelpaw_influence_mission
			
			add_to_variable = {
				var = BRZ_council_powerstruggle_radicalization
				value = 5
				tooltip = BRZ_radicalization_rise_5
			}
			
			add_stability = -0.02
		}
	}
	
	BRZ_rally_for_peace_and_harmony = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { has_idea = BRZ_powerstruggle_in_the_council }
		
		available = {
		}
		
		days_remove = 25
		
		ai_will_do = {
			base = 0 # Not naturally - naturally we rely only on the events
			modifier = { # If gamerule, then let's go
				OR = {
					has_game_rule = {
						rule = BRZ_ai_behavior 
						option = HARMONY_BARNABY
					}
					has_country_flag = BRZ_AI_RANDOM_HARMONY_BARNABY
				}
				add = 100
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_rally_for_peace_and_harmony"
			
			add_to_variable = {
				var = BRZ_council_powerstruggle_influence_copperhill
				value = 5
				tooltip = BRZ_copperhill_influence_rise_5
			}
			
			add_popularity = {
				ideology = democratic
				popularity = 0.02
			}
		}
	}
	
	BRZ_contacts_in_the_army = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { has_idea = BRZ_powerstruggle_in_the_council }
		
		available = {
		}
		
		days_remove = 25
		
		ai_will_do = {
			base = 0 # Not naturally - naturally we rely only on the events
			modifier = { # If gamerule, then let's go
				OR = {
					has_game_rule = {
						rule = BRZ_ai_behavior 
						option = FASCISM_LOUDBARK
					}
					has_country_flag = BRZ_AI_RANDOM_FASCIST_LOUDBARK
				}
				add = 100
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_contacts_in_the_army"
			
			add_to_variable = {
				var = BRZ_council_powerstruggle_influence_loudbark
				value = 5
				tooltip = BRZ_loudbark_influence_rise_5
			}
			
			add_popularity = {
				ideology = fascism
				popularity = 0.02
			}
		}
	}
	
	BRZ_workers_march = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_idea = BRZ_powerstruggle_in_the_council 
			has_country_flag = BRZ_softfur_in_the_council
		}
		
		available = {
		}
		
		days_remove = 25
		
		ai_will_do = {
			base = 0 # Not naturally - naturally we rely only on the events
			modifier = { # If gamerule, then let's go
				OR = {
					has_game_rule = {
						rule = BRZ_ai_behavior 
						option = COMMUNIST_SOFTFUR
					}
					has_country_flag = BRZ_AI_RANDOM_COMMUNIST_SOFTFUR
				}
				add = 100
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_workers_march"
			
			add_to_variable = {
				var = BRZ_council_powerstruggle_influence_softfur
				value = 7
				tooltip = BRZ_softfur_influence_rise_7
			}
			
			add_popularity = {
				ideology = communism
				popularity = 0.02
			}
		}
	}
	
	BRZ_payraise_for_workers = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_idea = BRZ_powerstruggle_in_the_council 
			NOT = { has_country_flag = BRZ_softfur_in_the_council }
		}
		
		available = {
		}
		
		days_remove = 25
		
		ai_will_do = {
			base = 10
			modifier = {
				OR = {
					has_game_rule = {
						rule = BRZ_ai_behavior 
						option = COMMUNIST_STEELPAW
					}
					has_country_flag = BRZ_AI_RANDOM_COMMUNIST_STEELPAW
				}
				factor = 0
			}
			modifier = {
				check_variable = {
					BRZ_council_powerstruggle_radicalization > 40
				}
				factor = 10 # Total 100
			}
		}
		
		complete_effect = {
			add_ideas = BRZ_workers_payraise
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_payraise_for_workers"
			
			remove_ideas = BRZ_workers_payraise
			
			subtract_from_variable = {
				var = BRZ_council_powerstruggle_radicalization
				value = 5
				tooltip = BRZ_radicalization_shrink_5
			}
			
			add_stability = 0.02
		}
	}
}

BRZ_recruit_griffon_generals = {
	BRZ_recruit_elias_bronzetail = {
		icon = GFX_decision_griffon
		
		allowed = { tag = BRZ }
		
		priority = 25
		
		visible = { 
			has_completed_focus = BRZ_the_new_reichsarmee
			GRI = {
				has_character = GRI_elias_bronzetail
			}
		}
		
		available = {
			GRI = { exists = no }
		}
		
		cost = 75
		
		available = {
		}
		
		ai_will_do = {
			base = 10
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Complete BRZ_recruite_elias_bronzehill"
			
			every_possible_country = {
				limit = {
					has_character = GRI_elias_bronzetail
				}
				GRI_elias_bronzetail = {
					set_nationality = ROOT
				}
			}
		}
	}
	
	BRZ_recruit_oskar_silverfeather = {
		icon = GFX_decision_griffon
		
		allowed = { tag = BRZ }
		
		priority = 25
		
		visible = { 
			has_completed_focus = BRZ_the_new_reichsarmee
			GRI = {
				has_character = GRI_oskar_silverfeather
			}
		}
		
		available = {
			GRI = { exists = no }
		}
		
		cost = 50
		
		available = {
		}
		
		ai_will_do = {
			base = 10
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Complete BRZ_recruite_oskar_silverfeather"
			
			every_possible_country = {
				limit = {
					has_character = GRI_oskar_silverfeather
				}
				GRI_oskar_silverfeather = {
					set_nationality = ROOT
				}
			}
		}
	}
	
	BRZ_recruit_helga_weisskopf = {
		icon = GFX_decision_griffon
		
		allowed = { tag = BRZ }
		
		priority = 25
		
		visible = { 
			has_completed_focus = BRZ_the_new_reichsarmee
			GRI = {
				has_character = GRI_helga_weisskopf
			}
		}
		
		available = {
			GRI = { exists = no }
		}
		
		cost = 50
		
		available = {
		}
		
		ai_will_do = {
			base = 10
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Complete BRZ_recruite_helga_weisskopf"
			
			every_possible_country = {
				limit = {
					has_character = GRI_helga_weisskopf
				}
				GRI_helga_weisskopf = {
					set_nationality = ROOT
				}
			}
		}
	}
	
	BRZ_recruit_fritz_helltalon = {
		icon = GFX_decision_griffon
		
		allowed = { tag = BRZ }
		
		priority = 25
		
		visible = { 
			has_completed_focus = BRZ_the_new_reichsarmee
			STW = {
				has_character = STW_fritz_helltalon
			}
		}
		
		available = {
			STW = { exists = no }
		}
		
		cost = 50
		
		available = {
		}
		
		ai_will_do = {
			base = 10
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Complete BRZ_recruite_fritz_helltalon"
			
			every_possible_country = {
				limit = {
					has_character = STW_fritz_helltalon
				}
				STW_fritz_helltalon = {
					set_nationality = ROOT
				}
			}
		}
	}
	
	BRZ_recruit_august_goldplume = {
		icon = GFX_decision_griffon
		
		allowed = { tag = BRZ }
		
		priority = 25
		
		visible = { 
			has_completed_focus = BRZ_the_new_reichsarmee
			STW = {
				has_character = STW_august_goldplume
			}
		}
		
		available = {
			STW = { exists = no }
		}
		
		cost = 50
		
		available = {
		}
		
		ai_will_do = {
			base = 10
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Complete BRZ_recruite_august_goldplume"
			
			every_possible_country = {
				limit = {
					has_character = STW_august_goldplume
				}
				STW_august_goldplume = {
					set_nationality = ROOT
				}
			}
		}
	}
	
	BRZ_recruit_apfel_von_kuchen = {
		icon = GFX_decision_griffon
		
		allowed = { tag = BRZ }
		
		priority = 25
		
		visible = { 
			has_completed_focus = BRZ_the_new_reichsarmee
			YAL = {
				has_character = YAL_apfel_von_kuchen
			}
			NOT = {
				has_country_leader = { 
					character = BRZ_barker_steelpaw 
					ruling_only = yes
				}
			}
			NOT = {
				has_country_flag = BRZ_steelpaw_legacy # Postcoronation
			}
		}
		
		available = {
			YAL = { exists = no }
		}
		
		cost = 50
		
		available = {
		}
		
		ai_will_do = {
			base = 10
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Complete BRZ_recruite_apfel_von_kuchen"
			
			every_possible_country = {
				limit = {
					has_character = YAL_apfel_von_kuchen
				}
				YAL_apfel_von_kuchen = {
					set_nationality = ROOT
				}
			}
		}
	}
}

BRZ_ignatius_noble_virtue = {
	BRZ_noble_virtue_merry_go_round = {
		icon = GFX_decision_generic
		
		allowed = { always = no }
		
		available = { always = no }
		
		priority = 100 # First in this category
		
		selectable_mission = no # Only cancels automatically
		
		days_mission_timeout = 180
		
		timeout_effect = { 
			log = "[GetDateText]: [Root.GetName]: Timeout BRZ_noble_virtue_merry_go_round"
			
			custom_effect_tooltip = BRZ_noble_virtue_invest_tt
			
			country_event = bronzehill_ignatius.4 # Gotta invest
			
			activate_mission = BRZ_noble_virtue_merry_go_round
		}
	}
	
	BRZ_seek_understanding_with_gabriela = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_noble_virtue_active
			NOT = { has_country_flag = gabriela_peacefully_submitted }
		}

		fire_only_once = yes
		
		cost = 75
		
		days_remove = 50
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_seek_understanding_with_gabriela"
			
			country_event = bronzehill_loyalist.19
		}
	}
	
	BRZ_remind_nobles_of_their_duties = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_noble_virtue_active
			has_completed_focus = BRZ_nobless_oblige
		}
		
		cost = 15
		
		days_remove = 30
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_remind_nobles_of_their_duties"
			
			set_country_flag = BRZ_half_the_noble_virtue_effect
			custom_effect_tooltip = BRZ_half_noble_virtue_output_tt
			 
			country_event = bronzehill_ignatius.4
		}
	}
	
	BRZ_rally_the_nobility = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_noble_virtue_active
			has_completed_focus = BRZ_nobless_oblige
			NOT = { has_idea = BRZ_nobility_rallied }
		}
		
		# Custom cost: 5 noble virtue
		custom_cost_trigger = {
			check_variable = { 
				var = noble_virtue
				value = 5
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_5_noble_virtue
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { noble_virtue = 5 }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_rally_the_nobility"
			
			add_timed_idea = {
				idea = BRZ_nobility_rallied
				days = 120
			}
			custom_effect_tooltip = BRZ_reenable_120_days_tt
		}
	}
	
	BRZ_tour_the_country_side = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_noble_virtue_active
			has_completed_focus = BRZ_vision_for_the_country_side
			NOT = { has_country_flag = BRZ_tour_the_country_side_taken }
		}
		
		# Custom cost: 5 noble virtue
		custom_cost_trigger = {
			check_variable = { 
				var = noble_virtue
				value = 5
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_5_noble_virtue
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { noble_virtue = 5 }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_tour_the_country_side"
			
			every_owned_state = {
				limit = {
					NOT = { is_core_of = ROOT }
				}
				add_compliance = 3
			}
			
			custom_effect_tooltip = BRZ_reenable_120_days_tt
			set_country_flag = {
				flag = BRZ_tour_the_country_side_taken
				days = 120
				value = 1
			}
		}
	}
	
	BRZ_honour_laudable_aristocrats = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_noble_virtue_active
			has_completed_focus = BRZ_the_responsibility_of_lairds
			NOT = { has_idea = BRZ_honoured_laudable_aristocrats }
		}
		
		# Custom cost: 5 noble virtue
		custom_cost_trigger = {
			check_variable = { 
				var = noble_virtue
				value = 5
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_5_noble_virtue
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { noble_virtue = 5 }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_honour_laudable_aristocrats"
			
			add_timed_idea = {
				idea = BRZ_honoured_laudable_aristocrats
				days = 120
			}
			custom_effect_tooltip = BRZ_reenable_120_days_tt
		}
	}
	
	BRZ_recruite_promising_commanders = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_noble_virtue_active
			has_completed_focus = BRZ_kaiserlicher_adelsbrief
			NOT = { has_idea = BRZ_recruite_promising_commanders_idea }
		}
		
		# Custom cost: 5 noble virtue
		custom_cost_trigger = {
			check_variable = { 
				var = noble_virtue
				value = 5
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_5_noble_virtue
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { noble_virtue = 5 }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_recruite_promising_commanders"
			
			add_timed_idea = {
				idea = BRZ_recruite_promising_commanders_idea
				days = 120
			}
			custom_effect_tooltip = BRZ_reenable_120_days_tt
			
		}
	}
	
	BRZ_urban_philantropy = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_noble_virtue_active
			has_completed_focus = BRZ_das_patriziat
		}
		
		days_re_enable = 120
		
		# Custom cost: 5 noble virtue
		custom_cost_trigger = {
			check_variable = { 
				var = noble_virtue
				value = 5
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_5_noble_virtue
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { noble_virtue = 5 }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_urban_philantropy"
						
			one_random_industrial_complex = yes
			
			custom_effect_tooltip = BRZ_reenable_120_days_tt
		}
	}
	
	BRZ_support_from_the_knights = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_noble_virtue_active
			OR = {
				has_idea = BRZ_temple_reform_lvl_2
				has_idea = BRZ_temple_reform_lvl_3
			}
		}
		
		days_re_enable = 120
		
		# Custom cost: 5 noble virtue
		custom_cost_trigger = {
			check_variable = { 
				var = noble_virtue
				value = 5
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_5_noble_virtue
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { noble_virtue = 5 }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_support_from_the_knights"
			
			add_manpower = 25000
			
			custom_effect_tooltip = BRZ_reenable_120_days_tt
		}
	}
	
	BRZ_preach_modesty = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_noble_virtue_active
			has_idea = BRZ_temple_reform_lvl_3
			NOT = { has_idea = BRZ_virtue_of_modesty }
		}
		
		# Custom cost: 5 noble virtue
		custom_cost_trigger = {
			check_variable = { 
				var = noble_virtue
				value = 5
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_5_noble_virtue
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { noble_virtue = 5 }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_preach_modesty"
			
			add_timed_idea = {
				idea = BRZ_virtue_of_modesty
				days = 120
			}
			
			custom_effect_tooltip = BRZ_reenable_120_days_tt
		}
	}
	
	BRZ_celebrate_local_traditions = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_noble_virtue_active
			has_completed_focus = BRZ_the_volksfest_tradition
			NOT = { has_idea = BRZ_feasts_of_fertility }
		}
		
		# Custom cost: 5 noble virtue
		custom_cost_trigger = {
			check_variable = { 
				var = noble_virtue
				value = 5
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_5_noble_virtue
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { noble_virtue = 5 }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_celebrate_local_traditions"
			
			add_timed_idea = {
				idea = BRZ_feasts_of_fertility
				days = 120
			}
			
			custom_effect_tooltip = BRZ_reenable_120_days_tt
		}
	}
}

BRZ_ignatius_temple_reform = {
	BRZ_temple_reform_timer = {
		icon = GFX_decision_knight_helm
		
		allowed = { always = no }
		
		priority = 100 # First in this category
		
		selectable_mission = no # Only cancels automatically
		
		available = {
			custom_trigger_tooltip = {
				tooltip = BRZ_100_temple_reform_points_tt
				check_variable = { 
					var = BRZ_ignatius_temple_reform_points 
					value = 100
					compare = greater_than_or_equals
				}
			}
		}
		
		days_mission_timeout = 150
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Complete BRZ_temple_reform_timer"
			
			clr_country_flag = BRZ_temple_reform_active
			
			add_ideas = BRZ_temple_reform_lvl_3
			
			unlock_decision_tooltip = BRZ_preach_modesty
			unlock_decision_tooltip = BRZ_support_from_the_knights
			
			country_event = bronzehill_ignatius.12 # Big Win and Autocomplete
		}
		
		timeout_effect = { 
			log = "[GetDateText]: [Root.GetName]: Timeout BRZ_temple_reform_timer"
			
			clr_country_flag = BRZ_temple_reform_active
			
			if = {
				limit = {
					check_variable = { BRZ_ignatius_temple_reform_points < 20 }
				}
				add_political_power = -100
				add_stability = -0.1
				country_event = bronzehill_ignatius.9 # Big Fail
			}
			else_if = {
				limit = {
					check_variable = { BRZ_ignatius_temple_reform_points < 40 }
				}
				
				add_ideas = BRZ_temple_reform_lvl_1
				
				country_event = bronzehill_ignatius.10 # Small Fail
			}
			else_if = {
				limit = {
					check_variable = { BRZ_ignatius_temple_reform_points < 100 }
				}
				
				add_ideas = BRZ_temple_reform_lvl_2
				
				unlock_decision_tooltip = BRZ_preach_modesty
				
				country_event = bronzehill_ignatius.11 # Small Win
			}
			else = {
				add_ideas = BRZ_temple_reform_lvl_3
				
				unlock_decision_tooltip = BRZ_preach_modesty
				unlock_decision_tooltip = BRZ_support_from_the_knights
				
				country_event = bronzehill_ignatius.12 # Big Win
			}
		}
	}
	
	BRZ_pressure_the_archon_of_boreas = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_temple_reform_active
			has_completed_focus = BRZ_the_archonate_of_boreas
			NOT = { 
				has_country_flag = {
					flag = BRZ_pressure_the_archon_of_boreas_counter
					value > 1
				}
			}
		}
		
		cost = 25
		
		days_remove = 40
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_pressure_the_archon_of_boreas"
			
			add_to_variable = {
				var = BRZ_ignatius_temple_reform_points
				value = 5
				tooltip = BRZ_add_5_temple_reform
			}
			
			hidden_effect = { # Decision can be taken twice
				if = {
					limit = {
						NOT = { has_country_flag = BRZ_pressure_the_archon_of_boreas_counter }
					}
					set_country_flag = BRZ_pressure_the_archon_of_boreas_counter
				}
				else = {
					modify_country_flag = {
						flag = BRZ_pressure_the_archon_of_boreas_counter
						value = 1
					}
				}
			}
		}
	}
	
	BRZ_subvert_the_archon_of_eyr = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_temple_reform_active
			has_completed_focus = BRZ_the_archonate_of_boreas
			NOT = { 
				has_country_flag = {
					flag = BRZ_subvert_the_archon_of_eyr_counter
					value > 1
				}
			}
		}
		
		days_remove = 40
		
		# Custom cost: 5 stability
		custom_cost_trigger = {
			has_stability > 0.05
		}
		custom_cost_text = BRZ_decision_cost_5_stab
		complete_effect = { # Costs
			hidden_effect = {
				add_stability = -0.05
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_pressure_the_archon_of_boreas"
			
			add_to_variable = {
				var = BRZ_ignatius_temple_reform_points
				value = 5
				tooltip = BRZ_add_5_temple_reform
			}
			
			hidden_effect = { # Decision can be taken twice
				if = {
					limit = {
						NOT = { has_country_flag = BRZ_subvert_the_archon_of_eyr_counter }
					}
					set_country_flag = BRZ_subvert_the_archon_of_eyr_counter
				}
				else = {
					modify_country_flag = {
						flag = BRZ_subvert_the_archon_of_eyr_counter
						value = 1
					}
				}
			}
		}
	}
	
	BRZ_sway_the_archon_of_arcturius = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_temple_reform_active
			has_completed_focus = BRZ_the_archonate_of_boreas
			NOT = { 
				has_country_flag = {
					flag = BRZ_sway_the_archon_of_arcturius_counter
					value > 1
				}
			}
		}
		
		days_remove = 40
		
		# Custom cost: 5 War Support
		custom_cost_trigger = {
			has_war_support > 0.05
		}
		custom_cost_text = BRZ_decision_cost_5_warsup
		complete_effect = { # Costs
			hidden_effect = {
				add_war_support = -0.05
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_pressure_the_archon_of_boreas"
			
			add_to_variable = {
				var = BRZ_ignatius_temple_reform_points
				value = 5
				tooltip = BRZ_add_5_temple_reform
			}
			
			hidden_effect = { # Decision can be taken twice
				if = {
					limit = {
						NOT = { has_country_flag = BRZ_sway_the_archon_of_arcturius_counter }
					}
					set_country_flag = BRZ_sway_the_archon_of_arcturius_counter
				}
				else = {
					modify_country_flag = {
						flag = BRZ_sway_the_archon_of_arcturius_counter
						value = 1
					}
				}
			}
		}
	}
	
	BRZ_bribe_priests = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_temple_reform_active
			has_completed_focus = BRZ_the_archonate_of_boreas
			NOT = { 
				has_country_flag = {
					flag = BRZ_bribe_priests_counter
					value > 1
				}
			}
		}
		
		days_remove = 40
		
		modifier = {
			consumer_goods_factor = 0.15
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_pressure_the_archon_of_boreas"
			
			add_to_variable = {
				var = BRZ_ignatius_temple_reform_points
				value = 5
				tooltip = BRZ_add_5_temple_reform
			}
			
			hidden_effect = { # Decision can be taken twice
				if = {
					limit = {
						NOT = { has_country_flag = BRZ_bribe_priests_counter }
					}
					set_country_flag = BRZ_bribe_priests_counter
				}
				else = {
					modify_country_flag = {
						flag = BRZ_bribe_priests_counter
						value = 1
					}
				}
			}
		}
	}
	
	BRZ_reassure_the_knights = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_temple_reform_active
			has_completed_focus = BRZ_the_role_of_the_temples
			NOT = { 
				has_country_flag = {
					flag = BRZ_reassure_the_knights_counter
					value > 1
				}
			}
		}
		
		days_remove = 30
		
		# Custom cost: 20 Command Power
		custom_cost_trigger = {
			command_power > 19
		}
		custom_cost_text = BRZ_decision_cost_20_compower
		complete_effect = { # Costs
			hidden_effect = {
				add_command_power = -20
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_pressure_the_archon_of_boreas"
			
			add_to_variable = {
				var = BRZ_ignatius_temple_reform_points
				value = 5
				tooltip = BRZ_add_5_temple_reform
			}
			
			hidden_effect = { # Decision can be taken twice
				if = {
					limit = {
						NOT = { has_country_flag = BRZ_reassure_the_knights_counter }
					}
					set_country_flag = BRZ_reassure_the_knights_counter
				}
				else = {
					modify_country_flag = {
						flag = BRZ_reassure_the_knights_counter
						value = 1
					}
				}
			}
		}
	}
	
	BRZ_convince_the_parishioners = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_temple_reform_active
			has_completed_focus = BRZ_the_role_of_the_temples
			NOT = { 
				has_country_flag = {
					flag = BRZ_convince_the_parishioners_counter
					value > 1
				}
			}
		}
		
		days_remove = 30
		
		cost = 50
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_convince_the_parishioners"
			
			add_to_variable = {
				var = BRZ_ignatius_temple_reform_points
				value = 10
				tooltip = BRZ_add_10_temple_reform
			}
			
			hidden_effect = { # Decision can be taken twice
				if = {
					limit = {
						NOT = { has_country_flag = BRZ_convince_the_parishioners_counter }
					}
					set_country_flag = BRZ_convince_the_parishioners_counter
				}
				else = {
					modify_country_flag = {
						flag = BRZ_convince_the_parishioners_counter
						value = 1
					}
				}
			}
		}
	}
	
	BRZ_utilize_the_nobles = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		priority = 20
		
		visible = { 
			has_country_flag = BRZ_temple_reform_active
			has_completed_focus = BRZ_the_role_of_the_temples
			NOT = { 
				has_country_flag = {
					flag = BRZ_utilize_the_nobles_counter
					value > 1
				}
			}
		}
		
		days_remove = 30
		
		# Custom cost: 5 Noble Virtue
		custom_cost_trigger = {
			check_variable = { 
				var = noble_virtue
				value = 5
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_5_noble_virtue
		complete_effect = { # Costs
			hidden_effect = {
				add_to_variable = {
					var = noble_virtue
					value = -5
				}
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_convince_the_parishioners"
						
			add_to_variable = {
				var = BRZ_ignatius_temple_reform_points
				value = 10
				tooltip = BRZ_add_10_temple_reform
			}
			
			hidden_effect = { # Decision can be taken twice
				if = {
					limit = {
						NOT = { has_country_flag = BRZ_utilize_the_nobles_counter }
					}
					set_country_flag = BRZ_utilize_the_nobles_counter
				}
				else = {
					modify_country_flag = {
						flag = BRZ_utilize_the_nobles_counter
						value = 1
					}
				}
			}
		}
	}
}

BRZ_barnaby_general_election = {
	BRZ_view_polls = {
		icon = GFX_decision_gre_paying_ifc_debt
		
		allowed = { tag = BRZ }
		
		visible = { 
			has_completed_focus = BRZ_build_the_party_system
		}
		
		priority = 35
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_view_polls"
			
			country_event = bronzehill_barnaby.7
		}
	}
	
	BRZ_campaign_season = {
		icon = GFX_decision_generic
		
		allowed = { always = no }
		
		selectable_mission = no
		
		available = { always = no }
		
		priority = 50
		
		days_mission_timeout = 100
		
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_campaign_season"
			
			country_event = bronzehill_barnaby.8
		}
	}
	
	BRZ_major_parties_background = {
		icon = GFX_decision_generic
		
		allowed = { original_tag = BRZ }
		
		visible = { 
			has_completed_focus = BRZ_build_the_party_system
		}
		
		priority = 20
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_major_parties_background"
			
			country_event = bronzehill_barnaby.37
		}
	}
	
	BRZ_minor_parties_background = {
		icon = GFX_decision_generic
		
		allowed = { original_tag = BRZ }
		
		visible = { 
			has_completed_focus = BRZ_build_the_party_system
		}
		
		priority = 20
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_minor_parties_background"
			
			country_event = bronzehill_barnaby.38
		}
	}
}

BRZ_barnaby_public_trust = {
	BRZ_the_liberal_demands = {
		icon = GFX_decision_scroll
		
		allowed = { always = no }
		
		selectable_mission = no
		
		available = { 
			if = {
				limit = {
					has_completed_focus = BRZ_the_socialist_mandate
				}
				has_completed_focus = BRZ_the_workplace_inclusion_act
			}
			else = {
				has_completed_focus = BRZ_the_discrimination_protection_act
			}
		}
		
		days_mission_timeout = 100
		is_good = no
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_the_liberal_demands"
			
			add_to_variable = {
				var = BRZ_barnaby_public_trust
				value = 15
				tooltip = BRZ_barnaby_public_trust_add_15
			}
		}
		
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_the_liberal_demands"
			
			add_to_variable = {
				var = BRZ_barnaby_public_trust
				value = -10
				tooltip = BRZ_barnaby_public_trust_remove_10
			}
		}
	}
	
	BRZ_bringing_the_change = {
		icon = GFX_decision_gre_paying_ifc_debt
		
		allowed = { always = no }
		
		selectable_mission = no
		
		available = {
			custom_trigger_tooltip = {
				tooltip = BRZ_barnaby_4_political_focuses
				check_variable = { BRZ_barnaby_political_focuses > 3 }
			}
		}
		
		days_mission_timeout = 350
		is_good = no
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_bringing_the_change"
			
			add_to_variable = {
				var = BRZ_barnaby_public_trust
				value = 10
				tooltip = BRZ_barnaby_public_trust_add_10
			}
		}
		
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_bringing_the_change"
			
			add_to_variable = {
				var = BRZ_barnaby_public_trust
				value = -10
				tooltip = BRZ_barnaby_public_trust_remove_10
			}
		}
	}
	
	BRZ_promote_constitutionalism = {
		icon = GFX_decision_SWI_swiss_democratic_tradition_campaign
		
		allowed = { original_tag = BRZ }
		
		cost = BRZ_promote_constitutionalism_cost
		
		days_remove = 30
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_promote_constitutionalism"
			
			custom_effect_tooltip = BRZ_lower_effetiveness_at_high_trust
			if = {
				limit = {
					check_variable = { BRZ_barnaby_public_trust < 25 }
				}
				add_to_variable = {
					var = BRZ_barnaby_public_trust
					value = 15
					tooltip = BRZ_barnaby_public_trust_add_15
				}
			}
			else_if = {
				limit = {
					check_variable = { BRZ_barnaby_public_trust < 50 }
				}
				add_to_variable = {
					var = BRZ_barnaby_public_trust
					value = 10
					tooltip = BRZ_barnaby_public_trust_add_10
				}
			}
			else = {
				add_to_variable = {
					var = BRZ_barnaby_public_trust
					value = 5
					tooltip = BRZ_barnaby_public_trust_add_5
				}
			}
			
			custom_effect_tooltip = BRZ_increase_promote_constitutionalism_cost
			add_to_variable = {
				var = BRZ_promote_constitutionalism_cost
				value = 25
			}
		}
	}
	
	BRZ_the_dawn_of_institutionalism = {
		icon = GFX_decision_SOV_place_hq
		
		allowed = { original_tag = BRZ }
		
		available = {
			OR = {
				has_completed_focus = BRZ_the_dreams_of_the_little_griff
				has_completed_focus = BRZ_for_faith_and_fatherland
			}
			has_completed_focus = BRZ_the_new_court
			
			custom_trigger_tooltip = {
				tooltip = BRZ_barnaby_public_trust_above_75
				check_variable = { BRZ_barnaby_public_trust > 74.99 }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_bringing_the_change"
			
			custom_effect_tooltip = BRZ_ends_public_trust
			
			add_stability = 0.1
			add_political_power = 100
			
			country_event = bronzehill_barnaby.36
			
			clr_country_flag = BRZ_barnaby_public_trust_active
			set_country_flag = BRZ_barnaby_public_trust_over
		}
	}
}

BRZ_steelpaw_paranoia = {
	BRZ_tighten_government_control = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		available = { 
			has_completed_focus = BRZ_laying_the_foundations
			custom_trigger_tooltip = {
				tooltip = BRZ_steelpaw_paranoia_30_trigger
				check_variable = { BRZ_steelpaw_paranoia_val > 30 }
			}
		}
		
		cost = 100
		
		days_remove = 150
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_strenghten_palace_guard"
			
			add_popularity = {
				ideology = communism
				popularity = 0.02
			}
			
			add_to_variable = {
				var = BRZ_steelpaw_paranoia_val
				value = -10
				tooltip = BRZ_steelpaw_paranoia_loose_10_tt
			}
			BRZ_clear_paranoia = yes
		}
	}
	
	BRZ_send_reactionaries_to_work = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		available = { 
			has_completed_focus = BRZ_total_destruction_of_the_nobility
			custom_trigger_tooltip = {
				tooltip = BRZ_steelpaw_paranoia_30_trigger
				check_variable = { BRZ_steelpaw_paranoia_val > 30 }
			}
		}
		
		days_remove = 150
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_strenghten_palace_guard"
			
			add_stability = -0.05
			
			set_temp_variable = { population_percentage_change = -0.025 }
			random_owned_controlled_state = {
				limit = {
					state_population_k > 500
				}
				population_change_custom = yes
			}
			random_owned_controlled_state = {
				limit = {
					state_population_k > 500
				}
				population_change_custom = yes
			}
			random_owned_controlled_state = {
				limit = {
					state_population_k > 500
				}
				population_change_custom = yes
			}
			
			add_to_variable = {
				var = BRZ_steelpaw_paranoia_val
				value = -10
				tooltip = BRZ_steelpaw_paranoia_loose_10_tt
			}
			BRZ_clear_paranoia = yes
		}
	}
	
	BRZ_strenghten_palace_guard = {
		icon = GFX_decision_generic
		
		allowed = { tag = BRZ }
		
		available = { 
			has_completed_focus = BRZ_counter_the_counterrevolution
			custom_trigger_tooltip = {
				tooltip = BRZ_steelpaw_paranoia_30_trigger
				check_variable = { BRZ_steelpaw_paranoia_val > 30 }
			}
		}
		
		days_remove = 150
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_strenghten_palace_guard"
			
			add_manpower = -15000
			add_war_support = -0.03
			
			add_to_variable = {
				var = BRZ_steelpaw_paranoia_val
				value = -10
				tooltip = BRZ_steelpaw_paranoia_loose_10_tt
			}
			BRZ_clear_paranoia = yes
		}
	}
}

BRZ_softfur_factions = {
	BRZ_promote_socialist_journals = {
		icon = GFX_decision_generic
		cost = 50

		modifier = {
			custom_modifier_tooltip = BRZ_softfur_theorist_buff_tt
		}

		days_remove = 100

		ai_will_do = {
			factor = 1 # Only if PP is left over
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_promote_socialist_journals"
						
			set_country_flag = BRZ_softfur_theorist_buff_active
			
			hidden_effect = {
				set_temp_variable = { BRZ_softfur_faction_influence_to_add = 0.1 }
				set_temp_variable = { BRZ_softfur_faction_selector = 0 } # Theorists
				BRZ_softfur_add_faction_influence = yes
			}
			custom_effect_tooltip = BRZ_softfur_factions_theorists_add_10
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_promote_socialist_journals"
			
			clr_country_flag = BRZ_softfur_theorist_buff_active
			BRZ_softfur_factions_recalculate_effects = yes
		}
	}
	
	BRZ_support_trade_unions = {
		icon = GFX_decision_generic
		cost = 50

		modifier = {
			custom_modifier_tooltip = BRZ_softfur_syndicalist_buff_tt
		}

		days_remove = 100

		ai_will_do = {
			factor = 1 # Only if PP is left over
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_support_trade_unions"
			
			set_country_flag = BRZ_softfur_syndicalist_buff_active
			
			hidden_effect = {
				set_temp_variable = { BRZ_softfur_faction_influence_to_add = 0.1 }
				set_temp_variable = { BRZ_softfur_faction_selector = 1 } # Syndicalists
				BRZ_softfur_add_faction_influence = yes
			}
			custom_effect_tooltip = BRZ_softfur_factions_syndicalists_add_10
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_support_trade_unions"
			
			clr_country_flag = BRZ_softfur_syndicalist_buff_active
			BRZ_softfur_factions_recalculate_effects = yes
		}
	}
	
	BRZ_mechanize_agriculture = {
		icon = GFX_decision_generic
		cost = 50

		modifier = {
			custom_modifier_tooltip = BRZ_softfur_agrarian_buff_tt
		}

		days_remove = 100

		ai_will_do = {
			factor = 1 # Only if PP is left over
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_mechanize_agriculture"
			
			set_country_flag = BRZ_softfur_agrarian_buff_active
			
			hidden_effect = {
				set_temp_variable = { BRZ_softfur_faction_influence_to_add = 0.1 }
				set_temp_variable = { BRZ_softfur_faction_selector = 2 } # Agrarians
				BRZ_softfur_add_faction_influence = yes
			}
			custom_effect_tooltip = BRZ_softfur_factions_agrarians_add_10
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_mechanize_agriculture"
			
			clr_country_flag = BRZ_softfur_agrarian_buff_active
			BRZ_softfur_factions_recalculate_effects = yes
		}
	}
}

BRZ_loudbark_bop_category = {
	# Young Guard
	BRZ_pursue_experimental_technologies = {
		icon = GFX_decision_generic_research
		
		cost = 25

		ai_will_do = {
			factor = 100
		}
		
		modifier = {
			research_speed_factor = -0.07
		}
		
		days_remove = 180
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_complete_the_land_reform"
			
			random_list = {
				1 = {
					add_breakthrough_progress = {
						specialization = specialization_air
						value = 0.25
					}
				}
				1 = {
					add_breakthrough_progress = {
						specialization = specialization_land
						value = 0.25
					}
				}
				1 = {
					add_breakthrough_progress = {
						specialization = specialization_naval
						value = 0.25
					}
				}
				1 = {
					add_breakthrough_progress = {
						specialization = specialization_nuclear
						value = 0.25
					}
				}
				1 = {
					add_breakthrough_progress = {
						specialization = specialization_magical
						value = 0.25
					}
				}
			}
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = -0.05
			}
		}
	}
	BRZ_issue_promotions = {
		icon = GFX_decision_generic_army_support
		
		cost = 50

		ai_will_do = {
			factor = 100
		}
		
		days_remove = 180
		
		modifier = {
			army_speed_factor = 0.05
			army_morale_factor = 0.02
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_issue_promotions"
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = -0.05
			}
		}
	}
	BRZ_investigate_aristocratic_lobbying = {
		icon = GFX_decision_generic_police_action
		
		cost = 50

		ai_will_do = {
			factor = 100
		}
		
		modifier = {
			political_power_factor = -0.05
			stability_factor = -0.05
		}
		
		days_remove = 180
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_investigate_aristocratic_lobbying"
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = -0.1
			}
		}
	}
	# Old Guard
	BRZ_use_industrial_contacts = {
		icon = GFX_decision_generic_industry
		
		cost = 25

		ai_will_do = {
			factor = 100
		}
		
		days_remove = 180
		
		modifier = {
			industrial_capacity_factory = 0.1
			industrial_capacity_dockyard = 0.1
			political_power_factor = -0.05
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_use_industrial_contacts"
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = 0.05
			}
		}
	}
	BRZ_strengthen_the_chain_of_command = {
		icon = GFX_decision_hol_draw_up_staff_plans
		
		cost = 50

		ai_will_do = {
			factor = 100
		}
		
		days_remove = 180
		
		modifier = {
			coordination_bonus = 0.02
			max_planning = 0.1
			army_speed_factor = -0.04
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_stricten_the_chain_of_command"
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = 0.05
			}
		}
	}
	BRZ_curtail_field_promotions = {
		icon = GFX_decision_helmet
		
		cost = 50

		ai_will_do = {
			factor = 100
		}
		
		modifier = {
			command_power_gain = -0.25
		}
		
		days_remove = 180
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_curtail_field_promotions"
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = 0.1
			}
		}
	}
}

BRZ_loudbark_land_reform_category = {
	BRZ_complete_the_land_reform = {
		icon = GFX_decision_generic

		visible = {
			has_completed_focus = BRZ_initiate_the_land_reform
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = BRZ_loudbark_land_reform_at_least_4_points
				check_variable = { BRZ_loudbark_land_reform_progress > 3 }
			}
		}

		fire_only_once = yes

		ai_will_do = {
			factor = 100
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_complete_the_land_reform"
			
			set_country_flag = BRZ_loudbark_land_reform_completed
			
			effect_tooltip = {
				custom_effect_tooltip = BRZ_loudbark_land_reform_at_least_4_points
				add_ideas = BRZ_the_land_reform_weak
				custom_effect_tooltip = BRZ_loudbark_land_reform_at_least_7_points
				add_ideas = BRZ_the_land_reform_middeling
				custom_effect_tooltip = BRZ_loudbark_land_reform_at_least_10_points
				add_ideas = BRZ_the_land_reform_good
				custom_effect_tooltip = BRZ_loudbark_land_reform_at_least_12_points
				add_ideas = BRZ_the_land_reform_excellent
			}
			
			hidden_effect = {
				if = {
					limit = {
						check_variable = { BRZ_loudbark_land_reform_progress > 11 }
					}
					add_ideas = BRZ_the_land_reform_excellent
				}
				else_if = {
					limit = {
						check_variable = { BRZ_loudbark_land_reform_progress > 9 }
					}
					add_ideas = BRZ_the_land_reform_good
				}
				else_if = {
					limit = {
						check_variable = { BRZ_loudbark_land_reform_progress > 6 }
					}
					add_ideas = BRZ_the_land_reform_middeling
				}
				else_if = {
					limit = {
						check_variable = { BRZ_loudbark_land_reform_progress > 3 }
					}
					add_ideas = BRZ_the_land_reform_weak
				}
			}
			
			clr_country_flag = BRZ_loudbark_land_reform_active
			remove_ideas = BRZ_land_reform_in_progress
		}
	}

	# First bunch, unlocked by Initiate Land Reform Focus
	BRZ_confiscate_land = {
		icon = GFX_decision_generic

		visible = {
			has_completed_focus = BRZ_initiate_the_land_reform
		}

		fire_only_once = yes

		days_remove = 50

		ai_will_do = {
			factor = 100
		}
		
		# Custom cost: 5 stability
		custom_cost_trigger = {
			has_stability > 0.05
		}
		custom_cost_text = BRZ_decision_cost_5_stab
		complete_effect = { # Costs
			hidden_effect = {
				add_stability = -0.05
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_confiscate_land"
			
			add_to_variable = { BRZ_loudbark_land_reform_progress = 1 }
			custom_effect_tooltip = BRZ_loudbark_land_reform_1_progress
		}
	}
	
	BRZ_small_farmholders_loans = {
		icon = GFX_decision_generic

		visible = {
			has_completed_focus = BRZ_initiate_the_land_reform
		}

		fire_only_once = yes

		days_remove = 50

		ai_will_do = {
			factor = 100
		}
		
		modifier = {
			consumer_goods_factor = 0.15
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_small_farmholders_loans"
			
			add_to_variable = { BRZ_loudbark_land_reform_progress = 1 }
			custom_effect_tooltip = BRZ_loudbark_land_reform_1_progress
		}
	}
	
	BRZ_introduce_rent_controls = {
		icon = GFX_decision_generic

		visible = {
			has_completed_focus = BRZ_initiate_the_land_reform
		}
		
		cost = 50

		fire_only_once = yes

		days_remove = 50

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_introduce_rent_controls"
			
			add_to_variable = { BRZ_loudbark_land_reform_progress = 1 }
			custom_effect_tooltip = BRZ_loudbark_land_reform_1_progress
			
			set_country_flag = BRZ_has_introduced_rent_controls
		}
	}
	
	BRZ_nationalize_food_supply_chains = {
		icon = GFX_decision_generic

		visible = {
			has_completed_focus = BRZ_initiate_the_land_reform
		}
		
		cost = 75

		fire_only_once = yes

		days_remove = 50

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_nationalize_food_supply_chains"
			
			add_to_variable = { BRZ_loudbark_land_reform_progress = 1 }
			custom_effect_tooltip = BRZ_loudbark_land_reform_1_progress
			
			add_ideas = BRZ_nationalized_food_supply_chains
		}
	}
	
	# Second bunch, unlocked after Our Duties To The Peasantry focus - three decisions for Young Guard, three for Old Guard
	# Young Guard:
	BRZ_abolish_noble_economic_privileges = {
		icon = GFX_decision_generic

		visible = {
			has_completed_focus = BRZ_our_duties_to_the_peasantry
			has_country_flag = BRZ_loudbark_land_reform_young_guard
		}
		
		cost = 25
		modifier = {
			consumer_goods_factor = 0.25
		}

		fire_only_once = yes

		days_remove = 30

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_abolish_noble_economic_privileges"
			
			# remove 5 random civilian factories
			random_owned_controlled_state = {
				limit = {
					industrial_complex > 1
				}
				remove_building = {
					type = industrial_complex
					level = 1
				}
			}
			random_owned_controlled_state = {
				limit = {
					industrial_complex > 1
				}
				remove_building = {
					type = industrial_complex
					level = 1
				}
			}
			random_owned_controlled_state = {
				limit = {
					industrial_complex > 1
				}
				remove_building = {
					type = industrial_complex
					level = 1
				}
			}
			random_owned_controlled_state = {
				limit = {
					industrial_complex > 1
				}
				remove_building = {
					type = industrial_complex
					level = 1
				}
			}
			random_owned_controlled_state = {
				limit = {
					industrial_complex > 1
				}
				remove_building = {
					type = industrial_complex
					level = 1
				}
			}
			
			add_to_variable = { BRZ_loudbark_land_reform_progress = 1 }
			custom_effect_tooltip = BRZ_loudbark_land_reform_1_progress
		}
	}
	
	BRZ_the_generational_service_act = {
		icon = GFX_decision_generic

		visible = {
			has_completed_focus = BRZ_our_duties_to_the_peasantry
			has_country_flag = BRZ_loudbark_land_reform_young_guard
		}
		
		# Custom cost: 5 War Support
		custom_cost_trigger = {
			has_war_support > 0.05
		}
		custom_cost_text = BRZ_decision_cost_5_warsup
		complete_effect = { # Costs
			hidden_effect = {
				add_war_support = -0.05
			}
		}

		fire_only_once = yes

		days_remove = 30

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_the_generational_service_act"
			
			add_to_variable = { BRZ_loudbark_land_reform_progress = 1 }
			custom_effect_tooltip = BRZ_loudbark_land_reform_1_progress
			
			add_manpower = 25000
		}
	}
	
	BRZ_the_rent_settlement_act = {
		icon = GFX_decision_generic

		visible = {
			has_completed_focus = BRZ_our_duties_to_the_peasantry
			has_country_flag = BRZ_loudbark_land_reform_young_guard
		}
		
		available = {
			has_country_flag = BRZ_has_introduced_rent_controls
		}
		
		# Custom cost: 10 stability
		custom_cost_trigger = {
			has_stability > 0.1
		}
		custom_cost_text = BRZ_decision_cost_10_stab
		complete_effect = { # Costs
			hidden_effect = {
				add_stability = -0.1
			}
		}

		fire_only_once = yes

		days_remove = 40

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_the_rent_settlement_act"
			
			add_to_variable = { BRZ_loudbark_land_reform_progress = 2 }
			custom_effect_tooltip = BRZ_loudbark_land_reform_2_progress
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = -0.05
			}
		}
	}
	
	# Old Guard:
	BRZ_negotiate_with_old_estates = {
		icon = GFX_decision_generic

		visible = {
			has_completed_focus = BRZ_our_duties_to_the_peasantry
			has_country_flag = BRZ_loudbark_land_reform_old_guard
		}
		
		cost = 25
		modifier = {
			political_power_factor = -0.1
		}

		fire_only_once = yes

		days_remove = 60

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_negotiate_with_old_estates"
			
			add_to_variable = { BRZ_loudbark_land_reform_progress = 1 }
			custom_effect_tooltip = BRZ_loudbark_land_reform_1_progress
		}
	}
	
	BRZ_invest_in_exotic_crops = {
		icon = GFX_decision_generic

		visible = {
			has_completed_focus = BRZ_our_duties_to_the_peasantry
			has_country_flag = BRZ_loudbark_land_reform_old_guard
		}
		
		cost = 50

		fire_only_once = yes

		days_remove = 60

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_invest_in_exotic_crops"
			
			add_to_variable = { BRZ_loudbark_land_reform_progress = 1 }
			custom_effect_tooltip = BRZ_loudbark_land_reform_1_progress
		}
	}
	
	BRZ_land_development_initiative = {
		icon = GFX_decision_generic

		visible = {
			has_completed_focus = BRZ_our_duties_to_the_peasantry
			has_country_flag = BRZ_loudbark_land_reform_old_guard
		}
		
		cost = 100
		
		modifier = {
			consumer_goods_factor = 0.15
		}

		fire_only_once = yes

		days_remove = 80

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_land_development_initiative"
			
			add_to_variable = { BRZ_loudbark_land_reform_progress = 2 }
			custom_effect_tooltip = BRZ_loudbark_land_reform_2_progress
			
			add_ideas = BRZ_land_development_initiative_idea
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = 0.05
			}
		}
	}
}

BRZ_loudbark_party_reform_category = {
	BRZ_preparations_for_the_party_congress = {
		icon = GFX_decision_generic
		
		allowed = { always = no }
		
		available = { 
			hidden_trigger = {
				has_country_flag = BRZ_temp_end_party_reform 
			}
		}
		
		priority = 100 # First in this category
		
		selectable_mission = no # Only cancels automatically
		
		days_mission_timeout = 240
		
		timeout_effect = { 
			log = "[GetDateText]: [Root.GetName]: Timeout BRZ_preparations_for_the_party_congress"
			
			subtract_from_variable = { BRZ_loudbark_party_populist_influence = BRZ_loudbark_party_reactionary_influence }
			subtract_from_variable = { BRZ_loudbark_party_militarist_influence = BRZ_loudbark_party_reactionary_influence }
			set_variable = { BRZ_loudbark_party_reactionary_influence = 0 }
			
			if = {
				limit = {
					check_variable = { BRZ_loudbark_party_populist_influence < 2 }
					check_variable = { BRZ_loudbark_party_militarist_influence < 2 }
				}
				
				country_event = bronzehill_loudbark.7
				
				clr_country_flag = BRZ_loudbark_party_reform_in_progress
				set_country_flag = BRZ_loudbark_party_reform_done
			}
			else = {
				set_country_flag = BRZ_loudbark_party_reform_phase_2
				
				set_temp_variable = { total_remaining_influence = BRZ_loudbark_party_populist_influence }
				add_to_temp_variable = { total_remaining_influence = BRZ_loudbark_party_militarist_influence }
				
				if = {
					limit = {
						check_variable = { total_remaining_influence < 9 }
					}
					country_event = bronzehill_loudbark.8
				}
				else = {
					country_event = bronzehill_loudbark.9
				}
			}
			
			set_variable = { BRZ_party_reform_stability = 0 }
			set_variable = { BRZ_party_reform_consumer_goods = 0 }
			set_variable = { BRZ_party_reform_political_power = 0 }
			set_variable = { BRZ_party_reform_local_resources = 0 }
			set_variable = { BRZ_party_reform_max_eff = 0 }
			set_variable = { BRZ_party_reform_building_slots = 0 }
			set_variable = { BRZ_party_reform_war_support = 0 }
			set_variable = { BRZ_party_reform_army_speed = 0 }
			set_variable = { BRZ_party_reform_special_project_speed = 0 }
			set_variable = { BRZ_party_reform_conscription_factor = 0 }
			set_variable = { BRZ_party_reform_max_planning = 0 }
			set_variable = { BRZ_party_reform_naval_speed = 0 }
		}
		
		complete_effect = { 
			log = "[GetDateText]: [Root.GetName]: Complete BRZ_preparations_for_the_party_congress"
			
			subtract_from_variable = { BRZ_loudbark_party_populist_influence = BRZ_loudbark_party_reactionary_influence }
			subtract_from_variable = { BRZ_loudbark_party_militarist_influence = BRZ_loudbark_party_reactionary_influence }
			set_variable = { BRZ_loudbark_party_reactionary_influence = 0 }
			
			if = {
				limit = {
					check_variable = { BRZ_loudbark_party_populist_influence < 2 }
					check_variable = { BRZ_loudbark_party_militarist_influence < 2 }
				}
				
				country_event = bronzehill_loudbark.7
				
				clr_country_flag = BRZ_loudbark_party_reform_in_progress
				set_country_flag = BRZ_loudbark_party_reform_done
			}
			else = {
				set_country_flag = BRZ_loudbark_party_reform_phase_2
				
				set_temp_variable = { total_remaining_influence = BRZ_loudbark_party_populist_influence }
				add_to_temp_variable = { total_remaining_influence = BRZ_loudbark_party_militarist_influence }
				
				if = {
					limit = {
						check_variable = { total_remaining_influence < 9 }
					}
					country_event = bronzehill_loudbark.8
				}
				else = {
					country_event = bronzehill_loudbark.9
				}
			}
			
			set_variable = { BRZ_party_reform_stability = 0 }
			set_variable = { BRZ_party_reform_consumer_goods = 0 }
			set_variable = { BRZ_party_reform_political_power = 0 }
			set_variable = { BRZ_party_reform_local_resources = 0 }
			set_variable = { BRZ_party_reform_max_eff = 0 }
			set_variable = { BRZ_party_reform_building_slots = 0 }
			set_variable = { BRZ_party_reform_war_support = 0 }
			set_variable = { BRZ_party_reform_army_speed = 0 }
			set_variable = { BRZ_party_reform_special_project_speed = 0 }
			set_variable = { BRZ_party_reform_conscription_factor = 0 }
			set_variable = { BRZ_party_reform_max_planning = 0 }
			set_variable = { BRZ_party_reform_naval_speed = 0 }
		}
	}
	
	BRZ_finish_party_reform = {
		icon = GFX_decision_generic
		
		visible = {
			has_country_flag = BRZ_loudbark_party_reform_phase_2
		}
		
		fire_only_once = yes
		
		ai_will_do = {
			base = 100
			modifier = { # Still points to spend
				factor = 0
				OR = { 
					check_variable = { BRZ_loudbark_party_militarist_influence > 1 }
					check_variable = { BRZ_loudbark_party_populist_influence > 1 }
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_finish_party_reform"
		
			clr_country_flag = BRZ_loudbark_party_reform_in_progress
			clr_country_flag = BRZ_loudbark_party_reform_phase_2
			set_country_flag = BRZ_loudbark_party_reform_done
			
			custom_effect_tooltip = BRZ_loudbark_party_reform_finish_effect
			
			set_temp_variable = { stab_gain = BRZ_loudbark_party_populist_influence }
			divide_temp_variable = { stab_gain = 100 }
			add_stability = stab_gain
			set_temp_variable = { war_sup_gain = BRZ_loudbark_party_militarist_influence }
			divide_temp_variable = { war_sup_gain = 100 }
			add_war_support = war_sup_gain
		}
	}
	
	BRZ_enshrine_social_security = {
		icon = GFX_decision_generic

		visible = {
			has_country_flag = BRZ_loudbark_party_reform_phase_2
		}

		fire_only_once = yes

		ai_will_do = {
			factor = 100
		}
		
		# Custom cost: 2 populist influence
		custom_cost_trigger = {
			check_variable = { 
				var = BRZ_loudbark_party_populist_influence
				value = 2
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_2_populist_influence
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { BRZ_loudbark_party_populist_influence = 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_enshrine_commitment_to_social_securty"
			
			if = {
				limit = {
					NOT = { 
						has_dynamic_modifier = {
							modifier = BRZ_party_reform
						}
					}
				}
				hidden_effect = {
					add_dynamic_modifier = {
						modifier = BRZ_party_reform
					}
				}
				effect_tooltip = {
					add_ideas = BRZ_party_reform_stab
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_party_reform_empty
						add_idea = BRZ_party_reform_stab
					}
				}
			}
			
			set_variable = { BRZ_party_reform_stability = 0.05 }
			force_update_dynamic_modifier = yes
		}
	}
	
	BRZ_adopt_the_land_tax = {
		icon = GFX_decision_generic

		visible = {
			has_country_flag = BRZ_loudbark_party_reform_phase_2
		}

		fire_only_once = yes

		ai_will_do = {
			factor = 100
		}
		
		# Custom cost: 2 populist influence
		custom_cost_trigger = {
			check_variable = { 
				var = BRZ_loudbark_party_populist_influence
				value = 2
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_2_populist_influence
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { BRZ_loudbark_party_populist_influence = 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_adopt_the_land_tax"
			
			if = {
				limit = {
					NOT = { 
						has_dynamic_modifier = {
							modifier = BRZ_party_reform
						}
					}
				}
				hidden_effect = {
					add_dynamic_modifier = {
						modifier = BRZ_party_reform
					}
				}
				effect_tooltip = {
					add_ideas = BRZ_party_reform_cons_goods
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_party_reform_empty
						add_idea = BRZ_party_reform_cons_goods
					}
				}
			}
			
			set_variable = { BRZ_party_reform_consumer_goods = -0.05 }
			force_update_dynamic_modifier = yes
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = -0.05
			}
		}
	}
	
	BRZ_reform_the_party_loyalty_pledge = {
		icon = GFX_decision_generic

		visible = {
			has_country_flag = BRZ_loudbark_party_reform_phase_2
		}

		fire_only_once = yes

		ai_will_do = {
			factor = 100
		}
		
		# Custom cost: 2 populist influence
		custom_cost_trigger = {
			check_variable = { 
				var = BRZ_loudbark_party_populist_influence
				value = 2
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_2_populist_influence
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { BRZ_loudbark_party_populist_influence = 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_reform_the_party_loyalty_pledge"
			
			if = {
				limit = {
					NOT = { 
						has_dynamic_modifier = {
							modifier = BRZ_party_reform
						}
					}
				}
				hidden_effect = {
					add_dynamic_modifier = {
						modifier = BRZ_party_reform
					}
				}
				effect_tooltip = {
					add_ideas = BRZ_party_reform_pol_power
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_party_reform_empty
						add_idea = BRZ_party_reform_pol_power
					}
				}
			}
			
			set_variable = { BRZ_party_reform_political_power = 0.05 }
			force_update_dynamic_modifier = yes
		}
	}
	
	BRZ_pledge_to_strenghten_agriculture = {
		icon = GFX_decision_generic

		visible = {
			has_country_flag = BRZ_loudbark_party_reform_phase_2
		}

		fire_only_once = yes

		ai_will_do = {
			factor = 100
		}
		
		# Custom cost: 2 populist influence
		custom_cost_trigger = {
			check_variable = { 
				var = BRZ_loudbark_party_populist_influence
				value = 2
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_2_populist_influence
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { BRZ_loudbark_party_populist_influence = 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_pledge_to_strenghten_agriculture"
			
			if = {
				limit = {
					NOT = { 
						has_dynamic_modifier = {
							modifier = BRZ_party_reform
						}
					}
				}
				hidden_effect = {
					add_dynamic_modifier = {
						modifier = BRZ_party_reform
					}
				}
				effect_tooltip = {
					add_ideas = BRZ_party_reform_resource
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_party_reform_empty
						add_idea = BRZ_party_reform_resource
					}
				}
			}
			
			set_variable = { BRZ_party_reform_local_resources = 0.05 }
			force_update_dynamic_modifier = yes
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = 0.05
			}
		}
	}
	
	BRZ_introduce_the_economic_advisory_council = {
		icon = GFX_decision_generic

		visible = {
			has_country_flag = BRZ_loudbark_party_reform_phase_2
		}

		fire_only_once = yes

		ai_will_do = {
			factor = 100
		}
		
		# Custom cost: 2 populist influence
		custom_cost_trigger = {
			check_variable = { 
				var = BRZ_loudbark_party_populist_influence
				value = 2
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_2_populist_influence
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { BRZ_loudbark_party_populist_influence = 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_introduce_the_economic_advisory_council"
			
			if = {
				limit = {
					NOT = { 
						has_dynamic_modifier = {
							modifier = BRZ_party_reform
						}
					}
				}
				hidden_effect = {
					add_dynamic_modifier = {
						modifier = BRZ_party_reform
					}
				}
				effect_tooltip = {
					add_ideas = BRZ_party_reform_prod_eff
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_party_reform_empty
						add_idea = BRZ_party_reform_prod_eff
					}
				}
			}
			
			set_variable = { BRZ_party_reform_max_eff = 0.05 }
			force_update_dynamic_modifier = yes
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = 0.05
			}
		}
	}
	
	BRZ_guarantee_the_right_to_work = {
		icon = GFX_decision_generic

		visible = {
			has_country_flag = BRZ_loudbark_party_reform_phase_2
		}

		fire_only_once = yes

		ai_will_do = {
			factor = 100
		}
		
		# Custom cost: 2 populist influence
		custom_cost_trigger = {
			check_variable = { 
				var = BRZ_loudbark_party_populist_influence
				value = 2
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_2_populist_influence
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { BRZ_loudbark_party_populist_influence = 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_guarantee_the_right_to_work"
			
			if = {
				limit = {
					NOT = { 
						has_dynamic_modifier = {
							modifier = BRZ_party_reform
						}
					}
				}
				hidden_effect = {
					add_dynamic_modifier = {
						modifier = BRZ_party_reform
					}
				}
				effect_tooltip = {
					add_ideas = BRZ_party_reform_fac_space
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_party_reform_empty
						add_idea = BRZ_party_reform_fac_space
					}
				}
			}
			
			set_variable = { BRZ_party_reform_building_slots = 0.1 }
			force_update_dynamic_modifier = yes
		}
	}
	
	BRZ_embed_the_military_connection_office = {
		icon = GFX_decision_generic

		visible = {
			has_country_flag = BRZ_loudbark_party_reform_phase_2
		}

		fire_only_once = yes

		ai_will_do = {
			factor = 100
		}
		
		# Custom cost: 2 populist influence
		custom_cost_trigger = {
			check_variable = { 
				var = BRZ_loudbark_party_militarist_influence
				value = 2
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_2_militarist_influence
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { BRZ_loudbark_party_militarist_influence = 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_embed_the_military_connection_office"
			
			if = {
				limit = {
					NOT = { 
						has_dynamic_modifier = {
							modifier = BRZ_party_reform
						}
					}
				}
				hidden_effect = {
					add_dynamic_modifier = {
						modifier = BRZ_party_reform
					}
				}
				effect_tooltip = {
					add_ideas = BRZ_party_reform_war_sup
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_party_reform_empty
						add_idea = BRZ_party_reform_war_sup
					}
				}
			}
			
			set_variable = { BRZ_party_reform_war_support = 0.05 }
			force_update_dynamic_modifier = yes
		}
	}
	
	BRZ_reaffirm_the_readiness_doctrine = {
		icon = GFX_decision_generic

		visible = {
			has_country_flag = BRZ_loudbark_party_reform_phase_2
		}

		fire_only_once = yes

		ai_will_do = {
			factor = 100
		}
		
		# Custom cost: 2 populist influence
		custom_cost_trigger = {
			check_variable = { 
				var = BRZ_loudbark_party_militarist_influence
				value = 2
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_2_militarist_influence
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { BRZ_loudbark_party_militarist_influence = 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_reaffirm_the_readiness_doctrine"
			
			if = {
				limit = {
					NOT = { 
						has_dynamic_modifier = {
							modifier = BRZ_party_reform
						}
					}
				}
				hidden_effect = {
					add_dynamic_modifier = {
						modifier = BRZ_party_reform
					}
				}
				effect_tooltip = {
					add_ideas = BRZ_party_reform_army_speed
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_party_reform_empty
						add_idea = BRZ_party_reform_army_speed
					}
				}
			}
			
			set_variable = { BRZ_party_reform_army_speed = 0.05 }
			force_update_dynamic_modifier = yes
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = -0.05
			}
		}
	}
	
	BRZ_ratify_the_new_technology_plan = {
		icon = GFX_decision_generic

		visible = {
			has_country_flag = BRZ_loudbark_party_reform_phase_2
		}

		fire_only_once = yes

		ai_will_do = {
			factor = 100
		}
		
		# Custom cost: 2 populist influence
		custom_cost_trigger = {
			check_variable = { 
				var = BRZ_loudbark_party_militarist_influence
				value = 2
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_2_militarist_influence
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { BRZ_loudbark_party_militarist_influence = 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_ratify_the_new_technology_plan"
			
			if = {
				limit = {
					NOT = { 
						has_dynamic_modifier = {
							modifier = BRZ_party_reform
						}
					}
				}
				hidden_effect = {
					add_dynamic_modifier = {
						modifier = BRZ_party_reform
					}
				}
				effect_tooltip = {
					add_ideas = BRZ_party_reform_sp_speed
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_party_reform_empty
						add_idea = BRZ_party_reform_sp_speed
					}
				}
			}
			
			set_variable = { BRZ_party_reform_special_project_speed = 0.1 }
			force_update_dynamic_modifier = yes
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = -0.05
			}
		}
	}
	
	BRZ_affirm_the_duty_to_serve = {
		icon = GFX_decision_generic

		visible = {
			has_country_flag = BRZ_loudbark_party_reform_phase_2
		}

		fire_only_once = yes

		ai_will_do = {
			factor = 100
		}
		
		# Custom cost: 2 populist influence
		custom_cost_trigger = {
			check_variable = { 
				var = BRZ_loudbark_party_militarist_influence
				value = 2
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_2_militarist_influence
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { BRZ_loudbark_party_militarist_influence = 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_affirm_the_duty_to_serve"
			
			if = {
				limit = {
					NOT = { 
						has_dynamic_modifier = {
							modifier = BRZ_party_reform
						}
					}
				}
				hidden_effect = {
					add_dynamic_modifier = {
						modifier = BRZ_party_reform
					}
				}
				effect_tooltip = {
					add_ideas = BRZ_party_reform_consc
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_party_reform_empty
						add_idea = BRZ_party_reform_consc
					}
				}
			}
			
			set_variable = { BRZ_party_reform_conscription_factor = 0.03 }
			force_update_dynamic_modifier = yes
		}
	}
	
	BRZ_safeguard_the_flexible_battleplan_policy = {
		icon = GFX_decision_generic

		visible = {
			has_country_flag = BRZ_loudbark_party_reform_phase_2
		}

		fire_only_once = yes

		ai_will_do = {
			factor = 100
		}
		
		# Custom cost: 2 populist influence
		custom_cost_trigger = {
			check_variable = { 
				var = BRZ_loudbark_party_militarist_influence
				value = 2
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_2_militarist_influence
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { BRZ_loudbark_party_militarist_influence = 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_safeguard_the_flexible_battleplan_policy"
			
			if = {
				limit = {
					NOT = { 
						has_dynamic_modifier = {
							modifier = BRZ_party_reform
						}
					}
				}
				hidden_effect = {
					add_dynamic_modifier = {
						modifier = BRZ_party_reform
					}
				}
				effect_tooltip = {
					add_ideas = BRZ_party_reform_planning
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_party_reform_empty
						add_idea = BRZ_party_reform_planning
					}
				}
			}
			
			set_variable = { BRZ_party_reform_max_planning = 0.1 }
			force_update_dynamic_modifier = yes
			
			add_power_balance_value = {
				id = BRZ_loudbark_bop
				value = 0.05
			}
		}
	}
	
	BRZ_deepen_ties_to_the_admirality = {
		icon = GFX_decision_generic

		visible = {
			has_country_flag = BRZ_loudbark_party_reform_phase_2
		}

		fire_only_once = yes

		ai_will_do = {
			factor = 100
		}
		
		# Custom cost: 2 populist influence
		custom_cost_trigger = {
			check_variable = { 
				var = BRZ_loudbark_party_militarist_influence
				value = 2
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = BRZ_decision_cost_2_militarist_influence
		complete_effect = { # Costs
			hidden_effect = {
				subtract_from_variable = { BRZ_loudbark_party_militarist_influence = 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_deepen_ties_to_the_admirality"
			
			if = {
				limit = {
					NOT = { 
						has_dynamic_modifier = {
							modifier = BRZ_party_reform
						}
					}
				}
				hidden_effect = {
					add_dynamic_modifier = {
						modifier = BRZ_party_reform
					}
				}
				effect_tooltip = {
					add_ideas = BRZ_party_reform_naval
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_party_reform_empty
						add_idea = BRZ_party_reform_naval
					}
				}
			}
			
			set_variable = { BRZ_party_reform_naval_speed = 0.1 }
			force_update_dynamic_modifier = yes
		}
	}
}

# Revenge path
BRZ_build_the_imperial_tomb_decisions = {
	BRZ_begin_demolitions = {
		icon = generic_construction
		cost = 50

		available = {
			controls_state = 382
			num_of_civilian_factories_available_for_projects > 4
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 180

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_beguin_demolitions"
			add_stability = -0.1
			set_country_flag = BRZ_demolitions_complete
			if = {
				limit = {
					382 = {
						industrial_complex > 2
					}
				}
				382 = {
					remove_building = {
						type = industrial_complex
						level = 3
					}
				}
			}
			else_if = {
				limit = {
					382 = {
						industrial_complex > 1
					}
				}
				382 = {
					remove_building = {
						type = industrial_complex
						level = 2
					}
				}
			}
			else_if = {
				limit = {
					382 = {
						industrial_complex > 0
					}
				}
				382 = {
					remove_building = {
						type = industrial_complex
						level = 1
					}
				}
			}

			country_event = bronzehill_tomb.1
		}
	}

	#Foundations
	BRZ_build_phase_one = {
		icon = generic_construction
		cost = 50

		available = {
			controls_state = 382
			num_of_civilian_factories_available_for_projects > 4
			has_country_flag = BRZ_demolitions_complete
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 180

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_phase_one"
			set_country_flag = BRZ_tomb_phase_one
		}
	}

	#The Tomb itself
	BRZ_build_phase_two = {
		icon = generic_construction
		cost = 50

		available = {
			controls_state = 382
			num_of_civilian_factories_available_for_projects > 4
			has_country_flag = BRZ_tomb_phase_one
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 180

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_phase_two"
			set_country_flag = BRZ_tomb_phase_two
			country_event = bronzehill_tomb.2
		}
	}

	#The Avenue of Tears
	BRZ_build_phase_three = {
		icon = generic_construction
		cost = 50

		available = {
			controls_state = 382
			num_of_civilian_factories_available_for_projects > 4
			has_country_flag = BRZ_tomb_phase_two
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 180

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_phase_three"
			set_country_flag = BRZ_tomb_phase_three
			country_event = bronzehill_tomb.3
		}
	}

	#The Eternal Flame
	BRZ_build_phase_four = {
		icon = generic_construction
		cost = 50

		available = {
			controls_state = 382
			num_of_civilian_factories_available_for_projects > 4
			has_country_flag = BRZ_tomb_phase_three
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 5
		}

		days_remove = 180

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_phase_four"
			set_country_flag = BRZ_tomb_phase_four
			country_event = bronzehill_tomb.4
		}
	}

	#The Memorial Gardens
	BRZ_build_gardens = {
		icon = generic_construction
		cost = 50

		available = {
			controls_state = 382
			num_of_civilian_factories_available_for_projects > 2
			has_country_flag = BRZ_tomb_phase_four
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 3
		}

		days_remove = 70

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_build_gardens"
			set_country_flag = BRZ_guardens_done
			add_stability = 0.05
			country_event = bronzehill_tomb.5
		}
	}

	#The Great Statue
	BRZ_finish_statues = {
		icon = generic_construction
		cost = 50

		available = {
			controls_state = 382
			num_of_civilian_factories_available_for_projects > 2
			has_country_flag = BRZ_tomb_phase_four
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 3
		}

		days_remove = 70

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_finish_statues"
			set_country_flag = BRZ_statues_done
			add_stability = 0.05
			country_event = bronzehill_tomb.6
		}
	}

	#The Wall of Memories
	BRZ_finish_murals = {
		icon = generic_construction
		cost = 50

		available = {
			controls_state = 382
			num_of_civilian_factories_available_for_projects > 2
			has_country_flag = BRZ_tomb_phase_four
		}

		fire_only_once = yes

		modifier = {
			civilian_factory_use = 3
		}

		days_remove = 70

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_finish_murals"
			set_country_flag = BRZ_murals_done
			add_stability = 0.05
			country_event = bronzehill_tomb.7
		}
	}

	#The Funeral
	BRZ_prepare_the_funeral = {
		icon = generic_construction
		cost = 50

		available = {
			controls_state = 382
			num_of_civilian_factories_available_for_projects > 2
			has_country_flag = BRZ_murals_done
			has_country_flag = BRZ_statues_done
			has_country_flag = BRZ_guardens_done
		}

		fire_only_once = yes

		modifier = {
			consumer_goods_factor = 0.25
		}

		days_remove = 50

		ai_will_do = {
			factor = 100
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_finish_murals"
			set_country_flag = BRZ_tomb_complete
			add_stability = 0.1
			country_event = bronzehill_tomb.8
			hidden_effect = {
				news_event = {
					id = bronzehill_news.5
					days = 1
				}
			}
		}
	}
}

BRZ_revenge_imperial_service_proclamation = {
	BRZ_admit_loyal_griffons = {
		icon = GFX_decision_griffon
		
		ai_will_do = {
			factor = 100
		}
		
		visible = {
			has_completed_focus = BRZ_making_the_most_griffon
		}
		
		fire_only_once = yes
		
		cost = 100
		
		days_remove = 30
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_admit_loyal_griffons"
			
			add_to_variable = { BRZ_revenge_army_fervour = 1 }
			custom_effect_tooltip = BRZ_revenge_army_fervour_add_1
			BRZ_update_fervour = yes
		}
	}
}

BRZ_revenge_triumph_category = {
	BRZ_triumph_skyfall = {
		icon = GFX_decision_crossed_swords
		cost = 10
		fire_only_once = yes
		ai_will_do = {
			factor = 100
		}
		available = {
			owns_state = 381 # Skyfall capital
			has_war = no
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_triumph_skyfall"
			
			if = {
				limit = {
					NOT = {
						has_dynamic_modifier = {
							modifier = BRZ_triumph_for_griffonia
						}
					}
				}
				hidden_effect = {
					BRZ_initialize_triumph = yes
				}
				effect_tooltip = {
					add_ideas = BRZ_triumph_idea_skyfall
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_triumph_idea_empty
						add_idea = BRZ_triumph_idea_skyfall
					}
				}
			}
			set_variable = { BRZ_revenge_triumph_ind_cap_fac = 0.05 }
			set_variable = { BRZ_revenge_triumph_trade_opinion = 0.25 }
			
			add_to_variable = { BRZ_revenge_army_fervour = 1 }
			custom_effect_tooltip = BRZ_revenge_army_fervour_add_1
			BRZ_update_fervour = yes
		}
	}
	BRZ_triumph_republic = {
		icon = GFX_decision_crossed_swords
		cost = 10
		fire_only_once = yes
		ai_will_do = {
			factor = 100
		}
		available = {
			owns_state = 485 # Griff Repub capital
			has_war = no
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_triumph_republic"
			
			if = {
				limit = {
					NOT = {
						has_dynamic_modifier = {
							modifier = BRZ_triumph_for_griffonia
						}
					}
				}
				hidden_effect = {
					BRZ_initialize_triumph = yes
				}
				effect_tooltip = {
					add_ideas = BRZ_triumph_idea_republic
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_triumph_idea_empty
						add_idea = BRZ_triumph_idea_republic
					}
				}
			}
			set_variable = { BRZ_revenge_triumph_stability = 0.1 }

			add_to_variable = { BRZ_revenge_army_fervour = 2 }
			custom_effect_tooltip = BRZ_revenge_army_fervour_add_2
			BRZ_update_fervour = yes
		}
	}
	BRZ_triumph_hellquill = {
		icon = GFX_decision_crossed_swords
		cost = 10
		fire_only_once = yes
		ai_will_do = {
			factor = 100
		}
		available = {
			OR = {
				owns_state = 537 # Hellquill
				any_subject_country = {
					owns_state = 537 # Hellquill
				}
			}
			OR = {
				owns_state = 552 # Swordsson
				any_subject_country = {
					owns_state = 552 # Swordsson
				}
			}
			has_war = no
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_triumph_hellquill"
			
			if = {
				limit = {
					NOT = {
						has_dynamic_modifier = {
							modifier = BRZ_triumph_for_griffonia
						}
					}
				}
				hidden_effect = {
					BRZ_initialize_triumph = yes
				}
				effect_tooltip = {
					add_ideas = BRZ_triumph_idea_hellquill
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_triumph_idea_empty
						add_idea = BRZ_triumph_idea_hellquill
					}
				}
			}
			set_variable = { BRZ_revenge_triumph_army_morale = 0.05 }
			
			add_to_variable = { BRZ_revenge_army_fervour = 1 }
			custom_effect_tooltip = BRZ_revenge_army_fervour_add_1
			BRZ_update_fervour = yes
		}
	}
	BRZ_triumph_aquilia = {
		icon = GFX_decision_crossed_swords
		cost = 10
		fire_only_once = yes
		ai_will_do = {
			factor = 100
		}
		available = {
			owns_state = 377 # Aquileia capital
			has_war = no
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_triumph_aquilia"
			
			if = {
				limit = {
					NOT = {
						has_dynamic_modifier = {
							modifier = BRZ_triumph_for_griffonia
						}
					}
				}
				hidden_effect = {
					BRZ_initialize_triumph = yes
				}
				effect_tooltip = {
					add_ideas = BRZ_triumph_idea_aquilia
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_triumph_idea_empty
						add_idea = BRZ_triumph_idea_aquilia
					}
				}
			}
			set_variable = { BRZ_revenge_triumph_research_speed = 0.05 }
			
			add_ideas = BRZ_aquilian_ponies
			
			add_to_variable = { BRZ_revenge_army_fervour = 2 }
			custom_effect_tooltip = BRZ_revenge_army_fervour_add_2
			BRZ_update_fervour = yes
		}
	}
	BRZ_triumph_griffonstone = {
		icon = GFX_decision_crossed_swords
		cost = 10
		fire_only_once = yes
		ai_will_do = {
			factor = 100
		}
		available = {
			owns_state = 389 # Griffonstone capital
			has_war = no
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_triumph_griffonstone"
			
			if = {
				limit = {
					NOT = {
						has_dynamic_modifier = {
							modifier = BRZ_triumph_for_griffonia
						}
					}
				}
				hidden_effect = {
					BRZ_initialize_triumph = yes
				}
				effect_tooltip = {
					add_ideas = BRZ_triumph_idea_griffonstone
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_triumph_idea_empty
						add_idea = BRZ_triumph_idea_griffonstone
					}
				}
			}
			set_variable = { BRZ_revenge_triumph_pol_power = 0.05 }
			
			add_to_variable = { BRZ_revenge_army_fervour = 1 }
			custom_effect_tooltip = BRZ_revenge_army_fervour_add_1
			BRZ_update_fervour = yes
		}
	}
	BRZ_triumph_skynavia = {
		icon = GFX_decision_crossed_swords
		cost = 10
		fire_only_once = yes
		ai_will_do = {
			factor = 100
		}
		available = {
			owns_state = 522 # Skynavia capital
			has_war = no
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_triumph_skynavia"
			
			if = {
				limit = {
					NOT = {
						has_dynamic_modifier = {
							modifier = BRZ_triumph_for_griffonia
						}
					}
				}
				hidden_effect = {
					BRZ_initialize_triumph = yes
				}
				effect_tooltip = {
					add_ideas = BRZ_triumph_idea_skynavia
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_triumph_idea_empty
						add_idea = BRZ_triumph_idea_skynavia
					}
				}
			}
			set_variable = { BRZ_revenge_triumph_resistance_growth = -0.05 }
			
			add_to_variable = { BRZ_revenge_army_fervour = 1 }
			custom_effect_tooltip = BRZ_revenge_army_fervour_add_1
			BRZ_update_fervour = yes
		}
	}
	BRZ_triumph_haukland = {
		icon = GFX_decision_crossed_swords
		cost = 10
		fire_only_once = yes
		ai_will_do = {
			factor = 100
		}
		available = {
			owns_state = 659 # Haukland capital
			owns_state = 429 # Vedina capital
			has_war = no
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_triumph_haukland"
			
			if = {
				limit = {
					NOT = {
						has_dynamic_modifier = {
							modifier = BRZ_triumph_for_griffonia
						}
					}
				}
				hidden_effect = {
					BRZ_initialize_triumph = yes
				}
				effect_tooltip = {
					add_ideas = BRZ_triumph_idea_haukland
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_triumph_idea_empty
						add_idea = BRZ_triumph_idea_haukland
					}
				}
			}
			set_variable = { BRZ_revenge_triumph_ind_cap_dock = 0.1 }
			
			add_to_variable = { BRZ_revenge_army_fervour = 1 }
			custom_effect_tooltip = BRZ_revenge_army_fervour_add_1
			BRZ_update_fervour = yes
		}
	}
	BRZ_triumph_wingbardy = {
		icon = GFX_decision_crossed_swords
		cost = 10
		fire_only_once = yes
		ai_will_do = {
			factor = 100
		}
		available = {
			owns_state = 371 # Wingbardy capital
			has_war = no
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_triumph_wingbardy"
			
			if = {
				limit = {
					NOT = {
						has_dynamic_modifier = {
							modifier = BRZ_triumph_for_griffonia
						}
					}
				}
				hidden_effect = {
					BRZ_initialize_triumph = yes
				}
				effect_tooltip = {
					add_ideas = BRZ_triumph_idea_wingbardy
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_triumph_idea_empty
						add_idea = BRZ_triumph_idea_wingbardy
					}
				}
			}
			set_variable = { BRZ_revenge_triumph_army_speed = 0.05 }
			
			add_to_variable = { BRZ_revenge_army_fervour = 2 }
			custom_effect_tooltip = BRZ_revenge_army_fervour_add_2
			BRZ_update_fervour = yes
		}
	}
	BRZ_triumph_grenzland = {
		icon = GFX_decision_crossed_swords
		cost = 10
		fire_only_once = yes
		ai_will_do = {
			factor = 100
		}
		available = {
			owns_state = 512 # Gryphus capital
			owns_state = 508 # Prywhen capital
			has_war = no
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_triumph_grenzland"
			
			if = {
				limit = {
					NOT = {
						has_dynamic_modifier = {
							modifier = BRZ_triumph_for_griffonia
						}
					}
				}
				hidden_effect = {
					BRZ_initialize_triumph = yes
				}
				effect_tooltip = {
					add_ideas = BRZ_triumph_idea_grenzland
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_triumph_idea_empty
						add_idea = BRZ_triumph_idea_grenzland
					}
				}
			}
			set_variable = { BRZ_revenge_triumph_cons_goods = -0.05 }
			
			add_to_variable = { BRZ_revenge_army_fervour = 1 }
			custom_effect_tooltip = BRZ_revenge_army_fervour_add_1
			BRZ_update_fervour = yes
		}
	}
	BRZ_triumph_diamond = {
		icon = GFX_decision_crossed_swords
		cost = 10
		fire_only_once = yes
		ai_will_do = {
			factor = 100
		}
		available = {
			owns_state = 637 # Diamond Mountain capital
			has_war = no
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_triumph_diamond"
			
			if = {
				limit = {
					NOT = {
						has_dynamic_modifier = {
							modifier = BRZ_triumph_for_griffonia
						}
					}
				}
				hidden_effect = {
					BRZ_initialize_triumph = yes
				}
				effect_tooltip = {
					add_ideas = BRZ_triumph_idea_diamond
				}
			}
			else = {
				effect_tooltip = {
					swap_ideas = {
						remove_idea = BRZ_triumph_idea_empty
						add_idea = BRZ_triumph_idea_diamond
					}
				}
			}
			set_variable = { BRZ_revenge_triumph_army_org = 0.05 }
			
			add_to_variable = { BRZ_revenge_army_fervour = 1 }
			custom_effect_tooltip = BRZ_revenge_army_fervour_add_1
			BRZ_update_fervour = yes
		}
	}
}

BRZ_griffon_tech_research = {
	BRZ_research_knights_tech = {
		icon = griffon
		cost = 25
		days_remove = 180
		modifier = {
			research_speed_factor = -0.1
			consumer_goods_factor = 0.1
		}
		visible = {
			NOT = {
				has_tech = tech_knights_c
			}
		}

		ai_will_do = {
			factor = 50
		}
		
		complete_effect = {
			log = "[GetDateText] [Root.GetName]: Decision BRZ_research_knights_tech" 
        }
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BRZ_research_knights_tech"
			BRZ_upgrade_knights_technology = yes
		}
	}
}

BRZ_history_of_bronzehill = {
	BRZ_history_the_founding_of_bronzehill = {
		icon = GFX_decision_kirin_scroll
		
		ai_will_do = {
			factor = 0
		}
		
		complete_effect = {
			log = "[GetDateText] [Root.GetName]: Decision BRZ_history_the_founding_of_bronzehill" 
			
			country_event = bronzehill_history.1
        }
	}
	
	BRZ_history_the_eastern_crusade = {
		icon = GFX_decision_kirin_scroll
		
		ai_will_do = {
			factor = 0
		}
		
		complete_effect = {
			log = "[GetDateText] [Root.GetName]: Decision BRZ_history_the_eastern_crusade" 
			
			country_event = bronzehill_history.2
        }
	}
	
	BRZ_history_the_times_of_grover_iii_and_iv = {
		icon = GFX_decision_kirin_scroll
		
		ai_will_do = {
			factor = 0
		}
		
		complete_effect = {
			log = "[GetDateText] [Root.GetName]: Decision BRZ_history_the_times_of_grover_iii_and_iv" 
			
			country_event = bronzehill_history.3
        }
	}
	
	BRZ_history_the_republican_revolution = {
		icon = GFX_decision_kirin_scroll
		
		ai_will_do = {
			factor = 0
		}
		
		complete_effect = {
			log = "[GetDateText] [Root.GetName]: Decision BRZ_history_the_republican_revolution" 
			
			country_event = bronzehill_history.4
        }
	}
	
	BRZ_history_the_georgian_reforms = {
		icon = GFX_decision_kirin_scroll
		
		ai_will_do = {
			factor = 0
		}
		
		complete_effect = {
			log = "[GetDateText] [Root.GetName]: Decision BRZ_history_the_georgian_reforms" 
			
			country_event = bronzehill_history.5
        }
	}
}

BRZ_debug_load_focus_trees = {
	BRZ_debug_load_initial = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_initial"
			
			clr_country_flag = BRZ_debug_initial_right
			clr_country_flag = BRZ_debug_initial_left
			
			mark_focus_tree_layout_dirty = yes
			
			load_focus_tree = bronzehill_initial_tree
		}
	}
	
	BRZ_debug_load_ignatius_regency = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_ignatius_regency"
			
			clr_country_flag = BRZ_debug_initial_right
			set_country_flag = BRZ_debug_initial_left
			
			mark_focus_tree_layout_dirty = yes
			
			load_focus_tree = bronzehill_ignatius_tree
		}
	}
	
	BRZ_debug_load_ignatius_postcoronation = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_ignatius_postcoronation"
			
			clr_country_flag = BRZ_debug_initial_right
			set_country_flag = BRZ_debug_initial_left
			
			mark_focus_tree_layout_dirty = yes
			
			load_focus_tree = bronzehill_ignatius_postcoronation
		}
	}
	
	BRZ_debug_load_barnabys_regency = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_barnabys_regency"
			
			clr_country_flag = BRZ_debug_initial_left
			set_country_flag = BRZ_debug_initial_right
			
			mark_focus_tree_layout_dirty = yes
			
			load_focus_tree = bronzehill_barnaby_tree
		}
	}
	
	BRZ_debug_load_barnaby_postcoronation = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_barnaby_postcoronation"
			
			clr_country_flag = BRZ_debug_initial_left
			set_country_flag = BRZ_debug_initial_right
			
			mark_focus_tree_layout_dirty = yes
			
			load_focus_tree = bronzehill_barnaby_postcoronation
		}
	}
	
	BRZ_debug_load_steelpaws_regency = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_steelpaws_regency"
			
			clr_country_flag = BRZ_debug_initial_left
			set_country_flag = BRZ_debug_initial_right
			
			mark_focus_tree_layout_dirty = yes
			
			load_focus_tree = bronzehill_steelpaw_tree
		}
	}
	
	BRZ_debug_load_steelpaw_postcoronation = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_steelpaw_postcoronation"
			
			clr_country_flag = BRZ_debug_initial_left
			set_country_flag = BRZ_debug_initial_right
			
			mark_focus_tree_layout_dirty = yes
			
			load_focus_tree = bronzehill_steelpaw_postcoronation
		}
	}
	
	BRZ_debug_load_softfurs_regency = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_softfurs_regency"
			
			clr_country_flag = BRZ_debug_initial_left
			set_country_flag = BRZ_debug_initial_right
			
			mark_focus_tree_layout_dirty = yes
			
			load_focus_tree = bronzehill_softfur_tree
		}
	}
	
	BRZ_debug_load_softfur_postcoronation = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_softfur_postcoronation"
			
			clr_country_flag = BRZ_debug_initial_left
			set_country_flag = BRZ_debug_initial_right
			
			mark_focus_tree_layout_dirty = yes
			
			load_focus_tree = bronzehill_softfur_postcoronation
		}
	}
	
	BRZ_debug_load_loudbarks_regency = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_loudbarks_regency"
			
			clr_country_flag = BRZ_debug_initial_left
			set_country_flag = BRZ_debug_initial_right
			
			mark_focus_tree_layout_dirty = yes
			
			load_focus_tree = bronzehill_loudbark_tree
		}
	}
	
	BRZ_debug_load_loudbark_postcoronation = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_loudbark_postcoronation"
			
			clr_country_flag = BRZ_debug_initial_left
			set_country_flag = BRZ_debug_initial_right
			
			mark_focus_tree_layout_dirty = yes
			
			load_focus_tree = bronzehill_loudbark_postcoronation
		}
	}
	
	BRZ_debug_load_grover_ii_flavour_tree = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_grover_ii_flavour_tree"
			
			load_focus_tree = bronzehill_grover_ii_tree
		}
	}
	
	BRZ_debug_load_revenge_tree = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_revenge_tree"
			
			load_focus_tree = bronzehill_revenge_tree
		}
	}
	
	BRZ_debug_load_post_griffenheim_revenge_tree = {
		icon = GFX_decision_generic
		
		available = {
			always = yes
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete BRZ_debug_load_post_griffenheim_revenge_tree"
			
			load_focus_tree = bronzehill_revenge_tree_full
		}
	}
}

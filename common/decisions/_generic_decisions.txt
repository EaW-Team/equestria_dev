political_actions = {

	targeted_race_for_the_bomb = {

		icon = generic_research

		allowed = {
			always = no
		}

		available = {
			#Target is FROM
			has_tech = atomic_research
			NOT = { has_global_flag = first_nuke_dropped }
			NOT = { has_idea = race_for_the_bomb }
		}

		target_root_trigger = {
			has_tech = atomic_research
			NOT = { has_global_flag = first_nuke_dropped }
			NOT = { has_idea = race_for_the_bomb }
		}

		#If this trigger matches a country.
		target_trigger = {
			#Target is FROM
			FROM = {
				NOT = { is_in_faction_with = ROOT }
				has_tech = nuclear_reactor
				any_owned_state = {
					nuclear_reactor > 0
				}
			}
		}

		visible = {
			#Target is FROM
			has_tech = atomic_research
			NOT = { has_global_flag = first_nuke_dropped }
			NOT = { has_idea = race_for_the_bomb }
			FROM = {
				NOT = { is_in_faction_with = ROOT }
				has_tech = nuclear_reactor
				any_owned_state = {
					nuclear_reactor > 0
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision targeted_race_for_the_bomb target: [From.GetName]"
			set_country_flag = racing_for_the_bomb
			add_ideas = race_for_the_bomb
		}

		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				any_other_country = { has_tech = nukes }
			}
		}
	}

	improved_worker_conditions = {

		icon = generic_industry

		available = {
			has_stability < 1.0
			if = {
				limit = { tag = EQC }
				NOT = {
					has_country_flag = is_maresoc
				}
			}
		}

		visible = {
			always = yes
			OR = {
			    if = {
			        limit = { original_tag = TRD }
			        has_government = communism
				}
				if = {
			        limit = { original_tag = TRD }
			        has_government = fascism
				}
			    if = {
			        limit = { original_tag = TRD }
					AND = {
			            has_government = democratic
				        has_completed_focus = TRD_altesburg
					}
				}
			}
			if = {
				limit = { original_tag = BAL }
				NOT = { is_subject_of = CHN }
			}
		}

		fire_only_once = no

		modifier = {
			stability_weekly = 0.005
			consumer_goods_factor = 0.05
			industrial_capacity_factory = -0.1
		}

		days_remove = 180
		days_re_enable = 540

		cost = 100

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision improved_worker_conditions"

		}

		ai_will_do = {
			base = 0
			modifier = {
				add = 1
				has_stability < 0.8
			}
			modifier = {
				add = 1
				has_stability < 0.6
			}
			modifier = {
				add = 5
				has_stability < 0.5
			}
			modifier = {
				add = 10
				has_stability < 0.3
			}
		}
	}

	promises_of_peace = {

		icon = flower

		available = {
			has_war = no
			has_war_support > 0.2
			has_stability < 1.0
			if = {
				limit = { tag = NIM }
				has_government = democratic
			}
		}

		visible = {
			always = yes
			OR = {
			    if = {
			        limit = { original_tag = TRD }
			        has_government = communism
				}
				if = {
			        limit = { original_tag = TRD }
			        has_government = fascism
				}
			    if = {
			        limit = { original_tag = TRD }
					AND = {
			            has_government = democratic
				        has_completed_focus = TRD_altesburg
					}
				}
			}
			if = {
				limit = { original_tag = BAL }
				NOT = { is_subject_of = CHN }
			}
		}

		remove_trigger = {
			has_war = yes
			has_war_support < 0.05
		}

		fire_only_once = no

		modifier = {
			stability_weekly = 0.005
			war_support_weekly = -0.01
			political_power_gain = -0.5
		}

		days_remove = 90
		days_re_enable = 360

		cost = 50

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision promises_of_peace"

		}

		ai_will_do = {
			base = 0
			modifier = {
				add = 1
				has_stability < 0.4
			}
		}
	}
}

economy_decisions = {

}

propaganda_efforts = {

	war_propaganda = {

		icon = generic_prepare_civil_war
		available = {
			NOT = { has_country_flag = war_propaganda_campaign_running }
			threat > 0.5
			has_war_support < 0.5
			has_offensive_war = no
			if = {
				limit = {
					OR = {
						tag = EQS
						tag = CRY
					}
					has_government = democratic
				}
				has_defensive_war = yes
			}
		}

		visible = {
            OR = {
			    if = {
			        limit = { original_tag = TRD }
			        has_government = communism
				}
				if = {
			        limit = { original_tag = TRD }
			        has_government = fascism
				}
			    if = {
			        limit = { original_tag = TRD }
					AND = {
			            has_government = democratic
				        has_completed_focus = TRD_altesburg
					}
			    }
			}
		}

		fire_only_once = no

		days_remove = 90
		days_re_enable = 180

		cost = 150

		modifier = {
			war_support_weekly = 0.01
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision war_propaganda"
			set_country_flag = war_propaganda_campaign_running
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove war_propaganda"
			clr_country_flag = war_propaganda_campaign_running
		}

		ai_will_do = {
			base = 0
			modifier = {
				add = 1
				has_war_support < 0.4
				has_war = yes
			}
		}
	}

	#Propaganda campaign against a country in offensive that has caused a lot of tension and started a war
	war_propaganda_against_warmonger = {

		icon = generic_prepare_civil_war

		available = {
			NOT = { has_country_flag = war_propaganda_campaign_running }
			FROM = {
				OR = {
					is_justifying_wargoal_against = ROOT
					AND = {
						has_war_with = ROOT
						is_neighbor_of = ROOT
					}
					has_offensive_war = yes
				}
			}
			if = {
				limit = {
					OR = {
						tag = EQS
						tag = CRY
					}
					has_government = democratic
				}
				OR = {
					has_defensive_war = yes
					FROM = {
						is_justifying_wargoal_against = ROOT
					}
				}
			}
		}

		visible = {
			FROM = {
				NOT = { is_in_faction_with = ROOT }
				OR = {
					is_justifying_wargoal_against = ROOT
					AND = {
						is_neighbor_of = ROOT
						OR = {
							has_war_with = ROOT
							AND = {
								NOT = { has_government = ROOT }
								has_offensive_war = yes
								has_added_tension_amount > 5
							}
						}
					}
					AND = {
						NOT = { is_neighbor_of = ROOT }
						OR = {
							has_offensive_war_with = ROOT
							AND = {
								NOT = { has_government = ROOT }
								has_offensive_war = yes
								has_added_tension_amount > 30
							}
						}
					}
				}
			}
		}

		target_trigger = {
			FROM = {
				NOT = { is_in_faction_with = ROOT }
				OR = {
					is_justifying_wargoal_against = ROOT
					AND = {
						is_neighbor_of = ROOT
						OR = {
							has_war_with = ROOT
							AND = {
								NOT = { has_government = ROOT }
								has_offensive_war = yes
								has_added_tension_amount > 5
							}
						}
					}
					AND = {
						NOT = { is_neighbor_of = ROOT }
						OR = {
							has_offensive_war_with = ROOT
							AND = {
								NOT = { has_government = ROOT }
								has_offensive_war = yes
								has_added_tension_amount > 30
							}
						}
					}
				}
			}
		}

		target_root_trigger = {
			OR = {
				is_ai = no
				NOT = { has_war_support > 0.9 }
			}
		}

		days_remove = 90
		days_re_enable = 180

		fire_only_once = yes

		cost = 25

		modifier = {
			war_support_weekly = 0.01
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision war_propaganda_against_warmonger target: [From.GetName]"
			set_country_flag = war_propaganda_campaign_running
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove war_propaganda_against_warmonger target: [From.GetName]"
			clr_country_flag = war_propaganda_campaign_running
		}

		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				has_war_support > 0.9
			}
		}
	}
}

operations = {


}

special_projects = {


}

war_measures = {

	emergency_factory_conversion_defensive = {

		icon = generic_industry

		available = {
			num_of_civilian_factories > 5 #Change this if amount of factories change
		}

		visible = {
			has_defensive_war = yes
			has_offensive_war = no
		}

		fire_only_once = no

		days_re_enable = 90

		cost = 100

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision emergency_factory_conversion_defensive"
			replace_civ_with_arms_factories = yes
			add_war_support = -0.05
		}
		ai_will_do = {
			factor = 0
		}
	}

	emergency_factory_conversion_offensive = {

		icon = generic_industry

		available = {
			num_of_civilian_factories > 5 #Change this if amount of factories change
		}

		visible = {
			has_offensive_war = yes
		}

		fire_only_once = no

		days_re_enable = 90

		cost = 100

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision emergency_factory_conversion_offensive"
			replace_civ_with_arms_factories = yes
			add_war_support = -0.05
			add_stability = -0.03
		}
		ai_will_do = {
			factor = 0
		}
	}

	desperate_defense = {

		icon = generic_prepare_civil_war

		available = {
			surrender_progress > 0.5
		}

		visible = {
			surrender_progress > 0
		}

		fire_only_once = no

		days_remove = 45
		days_re_enable = 360

		cost = 50
		ai_will_do = {
			factor = 1
			modifier = {
				surrender_progress > 0.6
				factor = 10
			}
		}

		modifier = {
			defence = 0.2
			dig_in_speed_factor = 0.5
			minimum_training_level = -0.05
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision desperate_defense"

		}
	}

	war_bonds = {

		icon = generic_industry

		allowed = {
			always = yes
		}

		available = {
			has_war = yes
			OR = {
				AND = {
					has_government = democratic
					has_war_support > 0.79
				}
				AND = {
					has_government = communism
					has_war_support > 0.79
				}
				AND = {
					has_government = fascism
					OR = {
						has_war_support > 0.89
						surrender_progress > 0
					}
				}
				AND = {
					has_government = neutrality
					has_war_support > 0.84
					has_stability > 0.7
				}
			}
		}
		visible = {
			has_war = yes
		}

		fire_only_once = no

		days_remove = 180

		cost = GER_war_bonds_var?50

		modifier = {
			consumer_goods_factor = -0.05
		}

		ai_will_do = {
			factor = 1
			modifier = {
				has_political_power < 100
				factor = 0 #use as pp dump
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove war_bonds"

		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision war_bonds"
			if = {
				limit = {
					check_variable = {
						var = GER_war_bonds_var
						value = 50
						compare = less_than
					}
				}
				set_variable = {
					var = GER_war_bonds_var
					value = 50
				}
			}
			add_to_variable = {
				var = GER_war_bonds_var
				value = 25
			}
			if = {
				limit = {
					check_variable = {
						var = GER_war_bonds_var
						value = 100
						compare = greater_than_or_equals
					}
					check_variable = {
						var = GER_war_bonds_war_support_var
						value = -0.025
						compare = greater_than
					}
				}
				set_variable = {
					var = GER_war_bonds_war_support_var
					value = -0.025
				}
			}
			if = {
				limit = {
					check_variable = {
						var = GER_war_bonds_war_support_var
						value = -0.025
						compare = less_than_or_equals
					}
				}
				add_to_variable = {
					var = GER_war_bonds_war_support_var
					value = -0.025
				}
				add_war_support = GER_war_bonds_war_support_var
			}
		}
    }
}

foreign_politics = {
	object_to_attaches = {

		allowed = {
			has_dlc = "Waking the Tiger"
		}

		cost = 50
		fire_only_once = no

		days_re_enable = 30

		available = {
		}

		visible = {
			NOT = { has_idea = detached_country }
			has_war = yes
			has_capitulated = no
			FROM = {
				NOT = { has_country_flag = rejected_withdrawing_attache }
				NOT = { has_country_flag = rejected_withdrawing_attache@ROOT }
				NOT = { has_country_flag = object_attache_going_on }
			}
			NOT = { has_war_with = FROM }
			any_enemy_country = {
				has_attache_from = FROM
			}
		}

		target_root_trigger = {
			NOT = { has_idea = detached_country }
			has_war = yes
			has_capitulated = no
		}

		target_trigger = {
			NOT = { has_war_with = FROM }
			#FROM = { has_sent_attache = yes } # Make such trigger to optimize if it becomes a performance problem again.
			any_enemy_country = {
				has_attache_from = FROM
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision object_to_attaches target: [From.GetName]"
			FROM = { country_event = { id = generic.14 hours = 6 } }
			hidden_effect = {
				FROM = { set_country_flag = object_attache_going_on }
			}
		}
		ai_will_do = {
			factor = 1
		}
	}
}

economy_decisions = {
	infrastructure_building_slot = {

		icon = generic_construction

		allowed = {
			always = yes
		}

		cost = 100
		fire_only_once = no

		days_re_enable = 30

		visible = {
			any_owned_state = {
				NOT = { has_state_flag = infrastructure_building_slot_flag }
				is_fully_controlled_by = ROOT
				free_building_slots = {
					building = infrastructure
					size < 1
				}
			}
			if = {
				limit = { original_tag = BAL }
				NOT = { is_subject_of = CHN }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision infrastructure_building_slot"
			random_owned_state = {
				limit = {
					is_fully_controlled_by = ROOT
					free_building_slots = {
						building = industrial_complex
						size > 1
						include_locked = yes
					}
					free_building_slots = {
						building = infrastructure
						size < 1
					}
					NOT = { has_state_flag = infrastructure_building_slot_flag }
				}
				add_extra_state_shared_building_slots = 1
				set_state_flag = infrastructure_building_slot_flag
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 10
				any_owned_state = { free_building_slots = { building = industrial_complex size < 1 include_locked = no } }
			}
		}
	}

    war_building_slot = {

    	icon = generic_construction

        allowed = {
            always = yes
        }

        cost = 50
        fire_only_once = no

        available = {
            has_war = yes
            any_owned_state = {
            	NOT = { has_state_flag = war_building_slot_flag }
            	is_fully_controlled_by = ROOT
            }
			if = {
				limit = { original_tag = BAL }
				NOT = { is_subject_of = CHN }
			}
        }

        visible = {
			has_war = yes
			any_owned_state = {
				NOT = { has_state_flag = war_building_slot_flag }
				is_fully_controlled_by = ROOT
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision war_building_slot"
        	add_war_support = -0.025
			add_stability = -0.025
			if = {
				limit = {
					any_owned_state = {
						is_fully_controlled_by = ROOT
            			free_building_slots = {
							building = industrial_complex
							size > 1
							include_locked = yes
						}
						NOT = { has_state_flag = war_building_slot_flag }
						infrastructure > 8
					}
				}
				random_owned_state = {
					limit = {
						is_fully_controlled_by = ROOT
            			free_building_slots = {
							building = industrial_complex
							size > 1
							include_locked = yes
						}
						NOT = { has_state_flag = war_building_slot_flag }
						infrastructure > 8
					}
					add_extra_state_shared_building_slots = 1
					set_state_flag = war_building_slot_flag
				}
			}
			else_if = {
				limit = {
					any_owned_state = {
						is_fully_controlled_by = ROOT
            			free_building_slots = {
							building = industrial_complex
							size > 1
							include_locked = yes
						}
						NOT = { has_state_flag = war_building_slot_flag }
						infrastructure > 5
					}
				}
				random_owned_state = {
					limit = {
						is_fully_controlled_by = ROOT
            			free_building_slots = {
							building = industrial_complex
							size > 1
							include_locked = yes
						}
						NOT = { has_state_flag = war_building_slot_flag }
						infrastructure > 5
					}
					add_extra_state_shared_building_slots = 1
					set_state_flag = war_building_slot_flag
				}
			}
			else = {
				random_owned_state = {
					limit = {
						is_fully_controlled_by = ROOT
            			free_building_slots = {
							building = industrial_complex
							size > 1
							include_locked = yes
						}
						NOT = { has_state_flag = war_building_slot_flag }
						infrastructure > 8
					}
					add_extra_state_shared_building_slots = 1
					set_state_flag = war_building_slot_flag
				}
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 10
				all_owned_state = { free_building_slots = { building = industrial_complex size < 1 include_locked = no } }
			}
			modifier = {
				any_owned_state = {
					infrastructure > 5
					free_building_slots = { building = industrial_complex size > 0 include_locked = no }
				}
				factor = 0
			}
		}
    }
}
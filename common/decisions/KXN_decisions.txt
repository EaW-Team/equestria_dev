KXN_Conquest_Category = {
	KXN_Clarion_Legacy_Mission = {
		icon = candle
		allowed = { tag = KXN }
		activation = { always = no }

		selectable_mission = yes
		days_mission_timeout = 90
		is_good = no

		available = {
			count_triggers = {
				amount = 3
				has_country_flag = KXN_Trans_Zebrica_Railway_Decision_Completed_Flag
				has_completed_focus = KXN_Focus_DAM
				has_completed_focus = KXN_Focus_CAPITAL_3
				has_completed_focus = KXN_Focus_LAND_8
				has_completed_focus = KXN_Focus_LEVELUP_4
				KXC = {
					has_completed_focus = KXN_Focus_KIRINISATION_C
				}
				KXC = {
					has_completed_focus = KXN_Focus_KIRINISATION_D
				}
				KXU = {
					has_completed_focus = KXN_Focus_ULTIMA
				}
				has_built = {
					type = infrastructure
					value > 25
				}
				has_built = {
					type = rail_way
					value > 75
				}
			}
		}
		cost = 100
		ai_will_do = {
			factor = 200
		}

		fire_only_once = yes
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Clarion_Legacy_Mission"
			add_war_support = -0.05
			add_stability = -0.05
			add_command_power = -100
			add_political_power = -150
			subtract_from_variable = { KXN.KXN_The_Shattering_State_Limit_Var = 15 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Clarion_Legacy_Mission"
			add_political_power = 150
			add_stability = 0.05
			if = {
				limit = {
					KXN = {
						num_subjects > 0
						any_subject_country = {
							has_idea = KXN_Tributary_State
						}
					}
				}
				KXN = {
					every_subject_country = {
						limit = {
							has_idea = KXN_Tributary_State
						}
						custom_effect_tooltip = KXN_Decrease_Tributary_Unrest_tt
						subtract_from_variable = { KXN_Tributary_Unrest_Var = 1 }
						clamp_variable = { var = KXN_Tributary_Unrest_Var min = 0 }
					}
				}
			}
			add_to_variable = { KXN.KXN_The_Shattering_State_Limit_Var = 15 }
		}

		cancel_trigger = {
			hidden_trigger = {
				has_country_flag = KXN_The_Beginning_Of_The_End
			}
		}
	}
	KXN_Conquest_Mission_1 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes ## Needed to enable custom_cost_text
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_1_Cost_tt ## Stage Indicator
		days_mission_timeout = KXN_Conquest_Mission_1_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_1 = { ## Enemy country defeated
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_1"
			custom_effect_tooltip = KXN_Conquest_Mission_1_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_1_Active ## Frees up mission
				clear_variable = KXN_Conquest_Mission_1_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_1_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_1
				activate_mission = KXN_Conquest_Mission_1 ## Removes the mission from the menu
				remove_mission = KXN_Conquest_Mission_1
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_1"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_1 = { ## If prerequisites have been met but player forgot to click
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_1_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_1 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_1_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_1 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_1_Active
				clear_variable = KXN_Conquest_Mission_1_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_1_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_1
				activate_mission = KXN_Conquest_Mission_1
				remove_mission = KXN_Conquest_Mission_1
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_1 = { ## White peace with enemy country
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_1"
			clr_country_flag = KXN_Conquest_Mission_1_Active
			clear_variable = KXN_Conquest_Mission_1_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_1_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_1
		}
	}
	KXN_Conquest_Mission_2 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_2_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_2_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_2 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_2"
			custom_effect_tooltip = KXN_Conquest_Mission_2_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_2_Active
				clear_variable = KXN_Conquest_Mission_2_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_2_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_2
				activate_mission = KXN_Conquest_Mission_2
				remove_mission = KXN_Conquest_Mission_2
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_2"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_2 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_2_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_2 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_2_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_2 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_2_Active
				clear_variable = KXN_Conquest_Mission_2_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_2_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_2
				activate_mission = KXN_Conquest_Mission_2
				remove_mission = KXN_Conquest_Mission_2
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_2 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_2"
			clr_country_flag = KXN_Conquest_Mission_2_Active
			clear_variable = KXN_Conquest_Mission_2_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_2_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_2
		}
	}
	KXN_Conquest_Mission_3 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_3_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_3_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_3 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_3"
			custom_effect_tooltip = KXN_Conquest_Mission_3_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_3_Active
				clear_variable = KXN_Conquest_Mission_3_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_3_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_3
				activate_mission = KXN_Conquest_Mission_3
				remove_mission = KXN_Conquest_Mission_3
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_3"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_3 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_3_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_3 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_3_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_3 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_3_Active
				clear_variable = KXN_Conquest_Mission_3_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_3_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_3
				activate_mission = KXN_Conquest_Mission_3
				remove_mission = KXN_Conquest_Mission_3
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_3 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_3"
			clr_country_flag = KXN_Conquest_Mission_3_Active
			clear_variable = KXN_Conquest_Mission_3_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_3_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_3
		}
	}
	KXN_Conquest_Mission_4 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_4_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_4_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_4 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_4"
			custom_effect_tooltip = KXN_Conquest_Mission_4_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_4_Active
				clear_variable = KXN_Conquest_Mission_4_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_4_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_4
				activate_mission = KXN_Conquest_Mission_4
				remove_mission = KXN_Conquest_Mission_4
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_4"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_4 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_4_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_4 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_4_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_4 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_4_Active
				clear_variable = KXN_Conquest_Mission_4_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_4_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_4
				activate_mission = KXN_Conquest_Mission_4
				remove_mission = KXN_Conquest_Mission_4
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_4 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_4"
			clr_country_flag = KXN_Conquest_Mission_4_Active
			clear_variable = KXN_Conquest_Mission_4_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_4_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_4
		}
	}
	KXN_Conquest_Mission_5 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_5_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_5_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_5 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_5"
			custom_effect_tooltip = KXN_Conquest_Mission_5_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_5_Active
				clear_variable = KXN_Conquest_Mission_5_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_5_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_5
				activate_mission = KXN_Conquest_Mission_5
				remove_mission = KXN_Conquest_Mission_5
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_5"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_5 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_5_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_5 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_5_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_5 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_5_Active
				clear_variable = KXN_Conquest_Mission_5_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_5_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_5
				activate_mission = KXN_Conquest_Mission_5
				remove_mission = KXN_Conquest_Mission_5
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_5 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_5"
			clr_country_flag = KXN_Conquest_Mission_5_Active
			clear_variable = KXN_Conquest_Mission_5_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_5_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_5
		}
	}
	KXN_Conquest_Mission_6 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_6_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_6_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_6 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_6"
			custom_effect_tooltip = KXN_Conquest_Mission_6_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_6_Active
				clear_variable = KXN_Conquest_Mission_6_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_6_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_6
				activate_mission = KXN_Conquest_Mission_6
				remove_mission = KXN_Conquest_Mission_6
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_6"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_6 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_6_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_6 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_6_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_6 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_6_Active
				clear_variable = KXN_Conquest_Mission_6_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_6_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_6
				activate_mission = KXN_Conquest_Mission_6
				remove_mission = KXN_Conquest_Mission_6
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_6 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_6"
			clr_country_flag = KXN_Conquest_Mission_6_Active
			clear_variable = KXN_Conquest_Mission_6_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_6_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_6
		}
	}
	KXN_Conquest_Mission_7 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_7_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_7_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_7 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_7"
			custom_effect_tooltip = KXN_Conquest_Mission_7_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_7_Active
				clear_variable = KXN_Conquest_Mission_7_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_7_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_7
				activate_mission = KXN_Conquest_Mission_7
				remove_mission = KXN_Conquest_Mission_7
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_7"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_7 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_7_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_7 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_7_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_7 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_7_Active
				clear_variable = KXN_Conquest_Mission_7_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_7_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_7
				activate_mission = KXN_Conquest_Mission_7
				remove_mission = KXN_Conquest_Mission_7
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_7 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_7"
			clr_country_flag = KXN_Conquest_Mission_7_Active
			clear_variable = KXN_Conquest_Mission_7_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_7_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_7
		}
	}
	KXN_Conquest_Mission_8 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_8_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_8_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_8 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_8"
			custom_effect_tooltip = KXN_Conquest_Mission_8_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_8_Active
				clear_variable = KXN_Conquest_Mission_8_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_8_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_8
				activate_mission = KXN_Conquest_Mission_8
				remove_mission = KXN_Conquest_Mission_8
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_8"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_8 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_8_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_8 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_8_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_8 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_8_Active
				clear_variable = KXN_Conquest_Mission_8_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_8_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_8
				activate_mission = KXN_Conquest_Mission_8
				remove_mission = KXN_Conquest_Mission_8
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_8 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_8"
			clr_country_flag = KXN_Conquest_Mission_8_Active
			clear_variable = KXN_Conquest_Mission_8_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_8_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_8
		}
	}
	KXN_Conquest_Mission_9 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_9_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_9_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_9 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_9"
			custom_effect_tooltip = KXN_Conquest_Mission_9_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_9_Active
				clear_variable = KXN_Conquest_Mission_9_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_9_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_9
				activate_mission = KXN_Conquest_Mission_9
				remove_mission = KXN_Conquest_Mission_9
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_9"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_9 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_9_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_9 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_9_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_9 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_9_Active
				clear_variable = KXN_Conquest_Mission_9_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_9_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_9
				activate_mission = KXN_Conquest_Mission_9
				remove_mission = KXN_Conquest_Mission_9
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_9 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_9"
			clr_country_flag = KXN_Conquest_Mission_9_Active
			clear_variable = KXN_Conquest_Mission_9_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_9_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_9
		}
	}
	KXN_Conquest_Mission_10 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_10_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_10_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_10 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_10"
			custom_effect_tooltip = KXN_Conquest_Mission_10_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_10_Active
				clear_variable = KXN_Conquest_Mission_10_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_10_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_10
				activate_mission = KXN_Conquest_Mission_10
				remove_mission = KXN_Conquest_Mission_10
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_10"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_10 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_10_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_10 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_10_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_10 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_10_Active
				clear_variable = KXN_Conquest_Mission_10_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_10_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_10
				activate_mission = KXN_Conquest_Mission_10
				remove_mission = KXN_Conquest_Mission_10
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_10 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_10"
			clr_country_flag = KXN_Conquest_Mission_10_Active
			clear_variable = KXN_Conquest_Mission_10_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_10_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_10
		}
	}
	KXN_Conquest_Mission_11 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_11_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_11_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_11 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_11"
			custom_effect_tooltip = KXN_Conquest_Mission_11_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_11_Active
				clear_variable = KXN_Conquest_Mission_11_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_11_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_11
				activate_mission = KXN_Conquest_Mission_11
				remove_mission = KXN_Conquest_Mission_11
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_11"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_11 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_11_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_11 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_11_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_11 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_11_Active
				clear_variable = KXN_Conquest_Mission_11_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_11_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_11
				activate_mission = KXN_Conquest_Mission_11
				remove_mission = KXN_Conquest_Mission_11
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_11 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_11"
			clr_country_flag = KXN_Conquest_Mission_11_Active
			clear_variable = KXN_Conquest_Mission_11_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_11_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_11
		}
	}
	KXN_Conquest_Mission_12 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_12_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_12_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_12 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_12"
			custom_effect_tooltip = KXN_Conquest_Mission_12_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_12_Active
				clear_variable = KXN_Conquest_Mission_12_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_12_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_12
				activate_mission = KXN_Conquest_Mission_12
				remove_mission = KXN_Conquest_Mission_12
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_12"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_12 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_12_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_12 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_12_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_12 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_12_Active
				clear_variable = KXN_Conquest_Mission_12_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_12_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_12
				activate_mission = KXN_Conquest_Mission_12
				remove_mission = KXN_Conquest_Mission_12
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_12 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_12"
			clr_country_flag = KXN_Conquest_Mission_12_Active
			clear_variable = KXN_Conquest_Mission_12_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_12_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_12
		}
	}
	KXN_Conquest_Mission_13 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_13_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_13_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_13 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_13"
			custom_effect_tooltip = KXN_Conquest_Mission_13_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_13_Active
				clear_variable = KXN_Conquest_Mission_13_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_13_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_13
				activate_mission = KXN_Conquest_Mission_13
				remove_mission = KXN_Conquest_Mission_13
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_13"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_13 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_13_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_13 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_13_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_13 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_13_Active
				clear_variable = KXN_Conquest_Mission_13_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_13_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_13
				activate_mission = KXN_Conquest_Mission_13
				remove_mission = KXN_Conquest_Mission_13
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_13 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_13"
			clr_country_flag = KXN_Conquest_Mission_13_Active
			clear_variable = KXN_Conquest_Mission_13_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_13_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_13
		}
	}
	KXN_Conquest_Mission_14 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_14_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_14_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_14 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_14"
			custom_effect_tooltip = KXN_Conquest_Mission_14_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_14_Active
				clear_variable = KXN_Conquest_Mission_14_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_14_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_14
				activate_mission = KXN_Conquest_Mission_14
				remove_mission = KXN_Conquest_Mission_14
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_14"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_14 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_14_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_14 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_14_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_14 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_14_Active
				clear_variable = KXN_Conquest_Mission_14_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_14_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_14
				activate_mission = KXN_Conquest_Mission_14
				remove_mission = KXN_Conquest_Mission_14
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_14 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_14"
			clr_country_flag = KXN_Conquest_Mission_14_Active
			clear_variable = KXN_Conquest_Mission_14_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_14_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_14
		}
	}
	KXN_Conquest_Mission_15 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_15_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_15_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_15 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_15"
			custom_effect_tooltip = KXN_Conquest_Mission_15_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_15_Active
				clear_variable = KXN_Conquest_Mission_15_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_15_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_15
				activate_mission = KXN_Conquest_Mission_15
				remove_mission = KXN_Conquest_Mission_15
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_15"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_15 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_15_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_15 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_15_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_15 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_15_Active
				clear_variable = KXN_Conquest_Mission_15_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_15_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_15
				activate_mission = KXN_Conquest_Mission_15
				remove_mission = KXN_Conquest_Mission_15
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_15 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_15"
			clr_country_flag = KXN_Conquest_Mission_15_Active
			clear_variable = KXN_Conquest_Mission_15_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_15_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_15
		}
	}
	KXN_Conquest_Mission_16 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_16_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_16_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_16 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_16"
			custom_effect_tooltip = KXN_Conquest_Mission_16_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_16_Active
				clear_variable = KXN_Conquest_Mission_16_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_16_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_16
				activate_mission = KXN_Conquest_Mission_16
				remove_mission = KXN_Conquest_Mission_16
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_16"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_16 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_16_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_16 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_16_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_16 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_16_Active
				clear_variable = KXN_Conquest_Mission_16_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_16_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_16
				activate_mission = KXN_Conquest_Mission_16
				remove_mission = KXN_Conquest_Mission_16
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_16 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_16"
			clr_country_flag = KXN_Conquest_Mission_16_Active
			clear_variable = KXN_Conquest_Mission_16_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_16_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_16
		}
	}
	KXN_Conquest_Mission_17 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_17_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_17_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_17 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_17"
			custom_effect_tooltip = KXN_Conquest_Mission_17_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_17_Active
				clear_variable = KXN_Conquest_Mission_17_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_17_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_17
				activate_mission = KXN_Conquest_Mission_17
				remove_mission = KXN_Conquest_Mission_17
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_17"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_17 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_17_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_17 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_17_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_17 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_17_Active
				clear_variable = KXN_Conquest_Mission_17_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_17_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_17
				activate_mission = KXN_Conquest_Mission_17
				remove_mission = KXN_Conquest_Mission_17
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_17 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_17"
			clr_country_flag = KXN_Conquest_Mission_17_Active
			clear_variable = KXN_Conquest_Mission_17_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_17_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_17
		}
	}
	KXN_Conquest_Mission_18 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_18_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_18_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_18 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_18"
			custom_effect_tooltip = KXN_Conquest_Mission_18_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_18_Active
				clear_variable = KXN_Conquest_Mission_18_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_18_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_18
				activate_mission = KXN_Conquest_Mission_18
				remove_mission = KXN_Conquest_Mission_18
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_18"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_18 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_18_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_18 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_18_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_18 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_18_Active
				clear_variable = KXN_Conquest_Mission_18_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_18_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_18
				activate_mission = KXN_Conquest_Mission_18
				remove_mission = KXN_Conquest_Mission_18
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_18 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_18"
			clr_country_flag = KXN_Conquest_Mission_18_Active
			clear_variable = KXN_Conquest_Mission_18_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_18_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_18
		}
	}
	KXN_Conquest_Mission_19 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_19_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_19_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_19 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_19"
			custom_effect_tooltip = KXN_Conquest_Mission_19_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_19_Active
				clear_variable = KXN_Conquest_Mission_19_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_19_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_19
				activate_mission = KXN_Conquest_Mission_19
				remove_mission = KXN_Conquest_Mission_19
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_19"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_19 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_19_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_19 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_19_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_19 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_19_Active
				clear_variable = KXN_Conquest_Mission_19_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_19_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_19
				activate_mission = KXN_Conquest_Mission_19
				remove_mission = KXN_Conquest_Mission_19
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_19 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_19"
			clr_country_flag = KXN_Conquest_Mission_19_Active
			clear_variable = KXN_Conquest_Mission_19_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_19_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_19
		}
	}
	KXN_Conquest_Mission_20 = {
		icon = generic_ignite_civil_war
		allowed = { tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_20_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_20_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_20 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_20"
			custom_effect_tooltip = KXN_Conquest_Mission_20_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_20_Active
				clear_variable = KXN_Conquest_Mission_20_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_20_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_20
				activate_mission = KXN_Conquest_Mission_20
				remove_mission = KXN_Conquest_Mission_20
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_20"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_20 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_20_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_20 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_20_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_20 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_20_Active
				clear_variable = KXN_Conquest_Mission_20_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_20_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_20
				activate_mission = KXN_Conquest_Mission_20
				remove_mission = KXN_Conquest_Mission_20
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_20 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_20"
			clr_country_flag = KXN_Conquest_Mission_20_Active
			clear_variable = KXN_Conquest_Mission_20_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_20_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_20
		}
	}
	KXN_Infiltrate_Golden_City = {
		icon = CES_construct_the_grand_lodge
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_country_flag = KXN_Infiltrate_Golden_City_Flag
			NOT = { has_global_flag = fall_of_golden_city }
		}
		
		available = {
			DEL = {
				exists = yes
				has_capitulated = no
				is_subject = no
				controls_state = 1139
			}
			has_war_with = DEL
			NOT = { has_full_control_of_state = 1139 }
			divisions_in_state = {
				size > 4
				state = 1139
			}
		}
		
		custom_cost_trigger = {
			ROOT = {
				check_variable = { var = command_power value = 15 compare = greater_than_or_equals }
				has_political_power > 14
			}
		}
		
		ai_hint_pp_cost = 15

		custom_cost_text = decision_cost_CP_15_pp_15

		days_remove = 30
		fire_only_once = yes

		modifier = {
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Infiltrate_Golden_City"
			hidden_effect = {
				add_command_power = -15
				add_political_power = -15
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Infiltrate_Golden_City"
			country_event = { id = lan_kir.408 hours = 3 }
			save_current_manpower = yes
			1139 = {
				add_manpower = -250
				damage_building = { type = infrastructure damage = 1.5 }
			}
			restore_previous_manpower = yes
			custom_effect_tooltip = KXN_Infiltrate_Golden_City_tt
			set_global_flag = {
				flag = KXN_Has_Infiltrated_Golden_City
				days = 30
				value = 1
			}
		}
	}
	
	KXN_Operation_Glowworm = {
		icon = onmap_recruit_operative
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		visible = {
			has_completed_focus = KXN_Focus_AGENCY
		}
		
		available = {
			if = {
				limit = { is_ai = no }
				has_tech = radio
				any_enemy_country = {
					OR = {
						has_idea = modern_society
						has_idea = outdated_industry
						has_idea = outdated_industry2
					}
				}
			}
		}

		cost = 75
		fire_only_once = yes
		days_remove = 70
		modifier = {
			planning_speed = -0.25
			command_power_gain_mult = -0.25
		}
		
		complete_effect = {
		}

		remove_effect = {
			custom_effect_tooltip = KXN_Operation_Glowworm_TT
			hidden_effect = { d_add_fake_armies = yes }
		}
	}
	KXN_Hunt_For_Monster_Decision = {
		icon = kirin_vanguard
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		visible = {
			has_tech = KXN_Monster_Ally
			has_equipment = { monster_equipment < 100 }
		}
		
		ai_hint_pp_cost = 50
		custom_cost_text = decision_cost_500_guns_50_pp
		custom_cost_trigger = {
			has_political_power > 49
			has_equipment = { infantry_equipment > 499 }
		}
		
		days_remove = 60
    
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Hunt_For_Monster_Decision"
			hidden_effect = {
				add_political_power = -50
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = -500
				}
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Hunt_For_Monster_Decision"
			add_equipment_to_stockpile = {
				type = monster_equipment_0
				amount = 250
			}
		}
	}
	KXN_Clarion_Legacy_Mission_Add_Time = {
		icon = clock_decision
		allowed = { tag = KXN }
		ai_will_do = { factor = 5 }

		visible = {
			has_active_mission = KXN_Clarion_Legacy_Mission
			check_variable = { KXN.KXN_Clarion_Legacy_Mission_Add_Time_Taken_Var < 5 }
		}
		
		cost = KXN.KXN_Clarion_Legacy_Mission_Add_Time_Cost
		
		days_re_enable = 60
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Clarion_Legacy_Mission_Add_Time"
			add_to_variable = { KXN.KXN_Clarion_Legacy_Mission_Add_Time_Taken_Var = 1 }
			add_to_variable = { KXN.KXN_Clarion_Legacy_Mission_Add_Time_Cost = 50 }
			add_days_mission_timeout = {
				mission = KXN_Clarion_Legacy_Mission
				days = 70
			}
			custom_effect_tooltip = KXN_Clarion_Legacy_Mission_Add_Time_tt
		}
	}
}

KXN_Tributaries_Category = {
	Form_KXN_Vermilion = {
		icon = generic_form_nation
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		available = {
			has_full_control_of_state = 1059
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		highlight_states = {
			highlight_state_targets = {
				state = 1059
			}
		}
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Vermilion"
			hidden_effect = { add_manpower = -25000 add_political_power = -50 }
			if = {
				limit = {
					NOT = {
						has_global_flag = Form_KXN_Vermilion_Flag
					}
				}
				set_global_flag = Form_KXN_Vermilion_Flag
				custom_effect_tooltip = Form_KXN_Vermilion_tt
				hidden_effect = {
					every_state = {
						limit = {
							OR = {
								region = 316
								region = 283
								region = 82
								region = 79
								region = 31
								state = 1065
							}
						}
						add_to_array = { KXN.KXN_Vermilion_States_Array = THIS }
					}
					create_dynamic_country = {
						original_tag = KXN
						set_country_flag = KXN_Vermilion_Flag
						set_cosmetic_tag = KXN_Vermilion
						1059 = {
							controller = {
								if = {
									limit = {
										1059 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXV = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXV = { transfer_state = 1059 }
								}
							}
						}
						add_state_core = 1059
						set_capital = {
							state = 1059
						}
						set_party_name = {
							ideology = fascism
							long_name = KXN_Vermilion_party
							name = KXN_Vermilion_party
						}
						KXN_SETUP_PUPPET_EFFECT = yes
						retire_ideology_leader = fascism
						set_country_leader_ideology = falangism
						add_ideas = KXN_Rain_Shine
						set_country_leader_portrait = { portrait = "GFX_portrait_unknown_kirin_male" }
					}
					KXN_Puppet_Reset_All_Frames = yes
					set_country_flag = KXN_1_Decision_Flag
					KXV = { set_country_flag = KXN_Satellite_Decision_Flag }
					set_variable = { KXN.KXN_Puppet_Frame_1_Var = 2 }
				}
			}
		}
	}
	Give_State_KXN_Vermilion = {
		icon = transfer_state_g
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Vermilion_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_1_Decision_Flag
			KXV = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Vermilion_State_Limit_TT
				KXV = { check_variable = { KXV_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXV }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXV }
					is_one_state_island = yes
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
					KXN_IS_SATELLITE_TRIGGER = no
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Vermilion target: [From.GetName]"
			KXV = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXV_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Vermilion = {
		icon = transfer_state_r
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXV.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_1_Decision_Flag
			KXV = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXV
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Vermilion target: [From.GetName]"
			transfer_state = FROM
			if = {
				limit = { 
					FROM = { is_core_of = KXV }
				}
				KXV = {
					remove_state_core = FROM
					subtract_from_variable = { KXV_Num_States = 1 }
					clamp_variable = { var = KXV_Num_States min = 0 }
				}
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
		
	Form_KXN_Fragrance = {
		icon = generic_form_nation
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		available = {
			has_full_control_of_state = 1071
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		highlight_states = {
			highlight_state_targets = {
				state = 1071
			}
		}
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Fragrance"
			hidden_effect = { add_manpower = -25000 add_political_power = -50 }
			if = {
				limit = {
					NOT = {
						has_global_flag = Form_KXN_Fragrance_Flag
					}
				}
				set_global_flag = Form_KXN_Fragrance_Flag
				custom_effect_tooltip = Form_KXN_Fragrance_tt
				hidden_effect = {
					every_state = {
						limit = {
							OR = {
								region = 283
								region = 145
								state = 1060
								state = 1061
							}
						}
						add_to_array = { KXN.KXN_Fragrance_States_Array = THIS }
					}
					create_dynamic_country = {
						original_tag = KXN
						set_country_flag = KXN_Fragrance_Flag
						set_cosmetic_tag = KXN_Fragrance
						1071 = {
							controller = {
								if = {
									limit = {
										1071 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXF = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXF = { transfer_state = 1071 }
								}
							}
						}
						add_state_core = 1071
						set_capital = {
							state = 1071
						}
						set_party_name = {
							ideology = fascism
							long_name = KXN_Fragrance_party
							name = KXN_Fragrance_party
						}
						KXN_SETUP_PUPPET_EFFECT = yes
						retire_ideology_leader = fascism
						set_country_leader_ideology = plutocracy
						set_country_leader_portrait = { portrait = "GFX_portrait_unknown_kirin_female" }
					}
					KXN_Puppet_Reset_All_Frames = yes
					set_country_flag = KXN_2_Decision_Flag
					KXF = { set_country_flag = KXN_Satellite_Decision_Flag }
					set_variable = { KXN.KXN_Puppet_Frame_2_Var = 2 }
				}
			}
		}
	}
	Give_State_KXN_Fragrance = {
		icon = transfer_state_g
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Fragrance_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_2_Decision_Flag
			KXF = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Fragrance_State_Limit_TT
				KXF = { check_variable = { KXF_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXF }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXF }
					is_one_state_island = yes
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
					KXN_IS_SATELLITE_TRIGGER = no
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Fragrance target: [From.GetName]"
			KXF = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXF_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Fragrance = {
		icon = transfer_state_r
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXF.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_2_Decision_Flag
			KXF = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXF
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Fragrance target: [From.GetName]"
			transfer_state = FROM
			if = {
				limit = { 
					FROM = { is_core_of = KXF }
				}
				KXF = {
					remove_state_core = FROM
					subtract_from_variable = { KXF_Num_States = 1 }
					clamp_variable = { var = KXF_Num_States min = 0 }
				}
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
		
	Form_KXN_Exarchate = {
		icon = generic_form_nation
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		available = {
			OR = {
				has_full_control_of_state = 1139
				has_full_control_of_state = 1158
			}
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Exarchate"
			hidden_effect = {
				add_manpower = -25000
				add_political_power = -50
				add_to_array = { KXN.Form_KXN_Exarchate_Choose_States_Array = 1139 }
				add_to_array = { KXN.Form_KXN_Exarchate_Choose_States_Array = 1158 }
			}
			if = {
				limit = {
					has_full_control_of_state = 1139
					has_full_control_of_state = 1158
				}
				custom_effect_tooltip = Form_KXN_Exarchate_tt1
				hidden_effect = {
					set_country_flag = Form_KXN_Exarchate_Choose_Flag
				}
			}
			else = {
				custom_effect_tooltip = Form_KXN_Exarchate_tt
				hidden_effect = {
					if = {
						limit = {
							has_full_control_of_state = 1139
							NOT = { has_full_control_of_state = 1158 }
						}
						KXN_FORM_EXARCHATE_EFFECT = yes
						1139 = {
							controller = {
								if = {
									limit = {
										1139 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXK = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXK = { transfer_state = 1139 }
								}
							}
						}
						KXK = {
							add_state_core = 1139
							set_capital = {
								state = 1139
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1158
							NOT = { has_full_control_of_state = 1139 }
						}
						KXN_FORM_EXARCHATE_EFFECT = yes
						1158 = {
							controller = {
								if = {
									limit = {
										1158 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXK = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXK = { transfer_state = 1158 }
								}
							}
						}
						KXK = {
							add_state_core = 1158
							set_capital = {
								state = 1158
							}
						}
					}
					KXN_Puppet_Reset_All_Frames = yes
					set_country_flag = KXN_3_Decision_Flag
					KXK = { set_country_flag = KXN_Satellite_Decision_Flag }
					set_variable = { KXN.KXN_Puppet_Frame_3_Var = 2 }
				}
			}
			KXK = {
				if = {
					limit = {
						controls_state = 1139
					}
					if = {
						limit = {
							NOT = { has_global_flag = thunder_tiger_nuked }
						}
						add_ideas = golden_city
					}
					else_if = {
						limit = {
							has_global_flag = thunder_tiger_nuked
						}
						add_ideas = golden_city_ruined
					}
				}
			}
		}
	}
	Form_KXN_Exarchate_Choose = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		state_target = yes
		target_array = KXN.Form_KXN_Exarchate_Choose_States_Array
		on_map_mode = map_only
		
		fire_only_once = yes
		
		visible = {
			has_country_flag = Form_KXN_Exarchate_Choose_Flag
		}
		
		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = Form_KXN_Satellite_Not_Capital_tt
				FROM = { KXN_IS_SATELLITE_CAPITAL_TRIGGER = yes }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Exarchate_Choose target: [From.GetName]"
			custom_effect_tooltip = Form_KXN_Exarchate_Choose_tt
			hidden_effect = {
				clr_country_flag = Form_KXN_Exarchate_Choose_Flag
				KXN_FORM_EXARCHATE_EFFECT = yes
				FROM = {
					controller = {
						if = {
							limit = {
								FROM = { is_capital = yes }
								check_variable = { num_owned_controlled_states < 2 }
								is_subject_of = KXN
							}
							KXK = {
								annex_country = {
									target = PREV
									transfer_troops = yes
								}
							}
						}
						else = {
							KXK = { transfer_state = FROM }
						}
					}
				}
				KXK = {
					add_state_core = FROM
					set_capital = {
						state = FROM
					}
				}
				KXN_Puppet_Reset_All_Frames = yes
				set_country_flag = KXN_3_Decision_Flag
				KXK = { set_country_flag = KXN_Satellite_Decision_Flag }
				set_variable = { KXN.KXN_Puppet_Frame_3_Var = 2 }
			}
		}
	}
	
	Move_KXN_Exarchate_Capital = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		target_array = KXN.Form_KXN_Exarchate_Choose_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_3_Decision_Flag
			KXK = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 10
		
		target_trigger = {
			FROM = {
				is_fully_controlled_by = KXK
				is_owned_and_controlled_by = KXK
				is_core_of = KXK
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Move_KXN_Exarchate_Capital target: [From.GetName]"
			KXK = {
				set_capital = {
					state = FROM
				}
				if = {
					limit = {
						FROM = { state = 1139 }
						NOT = {
							has_idea = golden_city
							has_idea = golden_city_ruined
						}
					}
					if = {
						limit = {
							NOT = { has_global_flag = thunder_tiger_nuked }
						}
						add_ideas = golden_city
					}
					else_if = {
						limit = {
							has_global_flag = thunder_tiger_nuked
						}
						add_ideas = golden_city_ruined
					}
				}
			}
		}
	}
	Give_State_KXN_Exarchate = {
		icon = transfer_state_g
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Exarchate_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_3_Decision_Flag
			KXK = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Exarchate_State_Limit_TT
				KXK = { check_variable = { KXK_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXK }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXK }
					is_one_state_island = yes
					state = 1139
					state = 1158
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
					KXN_IS_SATELLITE_TRIGGER = no
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Exarchate target: [From.GetName]"
			KXK = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXK_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Exarchate = {
		icon = transfer_state_r
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXK.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_3_Decision_Flag
			KXK = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXK
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Exarchate target: [From.GetName]"
			transfer_state = FROM
			if = {
				limit = { 
					FROM = { is_core_of = KXK }
				}
				KXK = {
					remove_state_core = FROM
					subtract_from_variable = { KXK_Num_States = 1 }
					clamp_variable = { var = KXK_Num_States min = 0 }
				}
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
		
	Form_KXN_Eparchy = {
		icon = generic_form_nation
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		available = {
			OR = {
				has_full_control_of_state = 909
				has_full_control_of_state = 1132
				has_full_control_of_state = 1135
				has_full_control_of_state = 1137
			}
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Eparchy"
			hidden_effect = {
				add_manpower = -25000
				add_political_power = -50
				add_to_array = { KXN.Form_KXN_Eparchy_Choose_States_Array = 909 }
				add_to_array = { KXN.Form_KXN_Eparchy_Choose_States_Array = 1132 }
				add_to_array = { KXN.Form_KXN_Eparchy_Choose_States_Array = 1135 }
				add_to_array = { KXN.Form_KXN_Eparchy_Choose_States_Array = 1137 }
			}
			if = {
				limit = {
					count_triggers = {
						amount = 2
						has_full_control_of_state = 909
						has_full_control_of_state = 1132
						has_full_control_of_state = 1135
						has_full_control_of_state = 1137
					}
				}
				custom_effect_tooltip = Form_KXN_Eparchy_tt1
				hidden_effect = {
					set_country_flag = Form_KXN_Eparchy_Choose_Flag
				}
			}
			else = {
				custom_effect_tooltip = Form_KXN_Eparchy_tt
				hidden_effect = {
					if = {
						limit = {
							has_full_control_of_state = 1132
							NOT = { has_full_control_of_state = 909 }
							NOT = { has_full_control_of_state = 1135 }
							NOT = { has_full_control_of_state = 1137 }
						}
						KXN_FORM_EPARCHY_EFFECT = yes
						1132 = {
							controller = {
								if = {
									limit = {
										1132 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXZ = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXZ = { transfer_state = 1132 }
								}
							}
						}
						KXZ = {
							add_state_core = 1132
							set_capital = {
								state = 1132
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1135
							NOT = { has_full_control_of_state = 909 }
							NOT = { has_full_control_of_state = 1132 }
							NOT = { has_full_control_of_state = 1137 }
						}
						KXN_FORM_EPARCHY_EFFECT = yes
						1135 = {
							controller = {
								if = {
									limit = {
										1135 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXZ = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXZ = { transfer_state = 1135 }
								}
							}
						}
						KXZ = {
							add_state_core = 1135
							set_capital = {
								state = 1135
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1137
							NOT = { has_full_control_of_state = 909 }
							NOT = { has_full_control_of_state = 1132 }
							NOT = { has_full_control_of_state = 1135 }
						}
						KXN_FORM_EPARCHY_EFFECT = yes
						1137 = {
							controller = {
								if = {
									limit = {
										1137 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXZ = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXZ = { transfer_state = 1137 }
								}
							}
						}
						KXZ = {
							add_state_core = 1137
							set_capital = {
								state = 1137
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 909
							NOT = { has_full_control_of_state = 1132 }
							NOT = { has_full_control_of_state = 1135 }
							NOT = { has_full_control_of_state = 1137 }
						}
						KXN_FORM_EPARCHY_EFFECT = yes
						909 = {
							controller = {
								if = {
									limit = {
										909 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXZ = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXZ = { transfer_state = 909 }
								}
							}
						}
						KXZ = {
							add_state_core = 909
							set_capital = {
								state = 909
							}
						}
					}
					KXN_Puppet_Reset_All_Frames = yes
					set_country_flag = KXN_4_Decision_Flag
					KXZ = { set_country_flag = KXN_Satellite_Decision_Flag }
					set_variable = { KXN.KXN_Puppet_Frame_4_Var = 2 }
				}
			}
		}
	}
	Form_KXN_Eparchy_Choose = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		state_target = yes
		target_array = KXN.Form_KXN_Eparchy_Choose_States_Array
		on_map_mode = map_only
		
		fire_only_once = yes
		
		visible = {
			has_country_flag = Form_KXN_Eparchy_Choose_Flag
		}
		
		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = Form_KXN_Satellite_Not_Capital_tt
				FROM = { KXN_IS_SATELLITE_CAPITAL_TRIGGER = yes }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Eparchy_Choose target: [From.GetName]"
			custom_effect_tooltip = Form_KXN_Eparchy_Choose_tt
			hidden_effect = {
				clr_country_flag = Form_KXN_Eparchy_Choose_Flag
				KXN_FORM_EPARCHY_EFFECT = yes
				FROM = {
					controller = {
						if = {
							limit = {
								FROM = { is_capital = yes }
								check_variable = { num_owned_controlled_states < 2 }
								is_subject_of = KXN
							}
							KXZ = {
								annex_country = {
									target = PREV
									transfer_troops = yes
								}
							}
						}
						else = {
							KXZ = { transfer_state = FROM }
						}
					}
				}
				KXZ = {
					add_state_core = FROM
					set_capital = {
						state = FROM
					}
				}
				KXN_Puppet_Reset_All_Frames = yes
				set_country_flag = KXN_4_Decision_Flag
				KXZ = { set_country_flag = KXN_Satellite_Decision_Flag }
				set_variable = { KXN.KXN_Puppet_Frame_4_Var = 2 }
			}
		}
	}
	Move_KXN_Eparchy_Capital = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		target_array = KXN.Form_KXN_Eparchy_Choose_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_4_Decision_Flag
			KXZ = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 10
		
		target_trigger = {
			FROM = {
				is_fully_controlled_by = KXZ
				is_owned_and_controlled_by = KXZ
				is_core_of = KXZ
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Move_KXN_Eparchy_Capital target: [From.GetName]"
			KXZ = {
				set_capital = {
					state = FROM
				}
			}
		}
	}
	Give_State_KXN_Eparchy = {
		icon = transfer_state_g
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Eparchy_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_4_Decision_Flag
			KXZ = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Eparchy_State_Limit_TT
				KXZ = { check_variable = { KXZ_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXZ }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXZ }
					is_one_state_island = yes
					state = 1135
					state = 1137
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
					KXN_IS_SATELLITE_TRIGGER = no
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Eparchy target: [From.GetName]"
			KXZ = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXZ_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Eparchy = {
		icon = transfer_state_r
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXZ.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_4_Decision_Flag
			KXZ = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXZ
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Eparchy target: [From.GetName]"
			transfer_state = FROM
			if = {
				limit = { 
					FROM = { is_core_of = KXZ }
				}
				KXZ = {
					remove_state_core = FROM
					subtract_from_variable = { KXZ_Num_States = 1 }
					clamp_variable = { var = KXZ_Num_States min = 0 }
				}
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
		
	Form_KXN_Marshalcy = {
		icon = generic_form_nation
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		available = {
			OR = {
				has_full_control_of_state = 1097
				has_full_control_of_state = 1163
				has_full_control_of_state = 1168
				has_full_control_of_state = 1171
				has_full_control_of_state = 1176
				has_full_control_of_state = 1188
			}
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Marshalcy"
			hidden_effect = { 
				add_manpower = -25000
				add_political_power = -50
				add_to_array = { KXN.Form_KXN_Marshalcy_Choose_States_Array = 1097 }
				add_to_array = { KXN.Form_KXN_Marshalcy_Choose_States_Array = 1163 }
				add_to_array = { KXN.Form_KXN_Marshalcy_Choose_States_Array = 1168 }
				add_to_array = { KXN.Form_KXN_Marshalcy_Choose_States_Array = 1171 }
				add_to_array = { KXN.Form_KXN_Marshalcy_Choose_States_Array = 1176 }
				add_to_array = { KXN.Form_KXN_Marshalcy_Choose_States_Array = 1188 }
			}
			if = {
				limit = {
					count_triggers = {
						amount = 2
						has_full_control_of_state = 1097
						has_full_control_of_state = 1163
						has_full_control_of_state = 1168
						has_full_control_of_state = 1171
						has_full_control_of_state = 1176
						has_full_control_of_state = 1188
					}
				}
				custom_effect_tooltip = Form_KXN_Marshalcy_tt1
				hidden_effect = {
					set_country_flag = Form_KXN_Marshalcy_Choose_Flag
				}
			}
			else = {
				custom_effect_tooltip = Form_KXN_Marshalcy_tt
				hidden_effect = {
					if = {
						limit = {
							has_full_control_of_state = 1097
							NOT = { has_full_control_of_state = 1163 }
							NOT = { has_full_control_of_state = 1168 }
							NOT = { has_full_control_of_state = 1171 }
							NOT = { has_full_control_of_state = 1176 }
							NOT = { has_full_control_of_state = 1188 }
						}
						KXN_FORM_MARSHALCY_EFFECT = yes
						1097 = {
							controller = {
								if = {
									limit = {
										1097 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXH = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXH = { transfer_state = 1097 }
								}
							}
						}
						KXH = {
							add_state_core = 1097
							set_capital = {
								state = 1097
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1163
							NOT = { has_full_control_of_state = 1097 }
							NOT = { has_full_control_of_state = 1168 }
							NOT = { has_full_control_of_state = 1171 }
							NOT = { has_full_control_of_state = 1176 }
							NOT = { has_full_control_of_state = 1188 }
						}
						KXN_FORM_MARSHALCY_EFFECT = yes
						1163 = {
							controller = {
								if = {
									limit = {
										1163 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXH = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXH = { transfer_state = 1163 }
								}
							}
						}
						KXH = {
							add_state_core = 1163
							set_capital = {
								state = 1163
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1168
							NOT = { has_full_control_of_state = 1097 }
							NOT = { has_full_control_of_state = 1163 }
							NOT = { has_full_control_of_state = 1171 }
							NOT = { has_full_control_of_state = 1176 }
							NOT = { has_full_control_of_state = 1188 }
						}
						KXN_FORM_MARSHALCY_EFFECT = yes
						1168 = {
							controller = {
								if = {
									limit = {
										1168 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXH = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXH = { transfer_state = 1168 }
								}
							}
						}
						KXH = {
							add_state_core = 1168
							set_capital = {
								state = 1168
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1171
							NOT = { has_full_control_of_state = 1097 }
							NOT = { has_full_control_of_state = 1163 }
							NOT = { has_full_control_of_state = 1168 }
							NOT = { has_full_control_of_state = 1176 }
							NOT = { has_full_control_of_state = 1188 }
						}
						KXN_FORM_MARSHALCY_EFFECT = yes
						1171 = {
							controller = {
								if = {
									limit = {
										1171 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXH = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXH = { transfer_state = 1171 }
								}
							}
						}
						KXH = {
							add_state_core = 1171
							set_capital = {
								state = 1171
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1176
							NOT = { has_full_control_of_state = 1097 }
							NOT = { has_full_control_of_state = 1163 }
							NOT = { has_full_control_of_state = 1168 }
							NOT = { has_full_control_of_state = 1171 }
							NOT = { has_full_control_of_state = 1188 }
						}
						KXN_FORM_MARSHALCY_EFFECT = yes
						1176 = {
							controller = {
								if = {
									limit = {
										1176 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXH = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXH = { transfer_state = 1176 }
								}
							}
						}
						KXH = {
							add_state_core = 1176
							set_capital = {
								state = 1176
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1188
							NOT = { has_full_control_of_state = 1097 }
							NOT = { has_full_control_of_state = 1163 }
							NOT = { has_full_control_of_state = 1168 }
							NOT = { has_full_control_of_state = 1171 }
							NOT = { has_full_control_of_state = 1176 }
						}
						KXN_FORM_MARSHALCY_EFFECT = yes
						1188 = {
							controller = {
								if = {
									limit = {
										1188 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXH = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXH = { transfer_state = 1188 }
								}
							}
						}
						KXH = {
							add_state_core = 1188
							set_capital = {
								state = 1188
							}
						}
					}
					KXN_Puppet_Reset_All_Frames = yes
					set_country_flag = KXN_5_Decision_Flag
					KXH = { set_country_flag = KXN_Satellite_Decision_Flag }
					set_variable = { KXN.KXN_Puppet_Frame_5_Var = 2 }
				}
			}
		}
	}
	Form_KXN_Marshalcy_Choose = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		state_target = yes
		target_array = KXN.Form_KXN_Marshalcy_Choose_States_Array
		on_map_mode = map_only
		
		fire_only_once = yes
		
		visible = {
			has_country_flag = Form_KXN_Marshalcy_Choose_Flag
		}
		
		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = Form_KXN_Satellite_Not_Capital_tt
				FROM = { KXN_IS_SATELLITE_CAPITAL_TRIGGER = yes }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Marshalcy_Choose target: [From.GetName]"
			custom_effect_tooltip = Form_KXN_Marshalcy_Choose_tt
			hidden_effect = {
				clr_country_flag = Form_KXN_Marshalcy_Choose_Flag
				KXN_FORM_MARSHALCY_EFFECT = yes
				FROM = {
					controller = {
						if = {
							limit = {
								FROM = { is_capital = yes }
								check_variable = { num_owned_controlled_states < 2 }
								is_subject_of = KXN
							}
							KXH = {
								annex_country = {
									target = PREV
									transfer_troops = yes
								}
							}
						}
						else = {
							KXH = { transfer_state = FROM }
						}
					}
				}
				KXH = {
					add_state_core = FROM
					set_capital = {
						state = FROM
					}
				}
				KXN_Puppet_Reset_All_Frames = yes
				set_country_flag = KXN_5_Decision_Flag
				KXH = { set_country_flag = KXN_Satellite_Decision_Flag }
				set_variable = { KXN.KXN_Puppet_Frame_5_Var = 2 }
			}
		}
	}
	Move_KXN_Marshalcy_Capital = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		target_array = KXN.Form_KXN_Marshalcy_Choose_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_5_Decision_Flag
			KXH = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 10
		
		target_trigger = {
			FROM = {
				is_fully_controlled_by = KXH
				is_owned_and_controlled_by = KXH
				is_core_of = KXH
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Move_KXN_Marshalcy_Capital target: [From.GetName]"
			KXH = {
				set_capital = {
					state = FROM
				}
			}
		}
	}
	Give_State_KXN_Marshalcy = {
		icon = transfer_state_g
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Marshalcy_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_5_Decision_Flag
			KXH = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Marshalcy_State_Limit_TT
				KXH = { check_variable = { KXH_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXH }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXH }
					is_one_state_island = yes
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
					KXN_IS_SATELLITE_TRIGGER = no
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Marshalcy target: [From.GetName]"
			KXH = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXH_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Marshalcy = {
		icon = transfer_state_r
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXH.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_5_Decision_Flag
			KXH = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXH
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Marshalcy target: [From.GetName]"
			transfer_state = FROM
			if = {
				limit = { 
					FROM = { is_core_of = KXH }
				}
				KXH = {
					remove_state_core = FROM
					subtract_from_variable = { KXH_Num_States = 1 }
					clamp_variable = { var = KXH_Num_States min = 0 }
				}
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
	Form_KXN_Equatorarchy = {
		icon = generic_form_nation
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		available = {
			OR = {
				has_full_control_of_state = 685
				has_full_control_of_state = 697
				has_full_control_of_state = 712
				has_full_control_of_state = 715
				has_full_control_of_state = 721
				has_full_control_of_state = 725
				has_full_control_of_state = 728
				has_full_control_of_state = 743
				has_full_control_of_state = 875
				has_full_control_of_state = 883
				has_full_control_of_state = 1093
				has_full_control_of_state = 1099
				has_full_control_of_state = 1165
				has_full_control_of_state = 1168
				has_full_control_of_state = 1202
				has_full_control_of_state = 1204
			}
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Equatorarchy"
			hidden_effect = { add_manpower = -25000 add_political_power = -50 }
			custom_effect_tooltip = Form_KXN_Equatorarchy_tt1
			hidden_effect = {
				set_country_flag = Form_KXN_Equatorarchy_Choose_Flag
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 685 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 697 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 712 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 715 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 721 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 725 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 728 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 743 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 875 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 883 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 1093 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 1099 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 1165 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 1168 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 1202 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 1204 }
			}
		}
	}
	Form_KXN_Equatorarchy_Choose = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		state_target = yes
		target_array = KXN.Form_KXN_Equatorarchy_Choose_States_Array
		on_map_mode = map_only
		
		fire_only_once = yes
		
		visible = {
			has_country_flag = Form_KXN_Equatorarchy_Choose_Flag
		}
		
		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = Form_KXN_Satellite_Not_Capital_tt
				FROM = { KXN_IS_SATELLITE_CAPITAL_TRIGGER = yes }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Equatorarchy_Choose target: [From.GetName]"
			custom_effect_tooltip = Form_KXN_Equatorarchy_Choose_tt
			hidden_effect = {
				clr_country_flag = Form_KXN_Equatorarchy_Choose_Flag
				KXN_FORM_EQUATORARCHY_EFFECT = yes
				FROM = {
					controller = {
						if = {
							limit = {
								FROM = { is_capital = yes }
								check_variable = { num_owned_controlled_states < 2 }
								is_subject_of = KXN
							}
							KXE = {
								annex_country = {
									target = PREV
									transfer_troops = yes
								}
							}
						}
						else = {
							KXE = { transfer_state = FROM }
						}
					}
				}
				KXE = {
					add_state_core = FROM
					set_capital = {
						state = FROM
					}
				}
				KXN_Puppet_Reset_All_Frames = yes
				set_country_flag = KXN_6_Decision_Flag
				KXE = { set_country_flag = KXN_Satellite_Decision_Flag }
				set_variable = { KXN.KXN_Puppet_Frame_6_Var = 2 }
			}
		}
	}
	Move_KXN_Equatorarchy_Capital = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		target_array = KXN.Form_KXN_Equatorarchy_Choose_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_6_Decision_Flag
			KXE = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 10
		
		target_trigger = {
			FROM = {
				is_fully_controlled_by = KXE
				is_owned_and_controlled_by = KXE
				is_core_of = KXE
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Move_KXN_Equatorarchy_Capital target: [From.GetName]"
			KXE = {
				set_capital = {
					state = FROM
				}
			}
		}
	}
	Give_State_KXN_Equatorarchy = {
		icon = transfer_state_g
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Equatorarchy_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_6_Decision_Flag
			KXE = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Equatorarchy_State_Limit_TT
				KXE = { check_variable = { KXE_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXE }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXE }
					is_one_state_island = yes
					region = 246
					region = 245
					region = 234
					region = 1
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
					KXN_IS_SATELLITE_TRIGGER = no
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Equatorarchy target: [From.GetName]"
			KXE = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXE_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Equatorarchy = {
		icon = transfer_state_r
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXE.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_6_Decision_Flag
			KXE = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXE
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Equatorarchy target: [From.GetName]"
			transfer_state = FROM
			if = {
				limit = { 
					FROM = { is_core_of = KXE }
				}
				KXE = {
					remove_state_core = FROM
					subtract_from_variable = { KXE_Num_States = 1 }
					clamp_variable = { var = KXE_Num_States min = 0 }
				}
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
	Form_KXN_Occident = {
		icon = generic_form_nation
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		available = {
			OR = {
				has_full_control_of_state = 883
				has_full_control_of_state = 885
				has_full_control_of_state = 909
				has_full_control_of_state = 911
				has_full_control_of_state = 912
				has_full_control_of_state = 937
				has_full_control_of_state = 943
				has_full_control_of_state = 971
				has_full_control_of_state = 974
				has_full_control_of_state = 982
				has_full_control_of_state = 1106
				has_full_control_of_state = 1031
				has_full_control_of_state = 1036
				has_full_control_of_state = 1040
				has_full_control_of_state = 1051
			}
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Occident"
			hidden_effect = { add_manpower = -25000 add_political_power = -50 }
			custom_effect_tooltip = Form_KXN_Occident_tt1
			hidden_effect = {
				set_country_flag = Form_KXN_Occident_Choose_Flag
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 883 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 885 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 909 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 911 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 912 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 937 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 943 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 971 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 974 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 982 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 1106 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 1031 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 1036 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 1040 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 1051 }
			}
		}
	}
	Form_KXN_Occident_Choose = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		state_target = yes
		target_array = KXN.Form_KXN_Occident_Choose_States_Array
		on_map_mode = map_only
		
		fire_only_once = yes
		
		visible = {
			has_country_flag = Form_KXN_Occident_Choose_Flag
		}
		
		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = Form_KXN_Satellite_Not_Capital_tt
				FROM = { KXN_IS_SATELLITE_CAPITAL_TRIGGER = yes }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Occident_Choose target: [From.GetName]"
			custom_effect_tooltip = Form_KXN_Occident_Choose_tt
			hidden_effect = {
				clr_country_flag = Form_KXN_Occident_Choose_Flag
				KXN_FORM_OCCIDENT_EFFECT = yes
				FROM = {
					controller = {
						if = {
							limit = {
								FROM = { is_capital = yes }
								check_variable = { num_owned_controlled_states < 2 }
								is_subject_of = KXN
							}
							KXO = {
								annex_country = {
									target = PREV
									transfer_troops = yes
								}
							}
						}
						else = {
							KXO = { transfer_state = FROM }
						}
					}
				}
				KXO = {
					add_state_core = FROM
					set_capital = {
						state = FROM
					}
				}
				KXN_Puppet_Reset_All_Frames = yes
				set_country_flag = KXN_7_Decision_Flag
				KXO = { set_country_flag = KXN_Satellite_Decision_Flag }
				set_variable = { KXN.KXN_Puppet_Frame_7_Var = 2 }
			}
		}
	}
	Move_KXN_Occident_Capital = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		target_array = KXN.Form_KXN_Occident_Choose_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_7_Decision_Flag
			KXO = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 10
		
		target_trigger = {
			FROM = {
				is_fully_controlled_by = KXO
				is_owned_and_controlled_by = KXO
				is_core_of = KXO
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Move_KXN_Occident_Capital target: [From.GetName]"
			KXO = {
				set_capital = {
					state = FROM
				}
			}
		}
	}
	Give_State_KXN_Occident = {
		icon = transfer_state_g
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Occident_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_7_Decision_Flag
			KXO = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Occident_State_Limit_TT
				KXO = { check_variable = { KXO_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXO }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXO }
					is_one_state_island = yes
					region = 328
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
					KXN_IS_SATELLITE_TRIGGER = no
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Occident target: [From.GetName]"
			KXO = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXO_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Occident = {
		icon = transfer_state_r
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXO.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_7_Decision_Flag
			KXO = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXO
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Occident target: [From.GetName]"
			transfer_state = FROM
			if = {
				limit = { 
					FROM = { is_core_of = KXO }
				}
				KXO = {
					remove_state_core = FROM
					subtract_from_variable = { KXO_Num_States = 1 }
					clamp_variable = { var = KXO_Num_States min = 0 }
				}
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
		
	Form_KXN_Satellite = {
		icon = generic_form_nation
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		available = {
			OR = {
				has_full_control_of_state = 741
				has_full_control_of_state = 775
				has_full_control_of_state = 790
				has_full_control_of_state = 810
				has_full_control_of_state = 811
				has_full_control_of_state = 834
				has_full_control_of_state = 843
				has_full_control_of_state = 854
				has_full_control_of_state = 858
				has_full_control_of_state = 866
				has_full_control_of_state = 868
				has_full_control_of_state = 937
				has_full_control_of_state = 943
				has_full_control_of_state = 948
				has_full_control_of_state = 951
				has_full_control_of_state = 986
				has_full_control_of_state = 990
				has_full_control_of_state = 995
				has_full_control_of_state = 999
				has_full_control_of_state = 1002
				has_full_control_of_state = 1009
				has_full_control_of_state = 1014
				has_full_control_of_state = 1017
			}
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Satellite"
			hidden_effect = { add_manpower = -25000 add_political_power = -50 }
			custom_effect_tooltip = Form_KXN_Satellite_tt1
			hidden_effect = {
				set_country_flag = Form_KXN_Satellite_Choose_Flag
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 741 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 775 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 790 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 810 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 811 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 834 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 843 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 854 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 858 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 866 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 868 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 937 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 943 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 948 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 951 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 986 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 990 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 995 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 999 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 1002 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 1009 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 1014 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 1017 }
			}
		}
	}
	Form_KXN_Satellite_Choose = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		state_target = yes
		target_array = KXN.Form_KXN_Satellite_Choose_States_Array
		on_map_mode = map_only
		
		fire_only_once = yes
		
		visible = {
			has_country_flag = Form_KXN_Satellite_Choose_Flag
		}
		
		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = Form_KXN_Satellite_Not_Capital_tt
				FROM = { KXN_IS_SATELLITE_CAPITAL_TRIGGER = yes }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Satellite_Choose target: [From.GetName]"
			custom_effect_tooltip = Form_KXN_Satellite_Choose_tt
			hidden_effect = {
				clr_country_flag = Form_KXN_Satellite_Choose_Flag
				KXN_FORM_SATELLITE_EFFECT = yes
				FROM = {
					controller = {
						if = {
							limit = {
								FROM = { is_capital = yes }
								check_variable = { num_owned_controlled_states < 2 }
								is_subject_of = KXN
							}
							KXM = {
								annex_country = {
									target = PREV
									transfer_troops = yes
								}
							}
						}
						else = {
							KXM = { transfer_state = FROM }
						}
					}
				}
				KXM = {
					add_state_core = FROM
					set_capital = {
						state = FROM
					}
				}
				KXN_Puppet_Reset_All_Frames = yes
				set_country_flag = KXN_8_Decision_Flag
				KXM = { set_country_flag = KXN_Satellite_Decision_Flag }
				set_variable = { KXN.KXN_Puppet_Frame_8_Var = 2 }
			}
		}
	}
	Move_KXN_Satellite_Capital = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		target_array = KXN.Form_KXN_Satellite_Choose_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_8_Decision_Flag
			KXM = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 10
		
		target_trigger = {
			FROM = {
				is_fully_controlled_by = KXM
				is_owned_and_controlled_by = KXM
				is_core_of = KXM
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Move_KXN_Satellite_Capital target: [From.GetName]"
			KXM = {
				set_capital = {
					state = FROM
				}
			}
		}
	}
	Give_State_KXN_Satellite = {
		icon = transfer_state_g
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Satellite_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_8_Decision_Flag
			KXM = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Satellite_State_Limit_TT
				KXM = { check_variable = { KXM_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXM }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXM }
					is_one_state_island = yes
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
					KXN_IS_SATELLITE_TRIGGER = no
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Satellite target: [From.GetName]"
			KXM = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXM_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Satellite = {
		icon = transfer_state_r
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXM.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_8_Decision_Flag
			KXM = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXM
				is_capital = no
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Satellite target: [From.GetName]"
			transfer_state = FROM
			if = {
				limit = { 
					FROM = { is_core_of = KXM }
				}
				KXM = {
					remove_state_core = FROM
					subtract_from_variable = { KXM_Num_States = 1 }
					clamp_variable = { var = KXM_Num_States min = 0 }
				}
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
	########### Satellite State Upgrade Decision ###########
	KXN_Upgrade_Military_1 = {
		icon = generic_protection
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Upgrade_Military_1_tt
				check_variable = { FROM.num_battalions > 25 }
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Upgrade_Military_1"
			effect_tooltip = {
				swap_ideas = {
					remove_idea = KXN_Tributary_Buff_DUMMY
					add_idea = KXN_Tributary_Buff_DUMMY_1
				}
			}
			add_to_variable = { KXN_Tributary_Buff_V1 = 0.01 }
			add_to_variable = { KXN_Tributary_Buff_V1A = 5 }
		}
	}
	KXN_Upgrade_Military_2 = {
		icon = generic_protection
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Upgrade_Military_2_tt
				check_variable = { FROM.num_battalions > 50 }
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Upgrade_Military_2"
			effect_tooltip = {
				swap_ideas = {
					remove_idea = KXN_Tributary_Buff_DUMMY
					add_idea = KXN_Tributary_Buff_DUMMY_2
				}
			}
			add_to_variable = { KXN_Tributary_Buff_V1 = 0.02 }
			add_to_variable = { KXN_Tributary_Buff_V1A = 5 }
		}
	}
	KXN_Upgrade_Military_3 = {
		icon = generic_protection
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Upgrade_Military_3_tt
				check_variable = { FROM.num_battalions > 75 }
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Upgrade_Military_3"
			effect_tooltip = {
				swap_ideas = {
					remove_idea = KXN_Tributary_Buff_DUMMY
					add_idea = KXN_Tributary_Buff_DUMMY_2
				}
			}
			add_to_variable = { KXN_Tributary_Buff_V1 = 0.02 }
			add_to_variable = { KXN_Tributary_Buff_V1A = 5 }
		}
	}
	KXN_Upgrade_Industry_1 = {
		icon = generic_factory
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Upgrade_Industry_1_tt
				check_variable = { FROM.num_of_factories > 15 }
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Upgrade_Industry_1"
			effect_tooltip = {
				swap_ideas = {
					remove_idea = KXN_Tributary_Buff_DUMMY
					add_idea = KXN_Tributary_Buff_DUMMY_3
				}
			}
			add_to_variable = { KXN_Tributary_Buff_V2 = 0.01 }
		}
	}
	KXN_Upgrade_Industry_2 = {
		icon = generic_factory
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Upgrade_Industry_2_tt
				check_variable = { FROM.num_of_factories > 30 }
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Upgrade_Industry_2"
			effect_tooltip = {
				swap_ideas = {
					remove_idea = KXN_Tributary_Buff_DUMMY
					add_idea = KXN_Tributary_Buff_DUMMY_4
				}
			}
			add_to_variable = { KXN_Tributary_Buff_V2 = 0.02 }
		}
	}
	KXN_Upgrade_Industry_3 = {
		icon = generic_factory
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Upgrade_Industry_3_tt
				check_variable = { FROM.num_of_factories > 45 }
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Upgrade_Industry_3"
			effect_tooltip = {
				swap_ideas = {
					remove_idea = KXN_Tributary_Buff_DUMMY
					add_idea = KXN_Tributary_Buff_DUMMY_4
				}
			}
			add_to_variable = { KXN_Tributary_Buff_V2 = 0.02 }
		}
	}
	KXN_Divide_Rule_1 = {
		icon = generic_monarchy
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
				NOT = {
					has_country_flag = KXN_Vermilion_Flag
					has_country_flag = KXN_Fragrance_Flag
				}
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Divide_Rule_1_tt
				FROM = {
					any_core_state = {
						is_owned_and_controlled_by = FROM
						any_country_with_core = {
							NOT = { tag = FROM }
							FROM = {
								any_core_state = {
									is_owned_and_controlled_by = FROM
									any_country_with_core = {
										NOT = { 
											tag = FROM
											tag = PREV.PREV.PREV
										}
										FROM = {
											any_core_state = {
												is_owned_and_controlled_by = FROM
												any_country_with_core = {
													NOT = { 
														tag = FROM
														tag = PREV.PREV.PREV
														tag = PREV.PREV.PREV.PREV.PREV.PREV
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Divide_Rule_1"
			FROM = {
				custom_effect_tooltip = KXN_Divide_Rule_1_effect_tt
				add_to_variable = { KXN_Tributary_State_Cap = 2 }
			}
		}
	}
	KXN_Divide_Rule_2 = {
		icon = generic_monarchy
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
				NOT = {
					has_country_flag = KXN_Vermilion_Flag
					has_country_flag = KXN_Fragrance_Flag
				}
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Divide_Rule_2_tt
				FROM = {
					any_core_state = {
						is_owned_and_controlled_by = FROM
						any_country_with_core = {
							NOT = { tag = FROM }
							FROM = {
								any_core_state = {
									is_owned_and_controlled_by = FROM
									any_country_with_core = {
										NOT = { 
											tag = FROM
											tag = PREV.PREV.PREV
										}
										FROM = {
											any_core_state = {
												is_owned_and_controlled_by = FROM
												any_country_with_core = {
													NOT = { 
														tag = FROM
														tag = PREV.PREV.PREV
														tag = PREV.PREV.PREV.PREV.PREV.PREV
													}
													FROM = {
														any_core_state = {
															is_owned_and_controlled_by = FROM
															any_country_with_core = {
																NOT = { 
																	tag = FROM
																	tag = PREV.PREV.PREV
																	tag = PREV.PREV.PREV.PREV.PREV.PREV
																	tag = PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV
																}
																FROM = {
																	any_core_state = {
																		is_owned_and_controlled_by = FROM
																		any_country_with_core = {
																			NOT = { 
																				tag = FROM
																				tag = PREV.PREV.PREV
																				tag = PREV.PREV.PREV.PREV.PREV.PREV
																				tag = PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV
																				tag = PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Divide_Rule_2"
			FROM = {
				custom_effect_tooltip = KXN_Divide_Rule_2_effect_tt
				add_to_variable = { KXN_Tributary_State_Cap = 3 }
			}
		}
	}
	KXN_Resource_Hub_Steel = {
		icon = steel
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { steel > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Resource_Hub_Steel"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Steel_tt
				set_variable = { KXN_Tributary_Buff_Steel = FROM.resource_produced@steel }
				multiply_variable = { KXN_Tributary_Buff_Steel = 0.25 }
				set_country_flag = KXN_Resource_Hub_Steel_Flag
			}
		}
	}
	KXN_Resource_Hub_Tungsten = {
		icon = tungsten
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { tungsten > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Resource_Hub_Tungsten"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Tungsten_tt
				set_variable = { KXN_Tributary_Buff_Tungsten = FROM.resource_produced@tungsten }
				multiply_variable = { KXN_Tributary_Buff_Tungsten = 0.25 }
				set_country_flag = KXN_Resource_Hub_Tungsten_Flag
			}
		}
	}
	KXN_Resource_Hub_Aluminium = {
		icon = aluminium
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { aluminium > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Resource_Hub_Aluminium"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Aluminium_tt
				set_variable = { KXN_Tributary_Buff_Aluminium = FROM.resource_produced@aluminium }
				multiply_variable = { KXN_Tributary_Buff_Aluminium = 0.25 }
				set_country_flag = KXN_Resource_Hub_Aluminium_Flag
			}
		}
	}
	KXN_Resource_Hub_Chromium = {
		icon = chromium
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { chromium > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Resource_Hub_Chromium"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Chromium_tt
				set_variable = { KXN_Tributary_Buff_Chromium = FROM.resource_produced@chromium }
				multiply_variable = { KXN_Tributary_Buff_Chromium = 0.25 }
				set_country_flag = KXN_Resource_Hub_Chromium_Flag
			}
		}
	}
	KXN_Resource_Hub_Crystals = {
		icon = crystals
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { crystals > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Resource_Hub_Crystals"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Crystals_tt
				set_variable = { KXN_Tributary_Buff_Crystals = FROM.resource_produced@crystals }
				multiply_variable = { KXN_Tributary_Buff_Crystals = 0.25 }
				set_country_flag = KXN_Resource_Hub_Crystals_Flag
			}
		}
	}
	KXN_Resource_Hub_Rubber = {
		icon = rubber
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { rubber > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Resource_Hub_Rubber"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Rubber_tt
				set_variable = { KXN_Tributary_Buff_Rubber = FROM.resource_produced@rubber }
				multiply_variable = { KXN_Tributary_Buff_Rubber = 0.25 }
				set_country_flag = KXN_Resource_Hub_Rubber_Flag
			}
		}
	}
	KXN_Resource_Hub_Oil = {
		icon = oil
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { oil > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Resource_Hub_Oil"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Oil_tt
				set_variable = { KXN_Tributary_Buff_Oil = FROM.resource_produced@oil }
				multiply_variable = { KXN_Tributary_Buff_Oil = 0.25 }
				set_country_flag = KXN_Resource_Hub_Oil_Flag
			}
		}
	}

	########### Generic Form Tributary Decision ###########
	KXN_Form_Tributary = {
		icon = generic_colonial_administration
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		visible = {
			has_country_flag = KXN_Form_Tributary_Flag
			has_country_flag = KXN_Form_Tributary_Show_Flag
		}

		target_trigger = {
			FROM = {
				exists = no
				NOT = {
					is_subject_of = KXN
					original_tag = KXN
					original_tag = KIR
					original_tag = KIC
					original_tag = KIS
					original_tag = KHM
					original_tag = NVA
					AND = {
						original_tag = ZOO
						KXN = { has_completed_focus = KXN_Focus_SETTLE }
					}
					AND = {
						original_tag = IDO
						KXN = { has_completed_focus = KXN_Focus_SETTLE }
					}
				}
			}
		}
		
		target_array = KXN.occupied_countries
		target_non_existing = yes
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Form_Tributary_Req_tt
				all_of_scopes = {
					array = FROM.core_states
					OWNER = {
						OR = {
							tag = ROOT
							is_subject_of = ROOT
						}
						PREV = { is_fully_controlled_by = PREV }
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = KXN_Form_Tributary_Req_tt1
				any_of_scopes = {
					array = FROM.core_states
					OWNER = {
						tag = ROOT
						PREV = { is_fully_controlled_by = PREV }
					}
				}
			}
		}

		cost = 75
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Form_Tributary"
			release_puppet = FROM
			FROM = {
				hidden_effect = {
					drop_cosmetic_tag = yes
					set_cosmetic_tag = KXN_Tributary
					add_ideas = KXN_Tributary_State
					if = {
						limit = { KXN = { has_country_flag = KXN_Focus_TAXATION_Flag } }
						add_ideas = KXN_Tributary_Taxation_Idea
					}
				}
				custom_effect_tooltip = KXN_Tributary_State_tt
			}
		}
	}
	KXN_Create_Tributary = {
		icon = pawn
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		visible = {
			has_country_flag = KXN_Form_Tributary_Flag
			has_country_flag = KXN_Form_Tributary_Show_Flag
		}

		target_trigger = {
			FROM = {
				NOT = {
					has_idea = KXN_Tributary_State
					has_cosmetic_tag = KXN_Tributary
					original_tag = KXN
				}
			}
		}
		
		target_array = KXN.subjects

		cost = 50
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Create_Tributary"
			FROM = {
				hidden_effect = {
					drop_cosmetic_tag = yes
					set_cosmetic_tag = KXN_Tributary
					add_ideas = KXN_Tributary_State
					if = {
						limit = { KXN = { has_country_flag = KXN_Focus_TAXATION_Flag } }
						add_ideas = KXN_Tributary_Taxation_Idea
					}
				}
				custom_effect_tooltip = KXN_Tributary_State_tt
			}
		}
	}
	Form_KXN_Domain = {
		icon = generic_form_nation
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		visible = {
			OR = {
				has_global_flag = Form_KXN_Satellite_Flag
				has_global_flag = Form_KXN_Colony_Flag
				has_full_control_of_state = 1012
			}
		}
		
		available = {
			has_full_control_of_state = 1012
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		highlight_states = {
			highlight_state_targets = {
				state = 1012
			}
		}
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Domain"
			hidden_effect = { add_manpower = -25000 add_political_power = -50 }
			if = {
				limit = {
					NOT = {
						has_global_flag = Form_KXN_Domain_Flag
					}
				}
				set_global_flag = Form_KXN_Domain_Flag
				custom_effect_tooltip = Form_KXN_Domain_tt
				hidden_effect = {
					create_dynamic_country = {
						original_tag = KXN
						set_country_flag = KXN_Domain_Flag
						set_cosmetic_tag = KXN_Domain
						KXU = { transfer_state = 1012 }
						add_state_core = 1012
						set_capital = {
							state = 1012
						}
						set_party_name = {
							ideology = fascism
							long_name = KXN_Domain_party
							name = KXN_Domain_party
						}
						KXN_SETUP_PUPPET_EFFECT = yes
						retire_ideology_leader = fascism
						set_country_leader_ideology = esotericism
						set_country_leader_portrait = { portrait = "GFX_portrait_unknown_kirin_female" }
					}
				}
			}
		}
	}
	Form_KXN_Colony = {
		icon = generic_form_nation
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		visible = {
			has_full_control_of_state = 956
		}
		
		available = {
			has_full_control_of_state = 956
			has_full_control_of_state = 991
			has_completed_focus = KXN_Focus_DESTINY
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		highlight_states = {
			highlight_state_targets = {
				state = 956
				state = 991
			}
		}
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Colony"
			hidden_effect = { add_manpower = -25000 add_political_power = -50 }
			if = {
				limit = {
					NOT = {
						has_global_flag = Form_KXN_Colony_Flag
					}
				}
				set_global_flag = Form_KXN_Colony_Flag
				custom_effect_tooltip = Form_KXN_Colony_tt
				hidden_effect = {
					create_dynamic_country = {
						original_tag = KXN
						set_country_flag = KXN_Colony_Flag
						set_cosmetic_tag = KXN_Colony
						KXC = { transfer_state = 956 }
						KXC = { transfer_state = 991 }
						add_state_core = 956
						add_state_core = 991
						set_capital = {
							state = 956
						}
						set_party_name = {
							ideology = fascism
							long_name = KXN_Colony_party
							name = KXN_Colony_party
						}
						set_party_name = {
							ideology = neutrality
							long_name = KXN_City_party
							name = KXN_City_party
						}
						KXN_SETUP_PUPPET_EFFECT = yes
						KXN = { KXN_Prairie_Spark_Alternate = { set_nationality = PREV.PREV } }
						add_country_leader_role = {
							character = "KXN_Prairie_Spark_Alternate"
							promote_leader = yes
							country_leader = {
								desc = "KXN_Prairie_Spark_desc"
								ideology = plutocracy
								expire = "1965.1.1.1"
								traits = { KXN_Sisterly_Militarch }
							}
						}
					}
				}
				custom_effect_tooltip = KXN_Prairie_Spark_Promote_Country_Leader_TT
				set_province_name = {
					id = 14627
					name = KXN_PRAIRIEPOLIS_NAME
				}
				set_province_name = {
					id = 18985
					name = KXN_CLARIONOPOLIS_NAME
				}
				#set_province_name = {
				#	id = 14603
				#	name = KXN_DUSKLIGHT_NAME
				#}
				956 = {
					add_extra_state_shared_building_slots = 2
					add_building_construction = {
						type = arms_factory
						level = 2
						instant_build = yes
					}
					add_building_construction = {
						type = air_base
						level = 2
						instant_build = yes
					}
				}
				custom_effect_tooltip = Form_KXN_Colony_Guard_tt
				hidden_effect = {
					KXC = {
						division_template = {
							name = "Consororal Watch"
							division_names_group = KIR_BANNER
							regiments = {
								kirin_vanguards = { x = 0 y = 0 }
								kirin_vanguards = { x = 0 y = 1 }
								kirin_vanguards = { x = 0 y = 2 }
								kirin_vanguards = { x = 0 y = 3 }
								kirin_vanguards = { x = 1 y = 0 }
								kirin_vanguards = { x = 1 y = 1 }
								kirin_vanguards = { x = 1 y = 2 }
								kirin_vanguards = { x = 1 y = 3 }
							}
							support = {
								kirin_braves = { x = 0 y = 0 }
								artillery = { x = 0 y = 1 }
							}
						}
						save_current_manpower = yes
						956 = {
							add_manpower = -16000
							create_unit = {
								division = "name = \"Right-Flank Banner of the Consororal Watch\" division_template = \"Consororal Watch\" start_experience_factor = 0.3 start_equipment_factor = 1" owner = KXC count = 1
							}
							create_unit = {
								division = "name = \"Left-Flank Banner of the Consororal Watch\" division_template = \"Consororal Watch\" start_experience_factor = 0.3 start_equipment_factor = 1" owner = KXC count = 1
							}
						}
						restore_previous_manpower = yes
					}
				}
				every_other_country = {
					limit = {
						OR = {
							original_tag = HMR
							original_tag = YMN
						}
					}
					add_relation_modifier = { target = KXN modifier = KXN_Deep_Hatred }
				}
			}
		}
	}
	
	Form_KXN_Griffonland = {
		icon = griffon
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		visible = {
			NOT = { has_global_flag = KXN_The_Shattering_Happened }
			OR = {
				any_subject_country = {
					any_owned_state = {
						is_fully_controlled_by = PREV
						is_on_continent = asia
					}
				}
				any_owned_state = {
					is_fully_controlled_by = KXN
					is_on_continent = asia
				}
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = Form_KXN_Griffonland_Req_tt
				any_subject_country = {
					is_griffon_continent_griffon_country = yes
				}
			}
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Griffonland"
			hidden_effect = { add_manpower = -25000 add_political_power = -50 }
			set_country_flag = Form_KXN_Griffonland_Choose_Flag
			custom_effect_tooltip = Form_KXN_Griffonland_TT
			every_subject_country = {
				display_individual_scopes = yes
				limit = {
					is_griffon_continent_griffon_country = yes
				}
				set_country_flag = Form_KXN_Griffonland_Target_Flag
				hidden_effect = {
					capital_scope = {
						add_to_array = { KXN.Form_KXN_Griffonland_Choose_States_Array = THIS }
					}
				}
			}
		}
	}
	Form_KXN_Griffonland_Choose = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 50 }
		
		state_target = yes
		target_array = KXN.Form_KXN_Griffonland_Choose_States_Array
		on_map_mode = map_only
		
		fire_only_once = yes
		
		visible = {
			has_country_flag = Form_KXN_Griffonland_Choose_Flag
		}
		
		available = {
			FROM = {
				OWNER = {
					is_subject_of = ROOT
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Griffonland_Choose target: [From.GetName]"
			custom_effect_tooltip = Form_KXN_Griffonland_Choose_tt
			hidden_effect = { clr_country_flag = Form_KXN_Griffonland_Choose_Flag }
			FROM = {
				OWNER = {
					hidden_effect = { drop_cosmetic_tag = yes }
					set_cosmetic_tag = KXN_Griffonland
					set_country_flag = KXN_Griffonland_Flag
					add_ideas = KXN_Griffonland_Buff
					custom_effect_tooltip = Form_KXN_Griffonland_Choose_Div_TT
					capital_scope = {
						add_extra_state_shared_building_slots = 2
						add_building_construction = {
							type = arms_factory
							level = 2
							instant_build = yes
						}
						add_building_construction = {
							type = air_base
							level = 2
							instant_build = yes
						}
					}
					hidden_effect = {
						set_technology = { tech_kirin_vanguard = 1 popup = no }
						set_technology = { tech_kirin_brave = 1 popup = no }
						set_technology = { tech_support = 1 popup = no }
						fix_weapon_techs = yes
						division_template = {
							name = "Griffonic War-Banner"
							division_names_group = KIR_BANNER
							regiments = {
								kirin_vanguards = { x = 0 y = 0 }
								kirin_vanguards = { x = 0 y = 1 }
								kirin_vanguards = { x = 0 y = 2 }
								kirin_vanguards = { x = 0 y = 3 }
								kirin_vanguards = { x = 1 y = 0 }
								kirin_vanguards = { x = 1 y = 1 }
								kirin_vanguards = { x = 1 y = 2 }
								kirin_vanguards = { x = 1 y = 3 }
							}
							support = {
								kirin_braves = { x = 0 y = 0 }
								artillery = { x = 0 y = 1 }
							}
						}
						save_current_manpower = yes
						capital_scope = {
							add_manpower = -16000
							create_unit = {
								division = "name = \"Dextral Griffonic War-Banner 'of the Ice Wind'\" division_template = \"Griffonic War-Banner\" start_experience_factor = 0.3 start_equipment_factor = 1" owner = PREV count = 1
							}
							create_unit = {
								division = "name = \"Sinistral Griffonic War-Banner 'of the Fire Wind'\" division_template = \"Griffonic War-Banner\" start_experience_factor = 0.3 start_equipment_factor = 1" owner = PREV count = 1
							}
						}
						restore_previous_manpower = yes
					}
				}
			}
		}
	}
}

KXN_Aerostat_Category = {
	KXN_Aerostat_CAS_Decision = {
		icon = airship_defence
		allowed = { tag = KXN }
		ai_will_do = { factor = 20 }
		
		state_target = africa
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_Aerostat_CAS_Decision_Show_Flag
		}
		
		target_trigger = {
			FROM = {
				OR = {
					AND = {
						controller = {
							has_war_with = KXN
						}
						any_neighbor_state = {
							controller = {
								OR = {
									tag = KXN
									is_ally_with = KXN
								}
							}
						}
					}
					AND = {
						controller = {
							OR = {
								tag = KXN
								is_ally_with = KXN
							}
						}
						any_neighbor_state = {
							controller = {
								has_war_with = KXN
							}
						}
					}
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		custom_cost_text = decision_cost_10_cp_airship_25
		custom_cost_trigger = {
			command_power > 9
			has_equipment = { medium_airship_equipment_0 > 24 }
		}
		
		days_re_enable = 70
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Aerostat_CAS_Decision target: [From.GetName]"
			FROM = {
				add_dynamic_modifier = { modifier = KXN_Aerostat_CAS_Modifier scope = KXN days = 70 }
			}
			hidden_effect = {
				country_event = { id = lan_kir_utility.2 days = 70 }
				add_command_power = -10
				add_equipment_to_stockpile = {
					type = medium_airship_equipment_0
					amount = -25
				}
			}
			custom_effect_tooltip = decision_cost_airship_25_return_tt
		}
	}
	KXN_Aerostat_Bomb_Decision = {
		icon = airship_bomb
		allowed = { tag = KXN }
		ai_will_do = { factor = 20 }
		
		state_target = africa
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_Aerostat_Bomb_Decision_Show_Flag
		}
		
		target_trigger = {
			FROM = {
				OR = {
					AND = {
						controller = {
							has_war_with = KXN
							PREV = {
								NOT = {
									is_fully_controlled_by = PREV
								}
							}
						}
						any_neighbor_state = {
							controller = {
								OR = {
									tag = KXN
									is_ally_with = KXN
								}
							}
						}
					}
					AND = {
						controller = {
							NOT = { has_full_control_of_state = PREV }
							OR = {
								tag = KXN
								is_ally_with = KXN
							}
						}
						any_neighbor_state = {
							controller = {
								has_war_with = KXN
							}
						}
					}
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		custom_cost_text = decision_cost_25_cp_airship_30
		custom_cost_trigger = {
			command_power > 24
			has_equipment = { medium_airship_equipment_0 > 29 }
		}
		
		days_re_enable = 30
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Aerostat_Bomb_Decision target: [From.GetName]"
			hidden_effect = {
				scoped_sound_effect = "ui_scorched_earth"
				set_variable = { var = FROM.Aerostat_Bomb_Damage_Var value = KXN.KXN_Aerostat_Bomb_Decision_Damage_Var }
				clear_variable = FROM.Aerostat_Bomb_Damage_Ratio
				for_each_scope_loop = {
					array = KXN.enemies
					if = {
						limit = {
							divisions_in_state = {
								size > 0
								state = FROM
							}
						}
						add_to_variable = { FROM.Aerostat_Bomb_Damage_Ratio = num_armies_in_state@FROM }
					}
				}
				divide_variable = { var = FROM.Aerostat_Bomb_Damage_Var value = FROM.Aerostat_Bomb_Damage_Ratio }
				clamp_variable = {
					var = FROM.Aerostat_Bomb_Damage_Var
					max = 0.4
				}
				meta_effect = {
					text = {
						damage_units = {
							state = FROM
							limit = { has_war_with = ROOT }
							damage = [Aerostat_Bomb_Damage]
							ratio = yes
							army = yes
							navy = no
						}
					}
					Aerostat_Bomb_Damage = "[?FROM.Aerostat_Bomb_Damage_Var]"
				}
				country_event = { id = lan_kir_utility.3 days = 30 }
				add_command_power = -25
				add_equipment_to_stockpile = {
					type = medium_airship_equipment_0
					amount = -30
				}
			}
			custom_effect_tooltip = KXN_Aerostat_Bomb_Decision_tt
			custom_effect_tooltip = decision_cost_airship_30_return_tt
		}
	}
	KXN_Aerostat_Supply_Decision = {
		icon = airship_supply
		allowed = { tag = KXN }
		ai_will_do = { factor = 20 }
		
		state_target = africa
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_Aerostat_Supply_Decision_Show_Flag
		}
		
		target_trigger = {
			FROM = {
				controller = {
					OR = {
						tag = KXN
						is_ally_with = KXN
					}
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		custom_cost_text = decision_cost_10_cp_airship_25
		custom_cost_trigger = {
			command_power > 9
			has_equipment = { medium_airship_equipment_0 > 24 }
		}
		
		days_re_enable = 70
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Aerostat_Supply_Decision target: [From.GetName]"
			FROM = {
				add_dynamic_modifier = { modifier = KXN_Aerostat_Supply_Modifier scope = KXN days = 70 }
			}
			hidden_effect = {
				country_event = { id = lan_kir_utility.2 days = 70 }
				add_command_power = -10
				add_equipment_to_stockpile = {
					type = medium_airship_equipment_0
					amount = -25
				}
			}
			custom_effect_tooltip = decision_cost_airship_25_return_tt
		}
	}
	KXN_Aerostat_Patrol_Decision = {
		icon = airship_patrol
		allowed = { tag = KXN }
		ai_will_do = { factor = 20 }
		
		state_target = africa
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_Aerostat_Patrol_Decision_Show_Flag
		}
		
		target_trigger = {
			FROM = {
				has_resistance = yes
				controller = {
					OR = {
						tag = KXN
						is_ally_with = KXN
					}
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		custom_cost_text = decision_cost_10_cp_airship_25
		custom_cost_trigger = {
			command_power > 9
			has_equipment = { medium_airship_equipment_0 > 24 }
		}
		
		days_re_enable = 70
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Aerostat_Patrol_Decision target: [From.GetName]"
			FROM = {
				add_dynamic_modifier = { modifier = KXN_Aerostat_Patrol_Modifier scope = KXN days = 70 }
			}
			hidden_effect = {
				country_event = { id = lan_kir_utility.2 days = 70 }
				add_command_power = -10
				add_equipment_to_stockpile = {
					type = medium_airship_equipment_0
					amount = -25
				}
			}
			custom_effect_tooltip = decision_cost_airship_25_return_tt
		}
	}
	KXN_Aerostat_Bomb_Upgrade_Decision = {
		icon = CTH_Militarists
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }

		fire_only_once = yes
		custom_cost_text = decision_cost_CP_25_army_xp_50
		custom_cost_trigger = {
			has_army_experience > 50
			check_variable = { var = command_power value = 25 compare = greater_than_or_equals }
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Aerostat_Bomb_Upgrade_Decision"
			hidden_effect = { army_experience = -50 add_command_power = -25 }
			set_variable = { var = KXN_Aerostat_Bomb_Decision_Damage_Var value = 1.25 }
			add_ideas = KXN_Aerostatic_Bombardment_Platform
			custom_effect_tooltip = KXN_Aerostatic_Bombardment_Platform_tt
		}
	}
	KXN_Aerostat_Bomb_Decision_HIDE = {
		icon = airship_bomb
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Aerostat_Bomb_Decision_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Aerostat_Bomb_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_Bomb_Decision_HIDE_tt
		}
	}
	KXN_Aerostat_Bomb_Decision_SHOW = {
		icon = airship_bomb
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Aerostat_Bomb_Decision_Show_Flag }
		}
		complete_effect = {
			set_country_flag = KXN_Aerostat_Bomb_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_Bomb_Decision_SHOW_tt
		}
	}
	KXN_Aerostat_CAS_Decision_HIDE = {
		icon = airship_defence
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Aerostat_CAS_Decision_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Aerostat_CAS_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_CAS_Decision_HIDE_tt
		}
	}
	KXN_Aerostat_CAS_Decision_SHOW = {
		icon = airship_defence
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Aerostat_CAS_Decision_Show_Flag }
		}
		complete_effect = {
			set_country_flag = KXN_Aerostat_CAS_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_CAS_Decision_SHOW_tt
		}
	}
	KXN_Aerostat_Supply_Decision_HIDE = {
		icon = airship_supply
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Aerostat_Supply_Decision_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Aerostat_Supply_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_Supply_Decision_HIDE_tt
		}
	}
	KXN_Aerostat_Supply_Decision_SHOW = {
		icon = airship_supply
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Aerostat_Supply_Decision_Show_Flag }
		}
		complete_effect = {
			set_country_flag = KXN_Aerostat_Supply_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_Supply_Decision_SHOW_tt
		}
	}
	KXN_Aerostat_Patrol_Decision_HIDE = {
		icon = airship_patrol
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Aerostat_Patrol_Decision_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Aerostat_Patrol_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_Patrol_Decision_HIDE_tt
		}
	}
	KXN_Aerostat_Patrol_Decision_SHOW = {
		icon = airship_patrol
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Aerostat_Patrol_Decision_Show_Flag }
		}
		complete_effect = {
			set_country_flag = KXN_Aerostat_Patrol_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_Patrol_Decision_SHOW_tt
		}
	}
}

KXN_The_Long_March_Home_Category = {
	KXN_Move_Capital_Decision = {
		icon = SOV_place_hq
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }
		
		state_target = yes
		target_array = KXN.KXN_Remnant_Capital_Array
		on_map_mode = map_and_decisions_view
		
		visible = {
			FROM = {
				is_capital = no
				OR = {
					is_fully_controlled_by = KXN
					has_state_flag = KXN_Remnant_Saved_Capital_Flag
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		available = {
			FROM = { is_fully_controlled_by = KXN }
		}

		cost = 30
		ai_hint_pp_cost = 30
		days_remove = 30
		
		modifier = {
			political_power_factor = -0.15
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Move_Capital_Decision target: [From.GetName]"
			effect_tooltip = { set_capital = { state = FROM } }
			custom_effect_tooltip = KXN_Move_Capital_Decision_TT
			hidden_effect = {
				capital_scope = { start_resistance = KXN force_enable_resistance = KXN }
				set_capital = { state = FROM }
				FROM = { force_disable_resistance = KXN }
			}
		}

		cancel_trigger = {
			FROM = {
				NOT = {
					is_controlled_by = KXN
				}
			}
		}
	}
	KXN_Airlift_To_Remnant = {
		icon = generic_intelligence_operation
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				exists = yes
				original_tag = KXN
				NOT = {
					has_war_with = KXN
					has_country_flag = KXN_Successor_Flag
				}
				check_variable = { KXN_Airlift_To_Remnant_Success_Var < 3 }
				OR = {
					has_country_flag = KXN_Vermilion_Flag
					has_country_flag = KXN_Fragrance_Flag
					has_country_flag = KXN_Exarchate_Flag
					has_country_flag = KXN_Eparchy_Flag
					has_country_flag = KXN_Marshalcy_Flag
					has_country_flag = KXN_Equatorarchy_Flag
					has_country_flag = KXN_Occident_Flag
					has_country_flag = KXN_Satellite_Flag
					has_country_flag = KXN_Mellifluve_Flag
					has_country_flag = KXN_Domain_Flag
					has_country_flag = KXN_Colony_Flag
					has_country_flag = KXN_Federation_Flag
					has_country_flag = KXN_Expedition_Flag
					has_country_flag = KXN_Airforce_Flag
					has_country_flag = KXN_Tanker_Flag
					has_country_flag = KXN_Navy_Flag
				}
			}
		}
		
		visible = {
			has_country_flag = KXN_Airlift_To_Remnant_Show_Flag
		}
		
		custom_cost_trigger = {
			has_equipment = {
				infantry_equipment > 199
			}
			has_equipment = {
				medium_airship_equipment_0 > 19
			}
		}

		custom_cost_text = decision_cost_200_infantry_airship_20
		
		days_remove = 30
		
		fixed_random_seed = no

		complete_effect = {
			hidden_effect = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = -200
				}
				add_equipment_to_stockpile = {
					type = medium_airship_equipment_0
					amount = -20
				}
			}
		}

		remove_effect = {
			hidden_effect = {
				KXN = {
					capital_scope = {
						FROM = {
							capital_scope = {
								set_temp_variable = { KXN.KXN_Airlift_To_Remnant_Distance = distance_to@PREV.PREV }
							}
						}
					}
				}
				set_temp_variable = { KXN_Airlift_To_Remnant_Distance_Factor = KXN_Airlift_To_Remnant_Distance }
				multiply_temp_variable = { KXN_Airlift_To_Remnant_Distance_Factor = 0.035 }
				clamp_temp_variable = { var = KXN_Airlift_To_Remnant_Distance_Factor max = 70 }
				set_temp_variable = { KXN_Airlift_To_Remnant_Base_Chance = KXN.KXN_Airlift_To_Remnant_Chance_Var }
				add_to_temp_variable = { KXN_Airlift_To_Remnant_Base_Chance = KXN_Airlift_To_Remnant_Distance_Factor }
				set_temp_variable = { KXN_Airlift_To_Remnant_Remainder = 100 }
				subtract_from_temp_variable = { KXN_Airlift_To_Remnant_Remainder = KXN_Airlift_To_Remnant_Base_Chance }
			}
			custom_effect_tooltip = KXN_Airlift_To_Remnant_tt
			random_list = {
				KXN_Airlift_To_Remnant_Base_Chance = {
					FROM = {
						country_event = { id = lan_kir.552 }
					}
				}
				KXN_Airlift_To_Remnant_Remainder = {
					FROM = {
						if = {
							limit = {
								check_variable = { KXN_Airlift_To_Remnant_Success_Var > 1 }
							}
							custom_effect_tooltip = KXN_Airlift_To_Remnant_Success_Vanguard
							hidden_effect = {
								division_template = {
									name = "Aero-Vanguard Banner"
									division_names_group = KIR_BANNER
									regiments = {
										kirin_vanguards = { x = 0 y = 0 }
										kirin_vanguards = { x = 0 y = 1 }
										kirin_vanguards = { x = 0 y = 2 }
										kirin_vanguards = { x = 0 y = 3 }
										kirin_vanguards = { x = 1 y = 0 }
										kirin_vanguards = { x = 1 y = 1 }
										kirin_vanguards = { x = 1 y = 2 }
										kirin_vanguards = { x = 1 y = 3 }
									}
									support = {
										kirin_braves = { x = 0 y = 0 }
										artillery = { x = 0 y = 1 }
									}
								}
								capital_scope = {
									create_unit = {
										division = "division_template = \"Aero-Vanguard Banner\" start_experience_factor = 0.75 start_equipment_factor = 1" owner = PREV count = 2
									}
								}
							}
						}
						else = {
							custom_effect_tooltip = KXN_Airlift_To_Remnant_Success
							hidden_effect = {
								division_template = {
									name = "Aero-Rifle Banner"
									division_names_group = KIR_BANNER
									template_counter = 6
									regiments = {
										infantry = { x = 0 y = 0 }
										infantry = { x = 0 y = 1 }
										infantry = { x = 0 y = 2 }
										infantry = { x = 0 y = 3 }
										infantry = { x = 1 y = 0 }
										infantry = { x = 1 y = 1 }
										infantry = { x = 1 y = 2 }
										infantry = { x = 1 y = 3 }
									}
									support = {
										kirin_braves = { x = 0 y = 0 }
										artillery = { x = 0 y = 1 }
									}
								}
								capital_scope = {
									create_unit = {
										division = "division_template = \"Aero-Rifle Banner\" start_experience_factor = 0.5 start_equipment_factor = 1" owner = PREV count = 2
									}
								}
							}
						}
						add_equipment_to_stockpile = { type = infantry_equipment amount = 500 }
						add_equipment_to_stockpile = { type = artillery_equipment amount = 25 }
						add_to_variable = { KXN_Airlift_To_Remnant_Success_Var = 1 }
					}
				}
			}
		}
	}
	KXN_Parley_With_Bonfire_Cascade = {
		icon = SWI_no_elected_president
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				exists = yes
				original_tag = KXN
				has_country_flag = KXN_Splinter_Flag
			}
		}
		
		visible = {
			has_global_flag = KXN_The_Shattering_Happened
			has_country_flag = KXN_Join_Forces_With_Remnant_Unlocked
		}
		
		available = {
			any_state = {
				tooltip = any_state_controlled_by_ROOT_or_ally_tt
				hidden_trigger = { is_controlled_by_ROOT_or_ally = yes }
				any_neighbor_state = {
					OR = {
						is_controlled_by = FROM
						any_neighbor_state = {
							is_controlled_by = FROM
						}
						any_neighbor_state = {
							any_neighbor_state = {
								is_controlled_by = FROM
							}
						}
					}
				}
			}
			strength_ratio = {
				tag = KXR
				ratio > 2
			}
			alliance_strength_ratio > 1
		}

		cost = 150
		fire_only_once = yes

		complete_effect = {
			hidden_effect = {
				country_event = { id = lan_kir.350 hours = 12 }
			}
			effect_tooltip = {
				FROM = {
					country_event = { id = lan_kir.350 }
				}
			}
			custom_effect_tooltip = if_they_accept_newline_tt
			effect_tooltip = {
				puppet = FROM
				FROM = {
					set_cosmetic_tag = KXN_Equatorarch
					KXN_Bonfire_Cascade = {
						swap_country_leader_traits = {
							remove = KXN_bandit_warlord
							add = KXN_Supreme_Equatorarch
							ideology = kratokracy
						}
					}
				}
			}
		}
	}
	KXN_Establish_Contact_With_Remnant = {
		icon = hol_radio_oranje
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				exists = yes
				original_tag = KXN
				NOT = {
					has_war_with = KXN
					is_subject_of = KXN
					has_country_flag = KXN_Successor_Flag
				}
				OR = {
					has_country_flag = KXN_Vermilion_Flag
					has_country_flag = KXN_Fragrance_Flag
					has_country_flag = KXN_Exarchate_Flag
					has_country_flag = KXN_Eparchy_Flag
					has_country_flag = KXN_Marshalcy_Flag
					has_country_flag = KXN_Equatorarchy_Flag
					has_country_flag = KXN_Occident_Flag
					has_country_flag = KXN_Satellite_Flag
					has_country_flag = KXN_Mellifluve_Flag
					has_country_flag = KXN_Domain_Flag
					has_country_flag = KXN_Colony_Flag
					has_country_flag = KXN_Federation_Flag
					has_country_flag = KXN_Expedition_Flag
					has_country_flag = KXN_Airforce_Flag
					has_country_flag = KXN_Tanker_Flag
					has_country_flag = KXN_Navy_Flag
				}
			}
		}
		
		visible = {
			has_global_flag = KXN_The_Shattering_Happened
			has_country_flag = KXN_Join_Forces_With_Remnant_Unlocked
			has_country_flag = KXN_Establish_Contact_With_Remnant_Show_Flag
		}
		
		available = {
			if = {
				limit = {
					FROM = {
						has_country_flag = KXN_Domain_Flag
					}
				}
				OR = {
					is_neighbor_of = FROM
					any_state = {
						tooltip = any_state_controlled_by_ROOT_or_ally_tt
						hidden_trigger = { is_controlled_by_ROOT_or_ally = yes }
						any_neighbor_state = {
							OR = {
								is_controlled_by = FROM
								any_neighbor_state = {
									is_controlled_by = FROM
								}
								any_neighbor_state = {
									any_neighbor_state = {
										is_controlled_by = FROM
									}
								}
							}
						}
					}
					1017 = {
						is_controlled_by_ROOT_or_ally = yes
					}
				}
			}
			else_if = {
				limit = {
					FROM = {
						has_country_flag = KXN_Expedition_Flag
					}
				}
				OR = {
					is_neighbor_of = FROM
					any_state = {
						tooltip = any_state_controlled_by_ROOT_or_ally_tt
						hidden_trigger = { is_controlled_by_ROOT_or_ally = yes }
						any_neighbor_state = {
							OR = {
								is_controlled_by = FROM
								any_neighbor_state = {
									is_controlled_by = FROM
								}
								any_neighbor_state = {
									any_neighbor_state = {
										is_controlled_by = FROM
									}
								}
							}
						}
					}
					any_controlled_state = {
						distance_to = {
							value < 2751
							target = event_target:KXN_Expedition_state_target
						}
					}
				}
			}
			else = {
				any_state = {
					tooltip = any_state_controlled_by_ROOT_or_ally_tt
					hidden_trigger = { is_controlled_by_ROOT_or_ally = yes }
					any_neighbor_state = {
						OR = {
							is_controlled_by = FROM
							any_neighbor_state = {
								is_controlled_by = FROM
							}
							any_neighbor_state = {
								any_neighbor_state = {
									is_controlled_by = FROM
								}
							}
						}
					}
				}
			}
		}

		cost = 50
		fire_only_once = yes

		complete_effect = {
			puppet = {
				target = FROM
				end_wars = no
			}
			every_other_country = {
				limit = { has_war_with = FROM }
				custom_effect_tooltip = KXN_Declare_War_On_KXN_tt
			}
		}
	}
	KXN_Join_Forces_With_Remnant = {
		icon = CHL_carabineros
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				exists = yes
				original_tag = KXN
				NOT = {
					has_war_with = KXN
					has_country_flag = KXN_Successor_Flag
				}
				OR = {
					has_country_flag = KXN_Vermilion_Flag
					has_country_flag = KXN_Fragrance_Flag
					has_country_flag = KXN_Exarchate_Flag
					has_country_flag = KXN_Eparchy_Flag
					has_country_flag = KXN_Marshalcy_Flag
					has_country_flag = KXN_Equatorarchy_Flag
					has_country_flag = KXN_Occident_Flag
					has_country_flag = KXN_Satellite_Flag
					has_country_flag = KXN_Mellifluve_Flag
					has_country_flag = KXN_Domain_Flag
					has_country_flag = KXN_Colony_Flag
					has_country_flag = KXN_Federation_Flag
					has_country_flag = KXN_Expedition_Flag
					has_country_flag = KXN_Airforce_Flag
					has_country_flag = KXN_Tanker_Flag
					has_country_flag = KXN_Navy_Flag
					has_country_flag = KXN_Splinter_Flag
				}
			}
		}
		
		target_array = KXN.subjects
		
		visible = {
			has_global_flag = KXN_The_Shattering_Happened
			has_country_flag = KXN_Join_Forces_With_Remnant_Unlocked
			has_country_flag = KXN_Join_Forces_With_Remnant_Show_Flag
		}
		
		available = {
			if = {
				limit = {
					FROM = {
						has_country_flag = KXN_Domain_Flag
					}
				}
				OR = {
					is_neighbor_of = FROM
					1017 = {
						is_controlled_by_ROOT_or_ally = yes
					}
				}
			}
			else_if = {
				limit = {
					FROM = {
						has_country_flag = KXN_Expedition_Flag
					}
				}
				OR = {
					is_neighbor_of = FROM
					any_controlled_state = {
						distance_to = {
							value < 1501
							target = event_target:KXN_Expedition_state_target
						}
					}
				}
			}
			
			else_if = {
				limit = {
					FROM = {
						has_country_flag = KXN_Splinter_Flag
					}
				}
				is_neighbor_of = FROM
				strength_ratio = {
					tag = KXR
					ratio > 3
				}
			}
			else = {
				is_neighbor_of = FROM
			}
		}

		cost = 100
		fire_only_once = yes

		complete_effect = {
			hidden_effect = {
				every_neighbor_country = {
					limit = { has_war_with = FROM }
					declare_war_on = {
						target = KXN
						type = annex_everything
					}
				}
				FROM = {
					set_country_flag = KXN_Remnant_Saved_Flag
					capital_scope = { set_state_flag = KXN_Remnant_Saved_Capital_Flag }
					random_state = {
						limit = {
							is_in_array = { KXN.KXN_Remnant_Capital_Array = THIS }
							is_core_of = PREV
						}
						set_state_flag = KXN_Remnant_Saved_Capital_Flag
					}
					every_core_state = {
						remove_core_of = PREV
					}
					every_controlled_state = {
						set_state_controller_to = KXN
					}
				}
			}
			KXN = {
				add_to_variable = { KXN_Remnant_Num_Saved_Var = 1 }
				set_variable = { KXN_Remnant_Num_Extra_Saved_Var = KXN_Remnant_Num_Saved_Var }
				subtract_from_variable = { KXN_Remnant_Num_Extra_Saved_Var = 3 }
				clamp_variable = { var = KXN_Remnant_Num_Extra_Saved_Var min = 0 }
				custom_effect_tooltip = KXN_Join_Forces_With_Remnant_TT
				hidden_effect = {
					add_manpower = 30000
					FROM = {
						save_current_manpower = yes
						capital_scope = { add_manpower = -30000 }
						restore_previous_manpower = yes
					}
				}
				annex_country = {
					target = FROM
					transfer_troops = yes
				}
			}
			if = {
				limit = {
					FROM = { has_country_flag = KXN_Splinter_Flag }
				}
				KXN = { KXN_Bonfire_Cascade = { set_nationality = PREV } }
			}
			every_neighbor_country = {
				limit = { has_war_with = FROM }
				custom_effect_tooltip = KXN_Event_503_tt
				add_timed_idea = {
					idea = KXN_Revenge_On_Us
					days = 365
				}
			}
		}
	}
	KXN_Withdraw_Forces_From_Enemy = {
		icon = generic_operation
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				has_war_with = KXN
				NOT = { has_country_flag = KXN_Revenge_War_Neighbors_Flag }
			}
		}
		
		visible = {
			has_global_flag = KXN_The_Shattering_Happened
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Withdraw_Forces_From_Enemy_Check_TT
				all_of_scopes = {
					array = FROM.owned_states
					KXN = {
						divisions_in_state = {
							size < 1
							state = PREV
						}
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = KXN_Withdraw_Forces_From_Enemy_Req_TT
				any_of_scopes = {
					array = KXN.controlled_states
					NOT = { is_owned_by = FROM }
				}
			}
			capital_scope = {
				FROM = {
					divisions_in_state = {
						size < 1
						state = PREV
					}
				}
			}
		}
		
		custom_cost_trigger = {
			ROOT = {
				check_variable = { var = command_power value = 15 compare = greater_than_or_equals }
				has_political_power > 14
			}
		}
		
		ai_hint_pp_cost = 15

		custom_cost_text = decision_cost_CP_15_pp_15
		
		fire_only_once = yes

		complete_effect = {
			hidden_effect = {
				add_command_power = -15
				add_political_power = -15
			}
			FROM = { country_event = { id = lan_kir.550 hours = 6 } }
			custom_effect_tooltip = if_they_accept_newline_tt
			effect_tooltip = {
				white_peace = FROM
			}
		}
	}
	KXN_Establish_Friendly_Government = {
		icon = generic_colonial_administration
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }

		visible = {
			has_global_flag = KXN_The_Shattering_Happened
		}

		target_trigger = {
			FROM = {
				exists = no
				NOT = { original_tag = KXN }
				if = {
					limit = {
						has_global_flag = Form_KXN_Colony_Flag
					}
					NOT = {
						original_tag = HMR
						original_tag = YMN
					}
				}
			}
			any_of_scopes = {
				array = FROM.core_states
				is_controlled_by = KXN
			}
		}
		
		target_array = KXN.occupied_countries
		target_non_existing = yes
		
		available = {
			num_subjects < KXN.KXN_Num_Subject_Var
			custom_trigger_tooltip = {
				tooltip = KXN_Form_Tributary_Req_tt1
				any_of_scopes = {
					array = FROM.core_states
					OWNER = {
						tag = ROOT
						PREV = { is_fully_controlled_by = PREV }
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = KXN_Establish_Friendly_Government_Req_TT
				any_of_scopes = {
					array = KXN.owned_controlled_states
					NOT = { is_core_of = FROM }
				}
			}
		}

		cost = 75
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Establish_Friendly_Government"
			release_puppet = FROM
			effect_tooltip = {
				custom_effect_tooltip = KXN_In_365_Days_tt
				end_puppet = FROM
				FROM = { give_military_access = ROOT }
			}
			hidden_effect = {
				add_to_array = { KXN.KXN_Friendly_Government_Array = FROM }
				country_event = { id = lan_kir.560 days = 365 }
			}
		}
	}
	KXN_Abandon_Clarionople = {
		icon = generic_scorched_earth
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		visible = {
			has_country_flag = KXN_Commonweal_Flag
			has_full_control_of_state = 956
			has_global_flag = Form_KXN_Colony_Flag
			any_of_scopes = {
				array = KXN.owned_controlled_states
				NOT = {
					is_core_of = HMR
					is_core_of = YMN
				}
			}
		}
		
		available = {
			has_full_control_of_state = 956
			has_full_control_of_state = 991
		}
		
		cost = 25
		
		highlight_states = {
			highlight_state_targets = {
				state = 956
				state = 991
			}
		}
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Abandon_Clarionople"
			custom_effect_tooltip = KXN_Event_581_TT
			hidden_effect = {
				add_manpower = 75000
				save_current_manpower = yes
				956 = { add_manpower = -75000 }
				restore_previous_manpower = yes
			}
			country_event = { id = lan_kir.580 }
			release_on_controlled = KXC
			every_state = {
				limit = {
					is_fully_controlled_by = KXN
					OR = {
						is_core_of = HMR
						is_core_of = YMN
					}
				}
				transfer_state_to = KXC
				hidden_effect = {
					remove_core_of = KXN
					remove_claim_by = KXN
				}
			}
			KXC = {
				set_cosmetic_tag = KXN_Successor
				set_country_flag = KXN_Successor_Flag
				set_capital = {
					state = 956
				}
				set_party_name = {
					ideology = neutrality
					long_name = KXN_Captaincy_party
					name = KXN_Captaincy_party
				}
				give_military_access = KXN
				hidden_effect = {
					add_state_core = 956
					add_state_core = 991
					add_manpower = 25000
					add_equipment_to_stockpile = {
						type = infantry_equipment
						amount = 7500
					}
					add_equipment_to_stockpile = {
						type = artillery_equipment
						amount = 250
					}
					add_ideas = KXN_The_Shattering
					load_focus_tree = generic_zebra_focus
					set_politics = { ruling_party = neutrality elections_allowed = no }
					set_popularities = {
						democratic = 15
						neutrality = 50
						fascism = 30
						communism = 5
					}
					KXN = { KXN_Giuseppe_Georginio = { set_nationality = PREV.PREV } }
					add_country_leader_role = {
						character = "KXN_Giuseppe_Georginio"
						promote_leader = yes
						country_leader = {
							desc = ""
							ideology = khakistocracy
							expire = "1965.1.1.1"
							traits = { }
						}
					}
					set_portraits = {
						character = KXN_Giuseppe_Georginio
						army = {
							large = "GFX_portrait_KXN_Giuseppe_Georginio"
							small = "gfx/interface/ideas/Advisors/KXN/KXN_Giuseppe_Georginio.tga"
						}
						civilian = {
							large = "GFX_portrait_KXN_Giuseppe_Georginio"
							small = "gfx/interface/ideas/Advisors/KXN/KXN_Giuseppe_Georginio.tga"
						}
					}
					set_character_name = {
						character = KXN_Giuseppe_Georginio
						name = KXN_Giuseppe_Georginio_Nirik
					}
				}
			}
		}
	}
	KXN_Rebuild_State_Decision = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		fire_only_once = yes
		target_array = KXN.KXN_States_In_Our_Empire
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_Rebuild_State_Flag
			has_country_flag = KXN_Rebuild_State_Show_Flag
			FROM = { is_controlled_by_ROOT_or_ally = yes }
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		available = {
			divisions_in_state = {
				size > 0
				state = FROM
			}
			FROM = { is_controlled_by_ROOT_or_ally = yes }
		}

		custom_cost_trigger = {
			ROOT = {
				check_variable = { var = command_power value = 15 compare = greater_than_or_equals }
				has_political_power > 14
			}
		}
		ai_hint_pp_cost = 15

		custom_cost_text = decision_cost_CP_15_pp_15

		days_remove = 60
		
		modifier = {
			command_power_gain_mult = -0.05
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Rebuild_State_Decision target: [From.GetName]"
			hidden_effect = {
				add_command_power = -15
				add_political_power = -15
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Rebuild_State_Decision target: [From.GetName]"
			FROM = {
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
				add_building_construction = {
					type = infrastructure
					level = 1
					instant_build = yes
				}
			}
			if = {
				limit = {
					check_variable = { KXN.KXN_Survivors_Resistance_Var > 0 }
				}
				effect_tooltip = {
					custom_effect_tooltip = KIR_line_break
					swap_ideas = {
						remove_idea = KXN_Survivors_Fallen_Empire_DUMMY
						add_idea = KXN_Survivors_Fallen_Empire_DUMMY_10
					}
				}
				add_to_variable = { var = KXN_Survivors_Resistance_Neg_Var value = 0.01 }
				subtract_from_variable = { var = KXN_Survivors_Resistance_Var value = 0.01 }
			}
			if = {
				limit = {
					check_variable = { KXN.KXN_Overexpansion_Modifier_Multiplier_Var > 0.5 }
				}
				custom_effect_tooltip = KXN_Rebuild_State_Decision_tt
				subtract_from_variable = { var = KXN_Overexpansion_Modifier_Multiplier_Var value = 0.05 }
			}
		}

		cancel_trigger = {
			OR = {
				divisions_in_state = {
					size < 1
					state = FROM
				}
				FROM = { is_controlled_by_ROOT_or_ally = no }
			}
		}

		cancel_effect = {
		}
	}
	KXN_Airlift_To_Remnant_HIDE = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Airlift_To_Remnant_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Airlift_To_Remnant_Show_Flag
			custom_effect_tooltip = KXN_Airlift_To_Remnant_HIDE_tt
		}
	}
	KXN_Airlift_To_Remnant_SHOW = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Airlift_To_Remnant_Show_Flag }
			any_other_country = {
				original_tag = KXN
				NOT = {
					has_war_with = KXN
					has_country_flag = KXN_Successor_Flag
				}
				check_variable = { KXN_Airlift_To_Remnant_Success_Var < 3 }
				OR = {
					has_country_flag = KXN_Vermilion_Flag
					has_country_flag = KXN_Fragrance_Flag
					has_country_flag = KXN_Exarchate_Flag
					has_country_flag = KXN_Eparchy_Flag
					has_country_flag = KXN_Marshalcy_Flag
					has_country_flag = KXN_Equatorarchy_Flag
					has_country_flag = KXN_Occident_Flag
					has_country_flag = KXN_Satellite_Flag
					has_country_flag = KXN_Mellifluve_Flag
					has_country_flag = KXN_Domain_Flag
					has_country_flag = KXN_Colony_Flag
					has_country_flag = KXN_Federation_Flag
					has_country_flag = KXN_Expedition_Flag
					has_country_flag = KXN_Airforce_Flag
					has_country_flag = KXN_Tanker_Flag
					has_country_flag = KXN_Navy_Flag
				}
			}
		}
		complete_effect = {
			set_country_flag = KXN_Airlift_To_Remnant_Show_Flag
			custom_effect_tooltip = KXN_Airlift_To_Remnant_SHOW_tt
		}
	}
	KXN_Establish_Contact_With_Remnant_HIDE = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Establish_Contact_With_Remnant_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Establish_Contact_With_Remnant_Show_Flag
			custom_effect_tooltip = KXN_Establish_Contact_With_Remnant_HIDE_tt
		}
	}
	KXN_Establish_Contact_With_Remnant_SHOW = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Establish_Contact_With_Remnant_Show_Flag }
			any_other_country = {
				original_tag = KXN
				NOT = {
					has_war_with = KXN
					is_subject_of = KXN
					has_country_flag = KXN_Successor_Flag
				}
				OR = {
					has_country_flag = KXN_Vermilion_Flag
					has_country_flag = KXN_Fragrance_Flag
					has_country_flag = KXN_Exarchate_Flag
					has_country_flag = KXN_Eparchy_Flag
					has_country_flag = KXN_Marshalcy_Flag
					has_country_flag = KXN_Equatorarchy_Flag
					has_country_flag = KXN_Occident_Flag
					has_country_flag = KXN_Satellite_Flag
					has_country_flag = KXN_Mellifluve_Flag
					has_country_flag = KXN_Domain_Flag
					has_country_flag = KXN_Colony_Flag
					has_country_flag = KXN_Federation_Flag
					has_country_flag = KXN_Expedition_Flag
					has_country_flag = KXN_Airforce_Flag
					has_country_flag = KXN_Tanker_Flag
					has_country_flag = KXN_Navy_Flag
				}
			}
		}
		complete_effect = {
			set_country_flag = KXN_Establish_Contact_With_Remnant_Show_Flag
			custom_effect_tooltip = KXN_Establish_Contact_With_Remnant_SHOW_tt
		}
	}
	KXN_Join_Forces_With_Remnant_HIDE = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Join_Forces_With_Remnant_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Join_Forces_With_Remnant_Show_Flag
			custom_effect_tooltip = KXN_Join_Forces_With_Remnant_HIDE_tt
		}
	}
	KXN_Join_Forces_With_Remnant_SHOW = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Join_Forces_With_Remnant_Show_Flag }
			any_other_country = {
				original_tag = KXN
				is_subject_of = KXN
				NOT = {
					has_war_with = KXN
					has_country_flag = KXN_Successor_Flag
				}
				OR = {
					has_country_flag = KXN_Vermilion_Flag
					has_country_flag = KXN_Fragrance_Flag
					has_country_flag = KXN_Exarchate_Flag
					has_country_flag = KXN_Eparchy_Flag
					has_country_flag = KXN_Marshalcy_Flag
					has_country_flag = KXN_Equatorarchy_Flag
					has_country_flag = KXN_Occident_Flag
					has_country_flag = KXN_Satellite_Flag
					has_country_flag = KXN_Mellifluve_Flag
					has_country_flag = KXN_Domain_Flag
					has_country_flag = KXN_Colony_Flag
					has_country_flag = KXN_Federation_Flag
					has_country_flag = KXN_Expedition_Flag
					has_country_flag = KXN_Airforce_Flag
					has_country_flag = KXN_Tanker_Flag
					has_country_flag = KXN_Navy_Flag
					has_country_flag = KXN_Splinter_Flag
				}
			}
		}
		complete_effect = {
			set_country_flag = KXN_Join_Forces_With_Remnant_Show_Flag
			custom_effect_tooltip = KXN_Join_Forces_With_Remnant_SHOW_tt
		}
	}
	KXN_Rebuild_State_HIDE = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Rebuild_State_Flag
			has_country_flag = KXN_Rebuild_State_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Rebuild_State_Show_Flag
			custom_effect_tooltip = KXN_Rebuild_State_HIDE_tt
		}
	}
	KXN_Rebuild_State_SHOW = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Rebuild_State_Flag
			NOT = { has_country_flag = KXN_Rebuild_State_Show_Flag }
		}
		complete_effect = {
			set_country_flag = KXN_Rebuild_State_Show_Flag
			custom_effect_tooltip = KXN_Rebuild_State_SHOW_tt
		}
	}
}

operations = {
	KXN_Restore_Order_to_Kiria = {
		icon = daggers
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		visible = {
			is_ai = no
			is_subject = no
			date > 1011.06.01
			has_government = fascism
			NOT = {
				has_country_flag = KXN_Event_195_Flag
				has_war_together_with = KIR
				has_war_together_with = KIS
				has_war_together_with = KIC
				has_wargoal_against = KIR
				has_wargoal_against = KIS
				has_wargoal_against = KIC
				has_war_with = KIR
				has_war_with = KIS
				has_war_with = KIC
			}
			OR = {
				KIR = {
					OR = {
						has_civil_war = yes
						any_other_country = {
							OR = {
								original_tag = KIR
								original_tag = KIS
								original_tag = KIC
							}
							has_war_with = PREV
						}
					}
				}
				KIS = {
					OR = {
						has_civil_war = yes
						any_other_country = {
							OR = {
								original_tag = KIR
								original_tag = KIS
								original_tag = KIC
							}
							has_war_with = PREV
						}
					}
				}
				KIC = {
					OR = {
						has_civil_war = yes
						any_other_country = {
							OR = {
								original_tag = KIR
								original_tag = KIS
								original_tag = KIC
							}
							has_war_with = PREV
						}
					}
				}
			}
		}
		
		available = {
			has_completed_focus = KXN_Focus_ZAIK_1
		}

		cost = 150
		fire_only_once = yes
		days_remove = 30
		modifier = {
			planning_speed = -0.1
			command_power_gain_mult = -0.1
		}
		
		complete_effect = {
			hidden_effect = {
				set_country_flag = KXN_Event_195_Flag
				for_each_scope_loop = {
					array = global.countries
					if = {
						limit = {
							NOT = {
								original_tag = KXN
								is_ally_with = KXN
							}
							OR = {
								original_tag = KIR
								original_tag = KIS
								original_tag = KIC
							}
						}
						add_ai_strategy = {
							type = prepare_for_war
							id = KXN
							value = 1000
						}
					}
				}
			}
		}

		remove_effect = {
			every_other_country = {
				limit = {
					NOT = {
						original_tag = KXN
						is_ally_with = KXN
					}
					OR = {
						original_tag = KIR
						original_tag = KIS
						original_tag = KIC
					}
				}
				display_individual_scopes = yes
				KXN = {
					declare_war_on = {
						target = PREV
						type = annex_everything
					}
					set_temp_variable = { KXN_Conquest_Mission_Focus_Days_Timeout = PREV.num_owned_states }
					multiply_temp_variable = { KXN_Conquest_Mission_Focus_Days_Timeout = 30 }
					custom_effect_tooltip = KXN_Focus_Declare_War_TT
				}
			}
			for_each_scope_loop = {
				array = global.countries
				if = {
					limit = {
						NOT = {
							original_tag = KXN
							is_ally_with = KXN
						}
						OR = {
							original_tag = KIR
							original_tag = KIS
							original_tag = KIC
						}
					}
					hidden_effect = {
						diplomatic_relation = {
							country = KXN
							relation = non_aggression_pact
							active = no
						}
						diplomatic_relation = {
							country = KXN
							relation = military_access
							active = no
						}
						diplomatic_relation = {
							country = KXN
							relation = docking_rights
							active = no
						}
						diplomatic_relation = {
							country = KXN
							relation = guarantee
							active = no
						}
					}
				}
			}
			custom_effect_tooltip = KIR_line_break
			clr_country_flag = KXN_Silver_Chime_Unlocked
			remove_ideas = KXN_Silver_Chime
		}
	}
	KXN_Battle_Plan_Hin_Doe = {
		icon = daggers
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		visible = {
			has_country_flag = KXN_Battle_Plan_Hin_Doe_Flag
			OR = {
				HIN = {
					exists = yes
					is_subject = no
					has_capitulated = no
				}
				CTL = {
					exists = yes
					is_subject = no
					has_capitulated = no
				}
				BRS = {
					exists = yes
					is_subject = no
					has_capitulated = no
				}
				SAM = {
					exists = yes
					is_subject = no
					has_capitulated = no
				}
			}
		}
		
		available = {
			has_completed_focus = KXN_Focus_CONQUEST_1
			if = {
				limit = { is_ai = yes }
				has_war = no
				OR = {
					HIN = { is_neighbor_of = KXN }
					CTL = { is_neighbor_of = KXN }
					BRS = { is_neighbor_of = KXN }
					SAM = { is_neighbor_of = KXN }
				}
			}
		}

		cost = 75
		fire_only_once = yes
		days_remove = 30
		modifier = {
			planning_speed = -0.1
			command_power_gain_mult = -0.1
		}
		
		complete_effect = {
			hidden_effect = {
				for_each_scope_loop = {
					array = global.countries
					if = {
						limit = {
							NOT = {
								original_tag = KXN
								is_ally_with = KXN
							}
							OR = {
								original_tag = HIN
								original_tag = CTL
								original_tag = BRS
								original_tag = SAM
							}
						}
						add_ai_strategy = {
							type = prepare_for_war
							id = KXN
							value = 1000
						}
					}
				}
			}
		}

		remove_effect = {
			#KXN_SPAWN_BANNER_LEVY = yes
			every_other_country = {
				limit = {
					NOT = {
						original_tag = KXN
						is_ally_with = KXN
					}
					OR = {
						original_tag = HIN
						original_tag = CTL
						original_tag = BRS
						original_tag = SAM
					}
				}
				display_individual_scopes = yes
				KXN = {
					declare_war_on = {
						target = PREV
						type = annex_everything
					}
					set_temp_variable = { KXN_Conquest_Mission_Focus_Days_Timeout = PREV.num_owned_states }
					multiply_temp_variable = { KXN_Conquest_Mission_Focus_Days_Timeout = 30 }
					custom_effect_tooltip = KXN_Focus_Declare_War_TT
				}
			}
		}
	}
	KXN_Form_Motor_Storm_Banner = {
		icon = helmet
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }
		
		visible = {
			has_completed_focus = KXN_Focus_ARMOUR_4
		}
		
		available = {
			has_tech = mechanised_infantry
			has_equipment = {
				light_tank_chassis > 24
			}
			has_equipment = {
				medium_tank_artillery_chassis > 49
			}
		}

		cost = 75
		fire_only_once = yes
		days_remove = 70
		modifier = { training_time_factor = 0.1 }

		remove_effect = {
			custom_effect_tooltip = KXN_Form_Motor_Storm_Banner_tt
			hidden_effect = {
				division_template = {
					name = "Motor Storm Banner"
					division_names_group = KIR_BANNER
					regiments = {
						mechanized = { x = 0 y = 0 }
						mechanized = { x = 0 y = 1 }
						mechanized = { x = 0 y = 2 }
						mechanized = { x = 0 y = 3 }
						mechanized = { x = 1 y = 0 }
						mechanized = { x = 1 y = 1 }
						mechanized = { x = 1 y = 2 }
						mechanized = { x = 1 y = 3 }
						medium_sp_artillery_brigade = { x = 2 y = 0 }
						medium_sp_artillery_brigade = { x = 2 y = 1 }
					}
					support = {
						light_tank_recon = { x = 0 y = 0 }
						kirin_braves = { x = 0 y = 1 }
						engineer = { x = 0 y = 2 }
					}
				}
				fix_weapon_techs = yes
				save_current_manpower = yes
				capital_scope = {
					add_manpower = -20000
					create_unit = {
						division = "name = \"Motor Storm Banner 'of the Infernal Cavalcade'\" division_template = \"Motor Storm Banner\" start_experience_factor = 0.3 start_equipment_factor = 1" owner = KXN count = 1
					}
					create_unit = {
						division = "name = \"Motor Storm Banner 'of the Galloping Steed'\" division_template = \"Motor Storm Banner\" start_experience_factor = 0.3 start_equipment_factor = 1" owner = KXN count = 1
					}
				}
				restore_previous_manpower = yes
			}
		}
	}
	KXN_Form_Gun_Truck_Banner = {
		icon = helmet
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }
		
		visible = {
			has_completed_focus = KXN_Focus_MOTORCYCLE_3
		}
		
		available = {
			has_tech = tech_trucks
			has_tech = motorised_infantry
		}

		cost = 75
		fire_only_once = yes
		days_remove = 70
		modifier = { training_time_factor = 0.1 }

		remove_effect = {
			custom_effect_tooltip = KXN_Form_Gun_Truck_Banner_tt
			hidden_effect = {
				division_template = {
					name = "Motor Cannon Banner"
					division_names_group = KIR_BANNER
					template_counter = 113
					regiments = {
						motorized = { x = 0 y = 0 }
						motorized = { x = 0 y = 1 }
						motorized = { x = 0 y = 2 }
						motorized = { x = 1 y = 0 }
						motorized = { x = 1 y = 1 }
						motorized = { x = 1 y = 2 }
						motorized = { x = 2 y = 0 }
						motorized = { x = 2 y = 1 }
						motorized = { x = 2 y = 2 }
						mot_artillery_brigade = { x = 3 y = 0 }
						mot_artillery_brigade = { x = 3 y = 1 }
						mot_artillery_brigade = { x = 4 y = 0 }
						mot_artillery_brigade = { x = 4 y = 1 }
					}
					support = {
						mot_recon = { x = 0 y = 0 }
						kirin_braves = { x = 0 y = 1 }
						engineer = { x = 0 y = 2 }
					}
				}
				fix_weapon_techs = yes
				save_current_manpower = yes
				capital_scope = {
					add_manpower = -26000
					create_unit = {
						division = "name = \"Motor Cannon Banner 'of the Iron Thunder'\" division_template = \"Motor Cannon Banner\" start_experience_factor = 0.3 start_equipment_factor = 1" owner = KXN count = 1
					}
					create_unit = {
						division = "name = \"Motor Cannon Banner 'of the Iron Storm'\" division_template = \"Motor Cannon Banner\" start_experience_factor = 0.3 start_equipment_factor = 1" owner = KXN count = 1
					}
				}
				restore_previous_manpower = yes
			}
		}
	}
	KXN_Form_Fire_Arrow_Banner = {
		icon = helmet
		allowed = { tag = KXN }
		ai_will_do = { factor = 25 }
		
		visible = {
			has_completed_focus = KXN_Focus_ROCKET
		}
		
		available = {
			has_tech = motorized_rocket_unit
		}

		cost = 75
		fire_only_once = yes
		days_remove = 70
		modifier = { training_time_factor = 0.1 }

		remove_effect = {
			custom_effect_tooltip = KXN_Form_Fire_Arrow_Banner_tt
			hidden_effect = {
				division_template = {
					name = "Fire Arrow Banner"
					division_names_group = KIR_BANNER
					regiments = {
						motorized = { x = 0 y = 0 }
						motorized = { x = 0 y = 1 }
						motorized = { x = 0 y = 2 }
						motorized = { x = 1 y = 0 }
						motorized = { x = 1 y = 1 }
						motorized = { x = 1 y = 2 }
						motorized = { x = 2 y = 0 }
						motorized = { x = 2 y = 1 }
						motorized_rocket_brigade = { x = 3 y = 0 }
						motorized_rocket_brigade = { x = 3 y = 1 }
						motorized_rocket_brigade = { x = 4 y = 0 }
						motorized_rocket_brigade = { x = 4 y = 1 }
					}
					support = {
						mot_recon = { x = 0 y = 0 }
						kirin_braves = { x = 0 y = 1 }
						engineer = { x = 0 y = 2 }
					}
				}
				fix_weapon_techs = yes
				save_current_manpower = yes
				capital_scope = {
					add_manpower = -24000
					create_unit = {
						division = "name = \"Fire Arrow Banner 'of the Flaming Spear'\" division_template = \"Fire Arrow Banner\" start_experience_factor = 0.3 start_equipment_factor = 1" owner = KXN count = 1
					}
					create_unit = {
						division = "name = \"Fire Arrow Banner 'of the Searing Lance'\" division_template = \"Fire Arrow Banner\" start_experience_factor = 0.3 start_equipment_factor = 1" owner = KXN count = 1
					}
				}
				restore_previous_manpower = yes
			}
		}
	}
	KXN_Abandon_Sword_Use = {
		icon = crossed_swords
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		visible = { has_idea = KXN_Sword_Dancer_Buff }
		
		cost = 25
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Abandon_Sword_Use"
			remove_ideas = KXN_Sword_Dancer_Buff
		}
	}
	KXN_Reverse_Vanguard_Motorisation = {
		icon = generic_motorized
		allowed = { is_kirin_race = yes }
		ai_will_do = { factor = 0 }
		
		visible = {
			has_tech = tech_kirin_vanguardmot
			has_country_flag = tech_kirin_vanguardmot_unlocked
			NOT = { has_completed_focus = KXN_LONG_MARCH_7_B }
		}
		
		cost = 25
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Reverse_Vanguard_Motorisation"
			custom_effect_tooltip = KXN_Reverse_Vanguard_Motorisation_tt
			hidden_effect = {
				set_technology = { tech_kirin_vanguardmot = 0 }
				KXN_REFRESH_VANGUARDS_EFFECT = yes
				clr_country_flag = tech_kirin_vanguardmot_unlocked
			}
		}
	}
	KXN_Reverse_Paratrooper_Motorisation = {
		icon = generic_motorized
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		visible = {
			has_tech = KXN_Para_Motorcyclists
			has_country_flag = KXN_Para_Motorcyclists_unlocked
			NOT = { has_completed_focus = KXN_LONG_MARCH_7_B }
		}
		
		cost = 25
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Reverse_Paratrooper_Motorisation"
			custom_effect_tooltip = KXN_Reverse_Paratrooper_Motorisation_tt
			hidden_effect = {
				set_technology = { KXN_Para_Motorcyclists = 0 }
				KXN_REFRESH_PARATROOPERS_EFFECT = yes
				clr_country_flag = KXN_Para_Motorcyclists_unlocked
				uncomplete_national_focus = {
					focus = KXN_Focus_MOTORCYCLE_7
					uncomplete_children = no
					refund_political_power = no
				}
			}
		}
	}
	KXN_Consecrate_State_Decision = {
		icon = generic_scorched_earth
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		fire_only_once = yes
		target_array = KXN.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_Consecrate_State_Flag
			has_country_flag = KXN_Consecrate_State_Show_Flag
			check_variable = { KXN_Consecrate_State_Decision_Limit_Var > 0 }
		}
		
		available = {
			FROM = { is_fully_controlled_by = KXN }
		}
		
		cost = 150
		
		target_trigger = {
			FROM = {
				OR = {
					state = 728
					state = 734
					state = 788
					state = 833
					state = 1065
					state = 1158
					state = 1204
					is_one_state_island = yes
					any_neighbor_state = {
						is_fully_controlled_by = KXN
						OR = {
							is_core_of = KXN
							has_dynamic_modifier = { modifier = KXN_Settler_Communities }
						}
					}
				}
				NOT = {
					is_core_of = KXN
					has_dynamic_modifier = { modifier = KXN_Settler_Communities }
					region = 85 ## Zaikiria
					region = 94
					state = 816 ## Mellifluve Right Bank
					state = 1073
					state = 1077
					state = 1078
					state = 1079
					state = 1080
					state = 1081
					state = 1082
					state = 926
					state = 1134 ## Mellifluve Frontier
					state = 1151
					state = 1149
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Consecrate_State_Decision target: [From.GetName]"
			FROM = {
				add_manpower = 25000
				if = {
					limit = { state = 1158 }
					set_province_name = {
						id = 13371
						name = KXN_AZURE_NAME
					}
				}
				force_disable_resistance = KXN
				custom_effect_tooltip = KXN_Becomes_Colony_State_tt
				add_dynamic_modifier = { modifier = KXN_Settler_Communities }
			}
			custom_effect_tooltip = KXN_Consecrate_State_Decision_TT
			hidden_effect = {
				subtract_from_variable = { var = KXN.KXN_Consecrate_State_Decision_Limit_Var value = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	KXN_Consecrate_State_HIDE = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Consecrate_State_Flag
			has_country_flag = KXN_Consecrate_State_Show_Flag
			check_variable = { KXN_Consecrate_State_Decision_Limit_Var > 0 }
		}
		complete_effect = {
			clr_country_flag = KXN_Consecrate_State_Show_Flag
			custom_effect_tooltip = KXN_Consecrate_State_HIDE_tt
		}
	}
	KXN_Consecrate_State_SHOW = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Consecrate_State_Flag
			NOT = { has_country_flag = KXN_Consecrate_State_Show_Flag }
			check_variable = { KXN_Consecrate_State_Decision_Limit_Var > 0 }
		}
		complete_effect = {
			set_country_flag = KXN_Consecrate_State_Show_Flag
			custom_effect_tooltip = KXN_Consecrate_State_SHOW_tt
		}
	}
	
	########### Bannerkir Levy ###########
	KXN_Bannerkir_Levy = {
		icon = generic_nationalism
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = any_controlled_state
		target_array = KXN.core_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_Bannerkir_Levy_Show_Flag
		}
		
		target_trigger = {
			FROM = {
				state_population_k > 250
				is_fully_controlled_by = KXN
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
		}
		
		cost = KXN_Bannerkir_Levy_Cost
		days_re_enable = 180
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Bannerkir_Levy target: [From.GetName]"
			custom_effect_tooltip = KXN_Bannerkir_Levy_tt
			hidden_effect = {
				save_current_manpower = yes
				add_to_variable = { KXN_Bannerkir_Levy_Cost = 15 }
				clamp_variable = { var = KXN_Bannerkir_Levy_Cost min = 0 max = 150 }
				FROM = { add_manpower = -25000 }
				restore_previous_manpower = yes
				add_manpower = 25000
			}
		}
	}
	KXN_Bannerkir_Levy_HIDE = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Bannerkir_Levy_Show_Flag
			NOT = { has_global_flag = KXN_The_Shattering_Happened }
		}
		complete_effect = {
			clr_country_flag = KXN_Bannerkir_Levy_Show_Flag
			custom_effect_tooltip = KXN_Bannerkir_Levy_HIDE_tt
		}
	}
	KXN_Bannerkir_Levy_SHOW = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Bannerkir_Levy_Show_Flag }
			NOT = { has_global_flag = KXN_The_Shattering_Happened }
		}
		complete_effect = {
			set_country_flag = KXN_Bannerkir_Levy_Show_Flag
			custom_effect_tooltip = KXN_Bannerkir_Levy_SHOW_tt
		}
	}
	KXN_Form_Tributary_HIDE = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Form_Tributary_Flag
			has_country_flag = KXN_Form_Tributary_Show_Flag
			NOT = { has_global_flag = KXN_The_Shattering_Happened }
		}
		complete_effect = {
			clr_country_flag = KXN_Form_Tributary_Show_Flag
			custom_effect_tooltip = KXN_Form_Tributary_HIDE_tt
		}
	}
	KXN_Form_Tributary_SHOW = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Form_Tributary_Flag
			NOT = { has_country_flag = KXN_Form_Tributary_Show_Flag }
			NOT = { has_global_flag = KXN_The_Shattering_Happened }
		}
		complete_effect = {
			set_country_flag = KXN_Form_Tributary_Show_Flag
			custom_effect_tooltip = KXN_Form_Tributary_SHOW_tt
		}
	}
	
	KXN_Nirik_Storm_For_AI_Decision = {
		allowed = { tag = KXN }
		ai_will_do = { factor = 30 }
		
		visible = {
			is_ai = yes
		}
		
		available = {
			is_ai = yes
			has_war = yes
		}

		cost = 15
		days_remove = 75
		days_re_enable = 150
		modifier = {
			army_speed_factor = 0.15
			initiative_factor = 0.15
			breakthrough_factor = 0.15
			no_supply_grace = 240
			org_loss_when_moving = -0.1
			land_night_attack = 0.1
		}
		complete_effect = {
			KXN_SET_NIRIK_PORTRAITS_EFFECT = yes
			add_country_leader_trait = nirik_fury
			if = {
				limit = { has_country_flag = KXNNirikStormValiantBuff_Flag }
				set_technology = {
					popup = no
					KXN_Super_Valiants = 1
				}
				KXN_REFRESH_VALIANTS_EFFECT = yes
			}
		}
		remove_effect = {
			KXN_SET_KIRIN_PORTRAITS_EFFECT = yes
			remove_country_leader_trait = nirik_fury
			if = {
				limit = {
					has_tech = KXN_Super_Valiants
				}
				set_technology = {
					popup = no
					KXN_Super_Valiants = 0
				}
				KXN_REFRESH_VALIANTS_EFFECT = yes
			}
		}
	}
}

special_projects = {
	KXN_Trans_Zebrica_Railway_Decision = {
		icon = generic_train
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = { has_completed_focus = KXN_Focus_DESTINY }
		
		available = {
			1085 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			1086 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			1130 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			1132 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			1128 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			912 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			913 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			914 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			916 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			330 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			1048 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			1049 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			1045 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			1043 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			1042 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			1038 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			974 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			971 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			970 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			968 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			935 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			953 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			957 = { custom_trigger_tooltip = { is_controlled_by_ROOT_or_ally = yes } }
			956 = { is_controlled_by_ROOT_or_ally = yes }
			num_of_civilian_factories_available_for_projects > 5
		}

		cost = 150
		days_remove = 365
		fire_only_once = yes
		
		highlight_states = {
			highlight_state_targets = {
				state = 1085
				state = 1086
				state = 1130
				state = 1132
				state = 1128
				state = 912
				state = 913
				state = 914
				state = 916
				state = 330
				state = 1048
				state = 1049
				state = 1045
				state = 1043
				state = 1042
				state = 1038
				state = 974
				state = 971
				state = 970
				state = 968
				state = 935
				state = 953
				state = 957
				state = 956
			}
		}
		
		modifier = {
			civilian_factory_use = 5
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Trans_Zebrica_Railway_Decision"
			set_country_flag = KXN_Trans_Zebrica_Railway_Decision_Completed_Flag
			every_country = {
				limit = { tag = KXN }
				build_railway = {
					level = 3
					build_only_on_allied = yes
					controller_priority = {
						base = 1
						modifier = {
							tag = KXN
							add = 2
						}
					}
					fallback = yes
					start_province = 16573
					target_province = 18985
					start_state = 1085
					target_state = 956
				}
			}
			add_equipment_to_stockpile = {
				type = train_equipment
				amount = 150
			}
		}
	}
	KXN_Trans_Zebrica_Railway_Decision_Speed_Up = {
		icon = kirin_corvee
		allowed = { tag = KXN }
		ai_will_do = { factor = 5 }
		
		visible = {
			has_completed_focus = KXN_Focus_DESTINY
			NOT = { has_country_flag = KXN_Trans_Zebrica_Railway_Decision_Completed_Flag }
			has_active_mission = KXN_Clarion_Legacy_Mission
		}
		
		available = { has_decision = KXN_Trans_Zebrica_Railway_Decision }

		cost = 150
		days_remove = 30
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Trans_Zebrica_Railway_Decision_Speed_Up"
			save_current_manpower = yes
			every_controlled_state = {
				limit = {
					OR = {
						state = 1130
						state = 1132
						state = 1128
						state = 912
						state = 913
						state = 914
						state = 916
						state = 330
						state = 1048
						state = 1049
						state = 1045
						state = 1043
						state = 1042
						state = 1038
						state = 974
						state = 971
						state = 970
						state = 968
						state = 935
						state = 953
						state = 957
					}
				}
				random_select_amount = 6
				add_manpower = -5000
			}
			restore_previous_manpower = yes
			add_days_remove = {
				decision = KXN_Trans_Zebrica_Railway_Decision
				days = -90
			}
		}
	}
	KXN_Marekong_Dam_Decision = {
		icon = GFX_decision_ktz_dam
		allowed = { always = no }
		ai_will_do = { factor = 10 }
		
		visible = { has_completed_focus = KXN_Focus_SETTLE }
		
		available = {
			has_full_control_of_state = 1083
			has_full_control_of_state = 1149
			num_of_civilian_factories_available_for_projects > 9
		}

		cost = 150
		days_remove = 365
		fire_only_once = yes
		state_target = any
		targets = { 1083 }
		
		highlight_states = {
			highlight_state_targets = {
				state = 1083
			}
		}
		
		modifier = {
			civilian_factory_use = 10
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Marekong_Dam_Decision"
			1083 = { 
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = industrial_complex
					level = 2
					instant_build = yes
				}
				add_building_construction = {
					type = dam
					level = 1
					instant_build = yes
					province = 16236
				}
			}
		}
	}
}

military_training_category = {
	KXN_unlock_rangers_support = {
		icon = jager_cap
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_FINEST
			check_variable = { KXN_Unlock_Support_Company_Var < 2 }
		}

		fire_only_once = yes
		cost = 5
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_unlock_rangers_support"
			set_technology = { KXN_Ranger_Tech = 1 }
			if = {
				limit = { check_variable = { KXN_Unlock_Support_Company_Var < 1 } }
				custom_effect_tooltip = KXN_Unlock_Support_Company_Left_TT
			}
			else = {
				custom_effect_tooltip = KXN_Unlock_Support_Company_End_TT
			}
			add_to_variable = { KXN_Unlock_Support_Company_Var = 1 }
		}
	}
	KXN_unlock_long_range_patrol_support = {
		icon = jager_cap
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_FINEST
			check_variable = { KXN_Unlock_Support_Company_Var < 2 }
		}

		fire_only_once = yes
		cost = 5
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_unlock_long_range_patrol_support"
			set_technology = { KXN_Long_Range_Tech = 1 }
			if = {
				limit = { check_variable = { KXN_Unlock_Support_Company_Var < 1 } }
				custom_effect_tooltip = KXN_Unlock_Support_Company_Left_TT
			}
			else = {
				custom_effect_tooltip = KXN_Unlock_Support_Company_End_TT
			}
			add_to_variable = { KXN_Unlock_Support_Company_Var = 1 }
		}
	}
	KXN_unlock_pioneer_support = {
		icon = jager_cap
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_FINEST
			check_variable = { KXN_Unlock_Support_Company_Var < 2 }
		}

		fire_only_once = yes
		cost = 5
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_unlock_pioneer_support"
			set_technology = { KXN_Pioneer_Tech = 1 }
			if = {
				limit = { check_variable = { KXN_Unlock_Support_Company_Var < 1 } }
				custom_effect_tooltip = KXN_Unlock_Support_Company_Left_TT
			}
			else = {
				custom_effect_tooltip = KXN_Unlock_Support_Company_End_TT
			}
			add_to_variable = { KXN_Unlock_Support_Company_Var = 1 }
		}
	}
	KXN_unlock_jungle_pioneers_support = {
		icon = jager_cap
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_FINEST
			check_variable = { KXN_Unlock_Support_Company_Var < 2 }
		}

		fire_only_once = yes
		cost = 5
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_unlock_jungle_pioneers_support"
			set_technology = { KXN_Jungle_Pioneer_Tech = 1 }
			if = {
				limit = { check_variable = { KXN_Unlock_Support_Company_Var < 1 } }
				custom_effect_tooltip = KXN_Unlock_Support_Company_Left_TT
			}
			else = {
				custom_effect_tooltip = KXN_Unlock_Support_Company_End_TT
			}
			add_to_variable = { KXN_Unlock_Support_Company_Var = 1 }
		}
	}
	KXN_Promote_Bonfire_Cascade = {
		icon = generic_army_support
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_CAPITAL_1
		}
		
		available = {
			has_completed_focus = KXN_Focus_MOTORCYCLE_6
		}

		fire_only_once = yes
		custom_cost_text = decision_cost_CP_25_army_xp_50
		custom_cost_trigger = {
			has_army_experience > 50
			check_variable = { var = command_power value = 25 compare = greater_than_or_equals }
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Promote_Bonfire_Cascade"
			hidden_effect = { army_experience = -50 add_command_power = -25 }
			add_trait = {
				 character = KXN_Bonfire_Cascade
				 slot = army_chief
				 trait = army_chief_maneuver_2
			}
			hidden_effect = {
				remove_trait = { character = KXN_Bonfire_Cascade slot = army_chief trait = army_chief_maneuver_1 }
			}
		}
	}
	KXN_Promote_Air_Chief_1 = {
		icon = generic_army_support
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_CAPITAL_1
			NOT = { has_country_flag = KXN_Promoted_Navy_Air_Chief }
		}

		fire_only_once = yes
		custom_cost_text = decision_cost_CP_25_army_xp_50
		custom_cost_trigger = {
			has_army_experience > 50
			check_variable = { var = command_power value = 25 compare = greater_than_or_equals }
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Promote_Air_Chief_1"
			hidden_effect = { army_experience = -50 add_command_power = -25 }
			set_country_flag = KXN_Promoted_Navy_Air_Chief
			add_trait = {
				 character = KXN_Air_Chief_1
				 slot = air_chief
				 trait = air_chief_ground_support_3
			}
			hidden_effect = {
				remove_trait = { character = KXN_Air_Chief_1 slot = air_chief trait = air_chief_ground_support_2 }
			}
			custom_effect_tooltip = KXN_Promoted_Navy_Air_Chief_TT
		}
	}
	KXN_Promote_Air_Chief_2 = {
		icon = generic_army_support
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_CAPITAL_1
			NOT = { has_country_flag = KXN_Promoted_Navy_Air_Chief }
		}

		fire_only_once = yes
		custom_cost_text = decision_cost_CP_25_army_xp_50
		custom_cost_trigger = {
			has_army_experience > 50
			check_variable = { var = command_power value = 25 compare = greater_than_or_equals }
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Promote_Air_Chief_2"
			hidden_effect = { army_experience = -50 add_command_power = -25 }
			set_country_flag = KXN_Promoted_Navy_Air_Chief
			add_trait = {
				 character = KXN_Air_Chief_2
				 slot = air_chief
				 trait = air_chief_all_weather_2
			}
			hidden_effect = {
				remove_trait = { character = KXN_Air_Chief_2 slot = air_chief trait = air_chief_all_weather_1 }
			}
			custom_effect_tooltip = KXN_Promoted_Navy_Air_Chief_TT
		}
	}
	KXN_Promote_Navy_Chief_1 = {
		icon = generic_army_support
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_CAPITAL_1
			NOT = { has_country_flag = KXN_Promoted_Navy_Air_Chief }
		}

		fire_only_once = yes
		custom_cost_text = decision_cost_CP_25_army_xp_50
		custom_cost_trigger = {
			has_army_experience > 50
			check_variable = { var = command_power value = 25 compare = greater_than_or_equals }
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Promote_Navy_Chief_1"
			hidden_effect = { army_experience = -50 add_command_power = -25 }
			set_country_flag = KXN_Promoted_Navy_Air_Chief
			add_trait = {
				 character = KXN_Navy_Chief_1
				 slot = navy_chief
				 trait = navy_chief_commerce_raiding_3
			}
			hidden_effect = {
				remove_trait = { character = KXN_Navy_Chief_1 slot = navy_chief trait = navy_chief_commerce_raiding_2 }
			}
			custom_effect_tooltip = KXN_Promoted_Navy_Air_Chief_TT
		}
	}
	KXN_Promote_Navy_Chief_2 = {
		icon = generic_army_support
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_CAPITAL_1
			NOT = { has_country_flag = KXN_Promoted_Navy_Air_Chief }
		}

		fire_only_once = yes
		custom_cost_text = decision_cost_CP_25_army_xp_50
		custom_cost_trigger = {
			has_army_experience > 50
			check_variable = { var = command_power value = 25 compare = greater_than_or_equals }
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Promote_Navy_Chief_2"
			hidden_effect = { army_experience = -50 add_command_power = -25 }
			set_country_flag = KXN_Promoted_Navy_Air_Chief
			add_trait = {
				 character = KXN_Navy_Chief_2
				 slot = navy_chief
				 trait = navy_chief_decisive_battle_2
			}
			hidden_effect = {
				remove_trait = { character = KXN_Navy_Chief_2 slot = navy_chief trait = navy_chief_decisive_battle_1 }
			}
			custom_effect_tooltip = KXN_Promoted_Navy_Air_Chief_TT
		}
	}
	KXN_Promote_Thunder_Run = {
		icon = generic_army_support
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_CAPITAL_1
			check_variable = { KXN_Promote_High_Command_Var > 0 }
		}

		fire_only_once = yes
		custom_cost_text = decision_cost_CP_25_army_xp_50
		custom_cost_trigger = {
			has_army_experience > 50
			check_variable = { var = command_power value = 25 compare = greater_than_or_equals }
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Promote_Thunder_Run"
			hidden_effect = { army_experience = -50 add_command_power = -25 }
			subtract_from_variable = { KXN_Promote_High_Command_Var = 1 }
			add_trait = {
				 character = KXN_Thunder_Run
				 slot = high_command
				 trait = army_armored_3
			}
			hidden_effect = {
				remove_trait = { character = KXN_Thunder_Run slot = high_command trait = army_armored_2 }
			}
			custom_effect_tooltip = KXN_Promote_High_Command_Left_TT
		}
	}
	KXN_Promote_Flame_Sprint = {
		icon = generic_army_support
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_CAPITAL_1
			check_variable = { KXN_Promote_High_Command_Var > 0 }
		}

		fire_only_once = yes
		custom_cost_text = decision_cost_CP_25_army_xp_50
		custom_cost_trigger = {
			has_army_experience > 50
			check_variable = { var = command_power value = 25 compare = greater_than_or_equals }
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Promote_Flame_Sprint"
			hidden_effect = { army_experience = -50 add_command_power = -25 }
			subtract_from_variable = { KXN_Promote_High_Command_Var = 1 }
			add_trait = {
				 character = KXN_Flame_Sprint
				 slot = high_command
				 trait = army_CombinedArms_2
			}
			hidden_effect = {
				remove_trait = { character = KXN_Flame_Sprint slot = high_command trait = army_CombinedArms_1 }
			}
			custom_effect_tooltip = KXN_Promote_High_Command_Left_TT
		}
	}
	KXN_Promote_Flint_Lock = {
		icon = generic_army_support
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_CAPITAL_1
			check_variable = { KXN_Promote_High_Command_Var > 0 }
		}

		fire_only_once = yes
		custom_cost_text = decision_cost_CP_25_army_xp_50
		custom_cost_trigger = {
			has_army_experience > 50
			check_variable = { var = command_power value = 25 compare = greater_than_or_equals }
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Promote_Flint_Lock"
			hidden_effect = { army_experience = -50 add_command_power = -25 }
			subtract_from_variable = { KXN_Promote_High_Command_Var = 1 }
			add_trait = {
				 character = KXN_Flint_Lock
				 slot = high_command
				 trait = army_commando_3
			}
			hidden_effect = {
				remove_trait = { character = KXN_Flint_Lock slot = high_command trait = army_commando_2 }
			}
			custom_effect_tooltip = KXN_Promote_High_Command_Left_TT
		}
	}
	KXN_Promote_Match_Strike = {
		icon = generic_army_support
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_CAPITAL_1
			check_variable = { KXN_Promote_High_Command_Var > 0 }
		}

		fire_only_once = yes
		custom_cost_text = decision_cost_CP_25_army_xp_50
		custom_cost_trigger = {
			has_army_experience > 50
			check_variable = { var = command_power value = 25 compare = greater_than_or_equals }
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Promote_Match_Strike"
			hidden_effect = { army_experience = -50 add_command_power = -25 }
			subtract_from_variable = { KXN_Promote_High_Command_Var = 1 }
			add_trait = {
				 character = KXN_Match_Strike
				 slot = high_command
				 trait = army_artillery_2
			}
			hidden_effect = {
				remove_trait = { character = KXN_Match_Strike slot = high_command trait = army_artillery_1 }
			}
			custom_effect_tooltip = KXN_Promote_High_Command_Left_TT
		}
	}
	KXN_Promote_Cold_Burn = {
		icon = generic_army_support
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_CAPITAL_1
			check_variable = { KXN_Promote_High_Command_Var > 0 }
		}

		fire_only_once = yes
		custom_cost_text = decision_cost_CP_25_army_xp_50
		custom_cost_trigger = {
			has_army_experience > 50
			check_variable = { var = command_power value = 25 compare = greater_than_or_equals }
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Promote_Cold_Burn"
			hidden_effect = { army_experience = -50 add_command_power = -25 }
			subtract_from_variable = { KXN_Promote_High_Command_Var = 1 }
			add_trait = {
				 character = KXN_Cold_Burn
				 slot = high_command
				 trait = air_airborne_3
			}
			hidden_effect = {
				remove_trait = { character = KXN_Cold_Burn slot = high_command trait = air_airborne_2 }
			}
			custom_effect_tooltip = KXN_Promote_High_Command_Left_TT
		}
	}
	KXN_Promote_Jet_Fire = {
		icon = generic_army_support
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_CAPITAL_1
			check_variable = { KXN_Promote_High_Command_Var > 0 }
		}

		fire_only_once = yes
		custom_cost_text = decision_cost_CP_25_army_xp_50
		custom_cost_trigger = {
			has_army_experience > 50
			check_variable = { var = command_power value = 25 compare = greater_than_or_equals }
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Promote_Jet_Fire"
			hidden_effect = { army_experience = -50 add_command_power = -25 }
			subtract_from_variable = { KXN_Promote_High_Command_Var = 1 }
			add_trait = {
				 character = KXN_Jet_Fire
				 slot = high_command
				 trait = air_close_air_support_2
			}
			hidden_effect = {
				remove_trait = { character = KXN_Jet_Fire slot = high_command trait = air_close_air_support_1 }
			}
			custom_effect_tooltip = KXN_Promote_High_Command_Left_TT
		}
	}
	KXN_Promote_Klaxon_Blare = {
		icon = generic_army_support
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_completed_focus = KXN_Focus_CAPITAL_1
			check_variable = { KXN_Promote_High_Command_Var > 0 }
		}

		fire_only_once = yes
		custom_cost_text = decision_cost_CP_25_army_xp_50
		custom_cost_trigger = {
			has_army_experience > 50
			check_variable = { var = command_power value = 25 compare = greater_than_or_equals }
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Promote_Klaxon_Blare"
			hidden_effect = { army_experience = -50 add_command_power = -25 }
			subtract_from_variable = { KXN_Promote_High_Command_Var = 1 }
			add_trait = {
				 character = KXN_Klaxon_Blare
				 slot = high_command
				 trait = navy_amphibious_assault_3
			}
			hidden_effect = {
				remove_trait = { character = KXN_Klaxon_Blare slot = high_command trait = navy_amphibious_assault_2 }
			}
			custom_effect_tooltip = KXN_Promote_High_Command_Left_TT
		}
	}
}

KXN_War_Train_Category = {
	KXN_Show_War_Train_On_Map = {
		icon = steaming_train
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		on_map_mode = map_only
		
		target_trigger = {
			FROM = {
				controller = {
					OR = {
						tag = KXN
						is_ally_with = KXN
					}
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
			highlight_color_before_active = 3
		}
		
		visible = {
			has_country_flag = KXN_Move_War_Train_Show_Flag
			FROM = { has_dynamic_modifier = { modifier = KXN_War_Train_Modifier } }
		}
		complete_effect = {
			hidden_effect = {
				scoped_sound_effect = railway_gun_move
				scoped_sound_effect = select_railway_gun
			}
		}
	}
	KXN_Move_War_Train_Decision = {
		icon = generic_train
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		on_map_mode = map_only
		
		target_trigger = {
			FROM = {
				controller = {
					OR = {
						tag = KXN
						is_ally_with = KXN
					}
				}
			}
		}
		
		highlight_states = {
			highlight_states_trigger = {
				state = FROM
			}
			highlight_color_while_active = 3
		}
		
		visible = {
			has_country_flag = KXN_Move_War_Train_Show_Flag
			FROM = {
				if = {
					limit = {
						any_state = {
							has_dynamic_modifier = { modifier = KXN_War_Train_Modifier }
						}
					}
					any_neighbor_state = {
						has_dynamic_modifier = { modifier = KXN_War_Train_Modifier }
					}
				}
				else = {
					is_capital = yes
					is_controlled_by = KXN
				}
			}
		}
		
		available = {
		}

		days_remove = 10
		
		custom_cost_trigger = {
			has_political_power > 9
			check_variable = { var = command_power value = 10 compare = greater_than_or_equals }
		}

		custom_cost_text = CFR_decision_cost_CP_10_pp_10
		
		modifier = {
			army_fuel_consumption_factor = 0.15
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Move_War_Train_Decision target: [From.GetName]"
			hidden_effect = {
				add_political_power = -10
				add_command_power = -10
				scoped_sound_effect = railway_gun_move
				scoped_sound_effect = railway_gun_move
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Move_War_Train_Decision target: [From.GetName]"
			if = {
				limit = {
					any_state = {
						has_dynamic_modifier = { modifier = KXN_War_Train_Modifier }
					}
				}
				every_state = {
					limit = { has_dynamic_modifier = { modifier = KXN_War_Train_Modifier } }
					remove_dynamic_modifier = { modifier = KXN_War_Train_Modifier }
					custom_effect_tooltip = KIR_line_break
				}
			}
			FROM = {
				add_dynamic_modifier = { modifier = KXN_War_Train_Modifier }
				custom_effect_tooltip = KIR_line_break
			}
			hidden_effect = {
				scoped_sound_effect = select_railway_gun
				scoped_sound_effect = select_railway_gun
			}
		}

		cancel_trigger = {
			FROM = {
				NOT = {
					controller = {
						OR = {
							tag = KXN
							is_ally_with = KXN
						}
					}
				}
			}
		}
	}
	KXN_War_Train_Upgrade_Locomotive = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 2 }
		
		visible = { check_variable = { KXN_War_Train_Upgrade_Locomotive_Taken_Var < 3 } }

		cost = 50
		days_remove = 30
		modifier = { civilian_factory_use = 3 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Upgrade_Locomotive"
			add_to_variable = { var = KXN_War_Train_Upgrade_Locomotive_Taken_Var value = 1 }
			add_to_variable = { var = KXN_train_army_speed_factor_for_controller value = 0.05 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_1 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 5
		}
	}
	KXN_War_Train_Add_Reconnaissance = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 2 }

		cost = 75
		days_remove = 30
		fire_only_once = yes
		modifier = { civilian_factory_use = 3 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Add_Reconnaissance"
			add_to_variable = { var = KXN_War_Train_Upgrade_Reconnaissance_Taken_Var value = 1 }
			subtract_from_variable = { var = KXN_train_resistance_damage_to_garrison value = 0.1 }
			subtract_from_variable = { var = KXN_train_resistance_garrison_penetration_chance value = 0.1 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_9 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 10
		}
	}
	KXN_War_Train_Upgrade_Reconnaissance = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 1 }
		
		visible = { 
			check_variable = { KXN_War_Train_Upgrade_Reconnaissance_Taken_Var > 0 }
			check_variable = { KXN_War_Train_Upgrade_Reconnaissance_Taken_Var < 4 }
		}

		cost = 25
		days_remove = 30
		modifier = { civilian_factory_use = 2 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Upgrade_Reconnaissance"
			add_to_variable = { var = KXN_War_Train_Upgrade_Reconnaissance_Taken_Var value = 1 }
			subtract_from_variable = { var = KXN_train_resistance_damage_to_garrison value = 0.05 }
			subtract_from_variable = { var = KXN_train_resistance_garrison_penetration_chance value = 0.05 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_10 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 5
		}
	}
	KXN_War_Train_Add_Armour = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 2 }

		cost = 75
		days_remove = 30
		fire_only_once = yes
		modifier = { civilian_factory_use = 3 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Add_Armour"
			add_to_variable = { var = KXN_War_Train_Upgrade_Armour_Taken_Var value = 1 }
			add_to_variable = { var = KXN_train_army_attack_factor value = 0.1 }
			add_to_variable = { var = KXN_train_breakthrough_factor value = 0.1 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_11 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 10
		}
	}
	KXN_War_Train_Upgrade_Armour = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 1 }
		
		visible = { 
			check_variable = { KXN_War_Train_Upgrade_Armour_Taken_Var > 0 }
			check_variable = { KXN_War_Train_Upgrade_Armour_Taken_Var < 4 }
		}

		cost = 25
		days_remove = 30
		modifier = { civilian_factory_use = 2 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Upgrade_Armour"
			add_to_variable = { var = KXN_War_Train_Upgrade_Armour_Taken_Var value = 1 }
			add_to_variable = { var = KXN_train_army_attack_factor value = 0.05 }
			add_to_variable = { var = KXN_train_breakthrough_factor value = 0.05 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_12 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 5
		}
	}
	KXN_War_Train_Add_Artillery = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 2 }

		cost = 75
		days_remove = 30
		fire_only_once = yes
		modifier = { civilian_factory_use = 3 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Add_Artillery"
			add_to_variable = { var = KXN_War_Train_Upgrade_Artillery_Taken_Var value = 1 }
			add_to_variable = { var = KXN_train_enemy_attrition value = 0.1 }
			subtract_from_variable = { var = KXN_train_enemy_local_supplies value = 0.1 }
			subtract_from_variable = { var = KXN_train_enemy_army_speed_factor value = 0.1 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_5 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 10
		}
	}
	KXN_War_Train_Upgrade_Artillery = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 1 }
		
		visible = { 
			check_variable = { KXN_War_Train_Upgrade_Artillery_Taken_Var > 0 }
			check_variable = { KXN_War_Train_Upgrade_Artillery_Taken_Var < 4 }
		}

		cost = 25
		days_remove = 30
		modifier = { civilian_factory_use = 2 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Upgrade_Artillery"
			add_to_variable = { var = KXN_War_Train_Upgrade_Artillery_Taken_Var value = 1 }
			add_to_variable = { var = KXN_train_enemy_attrition value = 0.05 }
			subtract_from_variable = { var = KXN_train_enemy_local_supplies value = 0.05 }
			subtract_from_variable = { var = KXN_train_enemy_army_speed_factor value = 0.05 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_6 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 5
		}
	}
	KXN_War_Train_Add_Anti_Aircraft = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 2 }

		cost = 75
		days_remove = 30
		fire_only_once = yes
		modifier = { civilian_factory_use = 3 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Add_Anti_Aircraft"
			add_to_variable = { var = KXN_War_Train_Upgrade_Anti_Aircraft_Taken_Var value = 1 }
			add_to_variable = { var = KXN_train_anti_air value = 0.1 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_13 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 10
		}
	}
	KXN_War_Train_Upgrade_Anti_Aircraft = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 1 }
		
		visible = { 
			check_variable = { KXN_War_Train_Upgrade_Anti_Aircraft_Taken_Var > 0 }
			check_variable = { KXN_War_Train_Upgrade_Anti_Aircraft_Taken_Var < 4 }
		}

		cost = 25
		days_remove = 30
		modifier = { civilian_factory_use = 2 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Upgrade_Anti_Aircraft"
			add_to_variable = { var = KXN_War_Train_Upgrade_Anti_Aircraft_Taken_Var value = 1 }
			add_to_variable = { var = KXN_train_anti_air value = 0.05 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_14 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 5
		}
	}
	KXN_War_Train_Add_Commissary = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 2 }

		cost = 75
		days_remove = 30
		fire_only_once = yes
		modifier = { civilian_factory_use = 3 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Add_Commissary"
			add_to_variable = { var = KXN_War_Train_Upgrade_Commissary_Taken_Var value = 1 }
			add_to_variable = { var = KXN_train_local_supplies_for_controller value = 0.1 }
			add_to_variable = { var = KXN_train_equipment_capture_factor_for_controller value = 0.1 }
			subtract_from_variable = { var = KXN_train_attrition_for_controller value = 0.1 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_3 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 10
		}
	}
	KXN_War_Train_Upgrade_Commissary = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 1 }
		
		visible = { 
			check_variable = { KXN_War_Train_Upgrade_Commissary_Taken_Var > 0 }
			check_variable = { KXN_War_Train_Upgrade_Commissary_Taken_Var < 4 }
		}

		cost = 25
		days_remove = 30
		modifier = { civilian_factory_use = 2 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Upgrade_Commissary"
			add_to_variable = { var = KXN_War_Train_Upgrade_Commissary_Taken_Var value = 1 }
			add_to_variable = { var = KXN_train_local_supplies_for_controller value = 0.05 }
			add_to_variable = { var = KXN_train_equipment_capture_factor_for_controller value = 0.05 }
			subtract_from_variable = { var = KXN_train_attrition_for_controller value = 0.05 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_4 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 5
		}
	}
	KXN_War_Train_Add_Radio = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 2 }

		cost = 75
		days_remove = 30
		fire_only_once = yes
		modifier = { civilian_factory_use = 3 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Add_Radio"
			add_to_variable = { var = KXN_War_Train_Upgrade_Radio_Taken_Var value = 1 }
			subtract_from_variable = { var = KXN_train_local_factory_sabotage value = 0.1 }
			subtract_from_variable = { var = KXN_train_local_intel_to_enemies value = 0.1 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_7 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 10
		}
	}
	KXN_War_Train_Upgrade_Radio = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 1 }
		
		visible = { 
			check_variable = { KXN_War_Train_Upgrade_Radio_Taken_Var > 0 }
			check_variable = { KXN_War_Train_Upgrade_Radio_Taken_Var < 4 }
		}

		cost = 25
		days_remove = 30
		modifier = { civilian_factory_use = 2 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Upgrade_Radio"
			add_to_variable = { var = KXN_War_Train_Upgrade_Radio_Taken_Var value = 1 }
			subtract_from_variable = { var = KXN_train_local_factory_sabotage value = 0.05 }
			subtract_from_variable = { var = KXN_train_local_intel_to_enemies value = 0.05 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_8 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 5
		}
	}
	KXN_War_Train_Upgrade_Caboose = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		available = { num_of_civilian_factories_available_for_projects > 2 }
		
		visible = { check_variable = { KXN_War_Train_Upgrade_Caboose_Taken_Var < 3 } }

		cost = 50
		days_remove = 30
		modifier = { civilian_factory_use = 3 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Upgrade_Caboose"
			add_to_variable = { var = KXN_War_Train_Upgrade_Caboose_Taken_Var value = 1 }
			add_to_variable = { var = KXN_train_local_org_regain value = 0.05 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_2 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 5
		}
	}
	KXN_War_Train_Strengthen_Bellator = {
		icon = generic_construction
		allowed = { tag = KXN }
		ai_will_do = { factor = 1 }
		
		visible = { check_variable = { KXN_War_Train_Strengthen_Bellator_Taken_Var < 5 } }

		custom_cost_trigger = {
			has_equipment = {
				infantry_equipment > 199
			}
			has_manpower > 1999
			command_power > 19
		}

		custom_cost_text = decision_cost_200_infantry_2000_manpower_20_cp
		
		days_remove = 30
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision KXN_War_Train_Strengthen_Bellator"
			hidden_effect = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = -200
				}
				add_manpower = -2000
				add_command_power = -20
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_War_Train_Strengthen_Bellator"
			add_to_variable = { var = KXN_War_Train_Strengthen_Bellator_Taken_Var value = 1 }
			add_to_variable = { var = KXN_train_army_defence_factor value = 0.05 }
			add_to_variable = { var = KXN_train_land_reinforce_rate value = 0.05 }
			effect_tooltip = { swap_ideas = { add_idea = KXN_War_Train_Modifier_DUMMY_15 remove_idea = KXN_War_Train_Modifier_DUMMY } }
			army_experience = 5
		}
	}
	KXN_Move_War_Train_HIDE = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Move_War_Train_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Move_War_Train_Show_Flag
			custom_effect_tooltip = KXN_Move_War_Train_HIDE_tt
		}
	}
	KXN_Move_War_Train_SHOW = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Move_War_Train_Show_Flag }
		}
		complete_effect = {
			set_country_flag = KXN_Move_War_Train_Show_Flag
			custom_effect_tooltip = KXN_Move_War_Train_SHOW_tt
		}
	}
}
KXN_Griffonland_Category = {
	KXN_Incite_Revolt_Griffonland = {
		icon = generic_break_treaty
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		target_root_trigger = { has_war_with = GRD }
		visible = { has_war_with = GRD }
		
		target_trigger = {
			FROM = {
				NOT = {
					has_country_flag = KXN_Griffon_Country_In_Revolt_Flag
					check_variable = { KXN_Incite_Revolt_Griffonland_Var > 3 }
				}
				GRD = { has_same_country_main_culture_as_PREV = no }
				any_core_state = { is_owned_and_controlled_by = GRD }
				is_griffon_continent_griffon_country = yes
				exists = no
			}
		}
		
		target_array = KXN.KXN_Griffon_Revolt_Array
		target_non_existing = yes

		custom_cost_trigger = {
			has_equipment = {
				infantry_equipment > 499
			}
			has_political_power > 49
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Incite_Revolt_Griffonland_Req_tt
				check_variable = { FROM.KXN_Incite_Revolt_Griffonland_State_Num < 11 }
			}
		}

		custom_cost_text = decision_cost_500_guns_50_pp
		days_remove = 30

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Incite_Revolt_Griffonland"
			hidden_effect = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = -500
				}
				add_political_power = -50
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Incite_Revolt_Griffonland"
			FROM = {
				add_to_variable = { KXN_Incite_Revolt_Griffonland_Var = 1 }
				custom_effect_tooltip = KXN_Incite_Revolt_Griffonland_TT
				if = {
					limit = {
						check_variable = { KXN_Incite_Revolt_Griffonland_Var > 2 }
					}
					custom_effect_tooltip = KXN_Incite_Revolt_Griffonland_State_TT
					every_core_state = {
						display_individual_scopes = yes
						limit = { is_owned_and_controlled_by = GRD }
						add_to_temp_variable = { temp_var = 1 }
					}
					effect_tooltip = {
						GRD = { release_on_controlled = PREV }
						FROM = {
							declare_war_on = {
								target = GRD
								type = independence_wargoal
							}
						}
						KXN = { puppet = PREV }
					}
				}
				hidden_effect = {
					if = {
						limit = {
							check_variable = { KXN_Incite_Revolt_Griffonland_Var > 3 }
						}
						set_country_flag = KXN_Griffon_Country_In_Revolt_Flag
						GRD = { release_on_controlled = PREV }
						FROM = {
							declare_war_on = {
								target = GRD
								type = independence_wargoal
							}
						}
						KXN = { puppet = PREV }
						drop_cosmetic_tag = yes
						set_cosmetic_tag = KXN_Tributary
						division_template = {
							name = "Rebel Infantry"
							regiments = {
								infantry = { x = 0 y = 0 }
								infantry = { x = 0 y = 1 }
								infantry = { x = 0 y = 2 }
								infantry = { x = 1 y = 0 }
								infantry = { x = 1 y = 1 }
								infantry = { x = 1 y = 2 }
								infantry = { x = 2 y = 0 }
								infantry = { x = 2 y = 1 }
								infantry = { x = 2 y = 2 }
							}
							support = {
								artillery = { x = 0 y = 0 }
							}
						}
						division_template = {
							name = "Rebel Militia"
							regiments = {
								militia = { x = 0 y = 0 }
								militia = { x = 0 y = 1 }
								militia = { x = 0 y = 2 }
								militia = { x = 1 y = 0 }
								militia = { x = 1 y = 1 }
								militia = { x = 1 y = 2 }
								militia = { x = 2 y = 0 }
								militia = { x = 2 y = 1 }
								militia = { x = 2 y = 2 }
							}
						}
						save_current_manpower = yes
						capital_scope = {
							add_manpower = -63000
							create_unit = {
								division = "division_template = \"Rebel Infantry\" start_experience_factor = 0.25 start_equipment_factor = 1"
								owner = PREV
								count = 3
							}
							create_unit = {
								division = "division_template = \"Rebel Militia\" start_experience_factor = 0.15 start_equipment_factor = 1"
								owner = PREV
								count = 4
							}
						}
						restore_previous_manpower = yes
					}
				}
			}
		}
	}
}
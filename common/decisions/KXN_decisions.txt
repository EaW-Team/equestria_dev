KXN_Conquest_Category = {
	KXN_Conquest_Mission_1 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes ## Needed to enable custom_cost_text
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_1_Cost_tt ## Stage Indicator
		days_mission_timeout = KXN_Conquest_Mission_1_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_1 = { ## Enemy country defeated
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_1"
			custom_effect_tooltip = KXN_Conquest_Mission_1_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_1_Active ## Frees up mission
				clear_variable = KXN_Conquest_Mission_1_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_1_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_1
				activate_mission = KXN_Conquest_Mission_1 ## Removes the mission from the menu
				remove_mission = KXN_Conquest_Mission_1
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_1"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_1 = { ## If prerequisites have been met but player forgot to click
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_1_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_1 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_1_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_1_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_1 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_1_Active
				clear_variable = KXN_Conquest_Mission_1_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_1_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_1
				activate_mission = KXN_Conquest_Mission_1
				remove_mission = KXN_Conquest_Mission_1
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_1 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_1 = { ## White peace with enemy country
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_1"
			clr_country_flag = KXN_Conquest_Mission_1_Active
			clear_variable = KXN_Conquest_Mission_1_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_1_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_1
		}
	}
	KXN_Conquest_Mission_2 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_2_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_2_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_2 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_2"
			custom_effect_tooltip = KXN_Conquest_Mission_2_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_2_Active
				clear_variable = KXN_Conquest_Mission_2_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_2_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_2
				activate_mission = KXN_Conquest_Mission_2
				remove_mission = KXN_Conquest_Mission_2
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_2"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_2 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_2_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_2 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_2_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_2_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_2 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_2_Active
				clear_variable = KXN_Conquest_Mission_2_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_2_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_2
				activate_mission = KXN_Conquest_Mission_2
				remove_mission = KXN_Conquest_Mission_2
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_2 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_2 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_2"
			clr_country_flag = KXN_Conquest_Mission_2_Active
			clear_variable = KXN_Conquest_Mission_2_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_2_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_2
		}
	}
	KXN_Conquest_Mission_3 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_3_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_3_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_3 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_3"
			custom_effect_tooltip = KXN_Conquest_Mission_3_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_3_Active
				clear_variable = KXN_Conquest_Mission_3_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_3_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_3
				activate_mission = KXN_Conquest_Mission_3
				remove_mission = KXN_Conquest_Mission_3
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_3"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_3 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_3_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_3 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_3_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_3_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_3 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_3_Active
				clear_variable = KXN_Conquest_Mission_3_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_3_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_3
				activate_mission = KXN_Conquest_Mission_3
				remove_mission = KXN_Conquest_Mission_3
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_3 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_3 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_3"
			clr_country_flag = KXN_Conquest_Mission_3_Active
			clear_variable = KXN_Conquest_Mission_3_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_3_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_3
		}
	}
	KXN_Conquest_Mission_4 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_4_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_4_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_4 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_4"
			custom_effect_tooltip = KXN_Conquest_Mission_4_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_4_Active
				clear_variable = KXN_Conquest_Mission_4_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_4_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_4
				activate_mission = KXN_Conquest_Mission_4
				remove_mission = KXN_Conquest_Mission_4
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_4"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_4 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_4_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_4 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_4_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_4_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_4 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_4_Active
				clear_variable = KXN_Conquest_Mission_4_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_4_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_4
				activate_mission = KXN_Conquest_Mission_4
				remove_mission = KXN_Conquest_Mission_4
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_4 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_4 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_4"
			clr_country_flag = KXN_Conquest_Mission_4_Active
			clear_variable = KXN_Conquest_Mission_4_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_4_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_4
		}
	}
	KXN_Conquest_Mission_5 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_5_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_5_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_5 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_5"
			custom_effect_tooltip = KXN_Conquest_Mission_5_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_5_Active
				clear_variable = KXN_Conquest_Mission_5_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_5_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_5
				activate_mission = KXN_Conquest_Mission_5
				remove_mission = KXN_Conquest_Mission_5
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_5"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_5 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_5_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_5 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_5_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_5_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_5 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_5_Active
				clear_variable = KXN_Conquest_Mission_5_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_5_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_5
				activate_mission = KXN_Conquest_Mission_5
				remove_mission = KXN_Conquest_Mission_5
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_5 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_5 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_5"
			clr_country_flag = KXN_Conquest_Mission_5_Active
			clear_variable = KXN_Conquest_Mission_5_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_5_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_5
		}
	}
	KXN_Conquest_Mission_6 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_6_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_6_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_6 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_6"
			custom_effect_tooltip = KXN_Conquest_Mission_6_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_6_Active
				clear_variable = KXN_Conquest_Mission_6_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_6_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_6
				activate_mission = KXN_Conquest_Mission_6
				remove_mission = KXN_Conquest_Mission_6
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_6"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_6 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_6_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_6 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_6_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_6_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_6 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_6_Active
				clear_variable = KXN_Conquest_Mission_6_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_6_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_6
				activate_mission = KXN_Conquest_Mission_6
				remove_mission = KXN_Conquest_Mission_6
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_6 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_6 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_6"
			clr_country_flag = KXN_Conquest_Mission_6_Active
			clear_variable = KXN_Conquest_Mission_6_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_6_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_6
		}
	}
	KXN_Conquest_Mission_7 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_7_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_7_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_7 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_7"
			custom_effect_tooltip = KXN_Conquest_Mission_7_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_7_Active
				clear_variable = KXN_Conquest_Mission_7_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_7_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_7
				activate_mission = KXN_Conquest_Mission_7
				remove_mission = KXN_Conquest_Mission_7
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_7"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_7 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_7_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_7 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_7_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_7_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_7 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_7_Active
				clear_variable = KXN_Conquest_Mission_7_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_7_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_7
				activate_mission = KXN_Conquest_Mission_7
				remove_mission = KXN_Conquest_Mission_7
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_7 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_7 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_7"
			clr_country_flag = KXN_Conquest_Mission_7_Active
			clear_variable = KXN_Conquest_Mission_7_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_7_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_7
		}
	}
	KXN_Conquest_Mission_8 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_8_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_8_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_8 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_8"
			custom_effect_tooltip = KXN_Conquest_Mission_8_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_8_Active
				clear_variable = KXN_Conquest_Mission_8_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_8_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_8
				activate_mission = KXN_Conquest_Mission_8
				remove_mission = KXN_Conquest_Mission_8
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_8"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_8 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_8_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_8 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_8_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_8_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_8 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_8_Active
				clear_variable = KXN_Conquest_Mission_8_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_8_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_8
				activate_mission = KXN_Conquest_Mission_8
				remove_mission = KXN_Conquest_Mission_8
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_8 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_8 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_8"
			clr_country_flag = KXN_Conquest_Mission_8_Active
			clear_variable = KXN_Conquest_Mission_8_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_8_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_8
		}
	}
	KXN_Conquest_Mission_9 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_9_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_9_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_9 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_9"
			custom_effect_tooltip = KXN_Conquest_Mission_9_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_9_Active
				clear_variable = KXN_Conquest_Mission_9_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_9_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_9
				activate_mission = KXN_Conquest_Mission_9
				remove_mission = KXN_Conquest_Mission_9
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_9"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_9 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_9_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_9 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_9_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_9_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_9 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_9_Active
				clear_variable = KXN_Conquest_Mission_9_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_9_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_9
				activate_mission = KXN_Conquest_Mission_9
				remove_mission = KXN_Conquest_Mission_9
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_9 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_9 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_9"
			clr_country_flag = KXN_Conquest_Mission_9_Active
			clear_variable = KXN_Conquest_Mission_9_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_9_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_9
		}
	}
	KXN_Conquest_Mission_10 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_10_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_10_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_10 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_10"
			custom_effect_tooltip = KXN_Conquest_Mission_10_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_10_Active
				clear_variable = KXN_Conquest_Mission_10_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_10_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_10
				activate_mission = KXN_Conquest_Mission_10
				remove_mission = KXN_Conquest_Mission_10
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_10"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_10 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_10_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_10 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_10_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_10_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_10 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_10_Active
				clear_variable = KXN_Conquest_Mission_10_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_10_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_10
				activate_mission = KXN_Conquest_Mission_10
				remove_mission = KXN_Conquest_Mission_10
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_10 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_10 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_10"
			clr_country_flag = KXN_Conquest_Mission_10_Active
			clear_variable = KXN_Conquest_Mission_10_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_10_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_10
		}
	}
	KXN_Conquest_Mission_11 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_11_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_11_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_11 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_11"
			custom_effect_tooltip = KXN_Conquest_Mission_11_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_11_Active
				clear_variable = KXN_Conquest_Mission_11_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_11_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_11
				activate_mission = KXN_Conquest_Mission_11
				remove_mission = KXN_Conquest_Mission_11
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_11"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_11 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_11_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_11 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_11_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_11_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_11 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_11_Active
				clear_variable = KXN_Conquest_Mission_11_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_11_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_11
				activate_mission = KXN_Conquest_Mission_11
				remove_mission = KXN_Conquest_Mission_11
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_11 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_11 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_11"
			clr_country_flag = KXN_Conquest_Mission_11_Active
			clear_variable = KXN_Conquest_Mission_11_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_11_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_11
		}
	}
	KXN_Conquest_Mission_12 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_12_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_12_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_12 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_12"
			custom_effect_tooltip = KXN_Conquest_Mission_12_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_12_Active
				clear_variable = KXN_Conquest_Mission_12_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_12_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_12
				activate_mission = KXN_Conquest_Mission_12
				remove_mission = KXN_Conquest_Mission_12
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_12"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_12 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_12_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_12 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_12_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_12_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_12 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_12_Active
				clear_variable = KXN_Conquest_Mission_12_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_12_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_12
				activate_mission = KXN_Conquest_Mission_12
				remove_mission = KXN_Conquest_Mission_12
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_12 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_12 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_12"
			clr_country_flag = KXN_Conquest_Mission_12_Active
			clear_variable = KXN_Conquest_Mission_12_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_12_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_12
		}
	}
	KXN_Conquest_Mission_13 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_13_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_13_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_13 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_13"
			custom_effect_tooltip = KXN_Conquest_Mission_13_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_13_Active
				clear_variable = KXN_Conquest_Mission_13_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_13_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_13
				activate_mission = KXN_Conquest_Mission_13
				remove_mission = KXN_Conquest_Mission_13
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_13"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_13 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_13_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_13 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_13_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_13_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_13 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_13_Active
				clear_variable = KXN_Conquest_Mission_13_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_13_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_13
				activate_mission = KXN_Conquest_Mission_13
				remove_mission = KXN_Conquest_Mission_13
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_13 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_13 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_13"
			clr_country_flag = KXN_Conquest_Mission_13_Active
			clear_variable = KXN_Conquest_Mission_13_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_13_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_13
		}
	}
	KXN_Conquest_Mission_14 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_14_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_14_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_14 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_14"
			custom_effect_tooltip = KXN_Conquest_Mission_14_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_14_Active
				clear_variable = KXN_Conquest_Mission_14_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_14_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_14
				activate_mission = KXN_Conquest_Mission_14
				remove_mission = KXN_Conquest_Mission_14
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_14"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_14 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_14_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_14 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_14_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_14_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_14 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_14_Active
				clear_variable = KXN_Conquest_Mission_14_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_14_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_14
				activate_mission = KXN_Conquest_Mission_14
				remove_mission = KXN_Conquest_Mission_14
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_14 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_14 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_14"
			clr_country_flag = KXN_Conquest_Mission_14_Active
			clear_variable = KXN_Conquest_Mission_14_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_14_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_14
		}
	}
	KXN_Conquest_Mission_15 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_15_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_15_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_15 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_15"
			custom_effect_tooltip = KXN_Conquest_Mission_15_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_15_Active
				clear_variable = KXN_Conquest_Mission_15_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_15_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_15
				activate_mission = KXN_Conquest_Mission_15
				remove_mission = KXN_Conquest_Mission_15
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_15"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_15 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_15_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_15 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_15_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_15_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_15 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_15_Active
				clear_variable = KXN_Conquest_Mission_15_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_15_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_15
				activate_mission = KXN_Conquest_Mission_15
				remove_mission = KXN_Conquest_Mission_15
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_15 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_15 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_15"
			clr_country_flag = KXN_Conquest_Mission_15_Active
			clear_variable = KXN_Conquest_Mission_15_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_15_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_15
		}
	}
	KXN_Conquest_Mission_16 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_16_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_16_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_16 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_16"
			custom_effect_tooltip = KXN_Conquest_Mission_16_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_16_Active
				clear_variable = KXN_Conquest_Mission_16_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_16_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_16
				activate_mission = KXN_Conquest_Mission_16
				remove_mission = KXN_Conquest_Mission_16
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_16"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_16 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_16_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_16 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_16_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_16_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_16 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_16_Active
				clear_variable = KXN_Conquest_Mission_16_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_16_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_16
				activate_mission = KXN_Conquest_Mission_16
				remove_mission = KXN_Conquest_Mission_16
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_16 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_16 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_16"
			clr_country_flag = KXN_Conquest_Mission_16_Active
			clear_variable = KXN_Conquest_Mission_16_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_16_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_16
		}
	}
	KXN_Conquest_Mission_17 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_17_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_17_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_17 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_17"
			custom_effect_tooltip = KXN_Conquest_Mission_17_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_17_Active
				clear_variable = KXN_Conquest_Mission_17_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_17_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_17
				activate_mission = KXN_Conquest_Mission_17
				remove_mission = KXN_Conquest_Mission_17
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_17"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_17 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_17_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_17 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_17_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_17_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_17 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_17_Active
				clear_variable = KXN_Conquest_Mission_17_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_17_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_17
				activate_mission = KXN_Conquest_Mission_17
				remove_mission = KXN_Conquest_Mission_17
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_17 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_17 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_17"
			clr_country_flag = KXN_Conquest_Mission_17_Active
			clear_variable = KXN_Conquest_Mission_17_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_17_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_17
		}
	}
	KXN_Conquest_Mission_18 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_18_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_18_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_18 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_18"
			custom_effect_tooltip = KXN_Conquest_Mission_18_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_18_Active
				clear_variable = KXN_Conquest_Mission_18_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_18_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_18
				activate_mission = KXN_Conquest_Mission_18
				remove_mission = KXN_Conquest_Mission_18
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_18"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_18 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_18_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_18 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_18_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_18_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_18 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_18_Active
				clear_variable = KXN_Conquest_Mission_18_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_18_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_18
				activate_mission = KXN_Conquest_Mission_18
				remove_mission = KXN_Conquest_Mission_18
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_18 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_18 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_18"
			clr_country_flag = KXN_Conquest_Mission_18_Active
			clear_variable = KXN_Conquest_Mission_18_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_18_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_18
		}
	}
	KXN_Conquest_Mission_19 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_19_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_19_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_19 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_19"
			custom_effect_tooltip = KXN_Conquest_Mission_19_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_19_Active
				clear_variable = KXN_Conquest_Mission_19_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_19_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_19
				activate_mission = KXN_Conquest_Mission_19
				remove_mission = KXN_Conquest_Mission_19
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_19"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_19 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_19_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_19 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_19_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_19_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_19 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_19_Active
				clear_variable = KXN_Conquest_Mission_19_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_19_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_19
				activate_mission = KXN_Conquest_Mission_19
				remove_mission = KXN_Conquest_Mission_19
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_19 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_19 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_19"
			clr_country_flag = KXN_Conquest_Mission_19_Active
			clear_variable = KXN_Conquest_Mission_19_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_19_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_19
		}
	}
	KXN_Conquest_Mission_20 = {
		icon = generic_ignite_civil_war
		allowed = { original_tag = KXN }
		activation = { always = no }
		ai_will_do = { factor = 450 }
		selectable_mission = yes
		custom_cost_trigger = { always = yes }
		custom_cost_text = KXN_Conquest_Mission_20_Cost_tt
		days_mission_timeout = KXN_Conquest_Mission_20_Days_Timeout
		
		available = {
			event_target:KXN_Conquest_Target_20 = {
				OR = {
					exists = no
					is_subject_of = ROOT
					has_capitulated = yes
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Conquest_Mission_20"
			custom_effect_tooltip = KXN_Conquest_Mission_20_Effect_tt
			hidden_effect = {
				if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.8 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_9 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.7 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_8 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.6 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_7}
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.5 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_6 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.4 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_5 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.3 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_4 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.2 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_3 }
				}
				else_if = {
					limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.1 } }
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_2 }
				}
				else = {
					add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_1 }
				}
				clr_country_flag = KXN_Conquest_Mission_20_Active
				clear_variable = KXN_Conquest_Mission_20_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_20_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_20
				activate_mission = KXN_Conquest_Mission_20
				remove_mission = KXN_Conquest_Mission_20
			}
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout KXN_Conquest_Mission_20"
			if = {
				limit = {
					event_target:KXN_Conquest_Target_20 = {
						OR = {
							exists = no
							is_subject_of = ROOT
							has_capitulated = yes
						}
					}
				}
				hidden_effect = {
					if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.8 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_9 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.7 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_8 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.6 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_7}
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.5 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_6 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.4 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_5 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.3 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_4 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.2 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_3 }
					}
					else_if = {
						limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.1 } }
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_2 }
					}
					else = {
						add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_1 }
					}
				}
			}
			else = {
				custom_effect_tooltip = KXN_Conquest_Mission_20_Malus_tt
				hidden_effect = {
					event_target:KXN_Conquest_Target_20 = {
						if = {
							limit = { is_major = yes }
							add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us }
						}
						else = { add_relation_modifier = { target = KXN modifier = KXN_resistance_against_us_minor } }
					}
				}
				if = {
					limit = { NOT = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.4 } } }
					custom_effect_tooltip = KIR_line_break
					custom_effect_tooltip = KXN_Conquest_Mission_20_Effect_tt
					hidden_effect = {
						if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.3 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_4 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.2 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_3 }
						}
						else_if = {
							limit = { check_variable = { KXN.KXN_Conquest_Mission_20_Enemy_Casualties > 0.1 } }
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_2 }
						}
						else = {
							add_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_enemy_defeated_1 }
						}
					}
				}
				KXN_INCREASE_UNREST = yes
				event_target:KXN_Conquest_Target_20 = {
					KXN_CALCULATE_OVEREXPANSION = yes
				}
				KXN_INCREASE_OVEREXPANSION = yes
			}
			hidden_effect = {
				clr_country_flag = KXN_Conquest_Mission_20_Active
				clear_variable = KXN_Conquest_Mission_20_Enemy_Manpower
				clear_variable = KXN_Conquest_Mission_20_Enemy_Casualties
				clear_global_event_target = KXN_Conquest_Target_20
				activate_mission = KXN_Conquest_Mission_20
				remove_mission = KXN_Conquest_Mission_20
				remove_relation_modifier = { target = event_target:KXN_Conquest_Target_20 modifier = KXN_Stage_5_Modifiers }
			}
		}

		cancel_trigger = {
			hidden_trigger = {
				event_target:KXN_Conquest_Target_20 = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT
					}
				}
			}
		}
		
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel KXN_Conquest_Mission_20"
			clr_country_flag = KXN_Conquest_Mission_20_Active
			clear_variable = KXN_Conquest_Mission_20_Enemy_Manpower
			clear_variable = KXN_Conquest_Mission_20_Enemy_Casualties
			clear_global_event_target = KXN_Conquest_Target_20
		}
	}
	KXN_Infiltrate_Golden_City = {
		icon = CES_construct_the_grand_lodge
		allowed = { tag = KXN }
		ai_will_do = { factor = 10 }
		
		visible = {
			has_country_flag = KXN_Infiltrate_Golden_City_Flag
			NOT = { has_global_flag = fall_of_golden_city }
		}
		
		available = {
			DEL = {
				exists = yes
				has_capitulated = no
				is_subject = no
				controls_state = 1139
			}
			has_war_with = DEL
			NOT = { has_full_control_of_state = 1139 }
			divisions_in_state = {
				size > 4
				state = 1139
			}
		}
		
		custom_cost_trigger = {
			ROOT = {
				check_variable = { var = command_power value = 15 compare = greater_than_or_equals }
				has_political_power > 14
			}
		}
		
		ai_hint_pp_cost = 15

		custom_cost_text = decision_cost_CP_15_pp_15

		days_remove = 30
		fire_only_once = yes

		modifier = {
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Infiltrate_Golden_City"
			hidden_effect = {
				add_command_power = -15
				add_political_power = -15
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Infiltrate_Golden_City"
			## Event
			save_current_manpower = yes
			1139 = {
				add_manpower = -150
				damage_building = { type = infrastructure damage = 1.5 }
			}
			restore_previous_manpower = yes
			custom_effect_tooltip = KXN_Infiltrate_Golden_City_tt
			set_global_flag = {
				flag = KXN_Has_Infiltrated_Golden_City
				days = 30
				value = 1
			}
		}
	}
}

KXN_Tributaries_Category = {
	Form_KXN_Vermilion = {
		icon = generic_form_nation
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		available = {
			has_full_control_of_state = 1059
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		highlight_states = {
			highlight_state_targets = {
				state = 1059
			}
		}
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Vermilion"
			hidden_effect = { add_manpower = -25000 add_political_power = -50 }
			if = {
				limit = {
					NOT = {
						has_global_flag = Form_KXN_Vermilion_Flag
					}
				}
				set_global_flag = Form_KXN_Vermilion_Flag
				custom_effect_tooltip = Form_KXN_Vermilion_tt
				hidden_effect = {
					every_state = {
						limit = {
							OR = {
								region = 316
								region = 283
								region = 82
								region = 79
								region = 31
								state = 1065
							}
						}
						add_to_array = { KXN.KXN_Vermilion_States_Array = THIS }
					}
					create_dynamic_country = {
						original_tag = KXN
						set_country_flag = KXN_Vermilion_Flag
						set_cosmetic_tag = KXN_Vermilion
						1059 = {
							controller = {
								if = {
									limit = {
										1059 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXV = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXV = { transfer_state = 1059 }
								}
							}
						}
						add_state_core = 1059
						set_capital = {
							state = 1059
						}
						set_party_name = {
							ideology = fascism
							long_name = KXN_Vermilion_party
							name = KXN_Vermilion_party
						}
						KXN_SETUP_PUPPET_EFFECT = yes
					}
				}
			}
		}
	}
	Give_State_KXN_Vermilion = {
		icon = transfer_state_g
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Vermilion_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_1_Decision_Flag
			KXV = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Vermilion_State_Limit_TT
				KXV = { check_variable = { KXV_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXV }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXV }
					is_one_state_island = yes
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Vermilion target: [From.GetName]"
			KXV = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXV_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Vermilion = {
		icon = transfer_state_r
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXV.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_1_Decision_Flag
			KXV = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXV
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Vermilion target: [From.GetName]"
			transfer_state = FROM
			KXV = {
				remove_state_core = FROM
				subtract_from_variable = { KXV_Num_States = 1 }
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
		
	Form_KXN_Fragrance = {
		icon = generic_form_nation
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		available = {
			has_full_control_of_state = 1071
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		highlight_states = {
			highlight_state_targets = {
				state = 1071
			}
		}
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Fragrance"
			hidden_effect = { add_manpower = -25000 add_political_power = -50 }
			if = {
				limit = {
					NOT = {
						has_global_flag = Form_KXN_Fragrance_Flag
					}
				}
				set_global_flag = Form_KXN_Fragrance_Flag
				custom_effect_tooltip = Form_KXN_Fragrance_tt
				hidden_effect = {
					every_state = {
						limit = {
							OR = {
								region = 283
								region = 145
							}
						}
						add_to_array = { KXN.KXN_Fragrance_States_Array = THIS }
					}
					create_dynamic_country = {
						original_tag = KXN
						set_country_flag = KXN_Fragrance_Flag
						set_cosmetic_tag = KXN_Fragrance
						1071 = {
							controller = {
								if = {
									limit = {
										1071 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXF = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXF = { transfer_state = 1071 }
								}
							}
						}
						add_state_core = 1071
						set_capital = {
							state = 1071
						}
						set_party_name = {
							ideology = fascism
							long_name = KXN_Fragrance_party
							name = KXN_Fragrance_party
						}
						KXN_SETUP_PUPPET_EFFECT = yes
					}
				}
			}
		}
	}
	Give_State_KXN_Fragrance = {
		icon = transfer_state_g
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Fragrance_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_2_Decision_Flag
			KXF = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Fragrance_State_Limit_TT
				KXF = { check_variable = { KXF_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXF }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXF }
					is_one_state_island = yes
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Fragrance target: [From.GetName]"
			KXF = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXF_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Fragrance = {
		icon = transfer_state_r
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXF.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_2_Decision_Flag
			KXF = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXF
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Fragrance target: [From.GetName]"
			transfer_state = FROM
			KXF = {
				remove_state_core = FROM
				subtract_from_variable = { KXF_Num_States = 1 }
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
		
	Form_KXN_Exarchate = {
		icon = generic_form_nation
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		available = {
			OR = {
				has_full_control_of_state = 1139
				has_full_control_of_state = 1158
			}
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Exarchate"
			hidden_effect = {
				add_manpower = -25000
				add_political_power = -50
				add_to_array = { KXN.Form_KXN_Exarchate_Choose_States_Array = 1139 }
				add_to_array = { KXN.Form_KXN_Exarchate_Choose_States_Array = 1158 }
			}
			if = {
				limit = {
					has_full_control_of_state = 1139
					has_full_control_of_state = 1158
				}
				custom_effect_tooltip = Form_KXN_Exarchate_tt1
				hidden_effect = {
					set_country_flag = Form_KXN_Exarchate_Choose_Flag
				}
			}
			else = {
				custom_effect_tooltip = Form_KXN_Exarchate_tt
				hidden_effect = {
					if = {
						limit = {
							has_full_control_of_state = 1139
							NOT = { has_full_control_of_state = 1158 }
						}
						KXN_FORM_EXARCHATE_EFFECT = yes
						1139 = {
							controller = {
								if = {
									limit = {
										1139 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXK = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXK = { transfer_state = 1139 }
								}
							}
						}
						KXK = {
							add_state_core = 1139
							set_capital = {
								state = 1139
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1158
							NOT = { has_full_control_of_state = 1139 }
						}
						KXN_FORM_EXARCHATE_EFFECT = yes
						1158 = {
							controller = {
								if = {
									limit = {
										1158 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXK = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXK = { transfer_state = 1158 }
								}
							}
						}
						KXK = {
							add_state_core = 1158
							set_capital = {
								state = 1158
							}
						}
					}
				}
			}
			KXK = {
				if = {
					limit = {
						controls_state = 1139
					}
					if = {
						limit = {
							NOT = { has_global_flag = thunder_tiger_nuked }
						}
						add_ideas = golden_city
					}
					else_if = {
						limit = {
							has_global_flag = thunder_tiger_nuked
						}
						add_ideas = golden_city_ruined
					}
				}
			}
		}
	}
	Form_KXN_Exarchate_Choose = {
		icon = SOV_place_hq
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.Form_KXN_Exarchate_Choose_States_Array
		on_map_mode = map_only
		
		fire_only_once = yes
		
		visible = {
			has_country_flag = Form_KXN_Exarchate_Choose_Flag
		}
		
		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = Form_KXN_Satellite_Not_Capital_tt
				FROM = { KXN_IS_SATELLITE_CAPITAL_TRIGGER = yes }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Exarchate_Choose target: [From.GetName]"
			custom_effect_tooltip = Form_KXN_Exarchate_Choose_tt
			hidden_effect = {
				clr_country_flag = Form_KXN_Exarchate_Choose_Flag
				KXN_FORM_EXARCHATE_EFFECT = yes
				FROM = {
					controller = {
						if = {
							limit = {
								FROM = { is_capital = yes }
								check_variable = { num_owned_controlled_states < 2 }
								is_subject_of = KXN
							}
							KXK = {
								annex_country = {
									target = PREV
									transfer_troops = yes
								}
							}
						}
						else = {
							KXK = { transfer_state = FROM }
						}
					}
				}
				KXK = {
					add_state_core = FROM
					set_capital = {
						state = FROM
					}
				}
			}
		}
	}
	
	Move_KXN_Exarchate_Capital = {
		icon = SOV_place_hq
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		target_array = KXN.Form_KXN_Exarchate_Choose_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_3_Decision_Flag
			KXK = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 10
		
		target_trigger = {
			FROM = {
				is_fully_controlled_by = KXK
				is_owned_and_controlled_by = KXK
				is_core_of = KXK
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Move_KXN_Exarchate_Capital target: [From.GetName]"
			KXK = {
				set_capital = {
					state = FROM
				}
				if = {
					limit = {
						FROM = { state = 1139 }
						NOT = {
							has_idea = golden_city
							has_idea = golden_city_ruined
						}
					}
					if = {
						limit = {
							NOT = { has_global_flag = thunder_tiger_nuked }
						}
						add_ideas = golden_city
					}
					else_if = {
						limit = {
							has_global_flag = thunder_tiger_nuked
						}
						add_ideas = golden_city_ruined
					}
				}
			}
		}
	}
	Give_State_KXN_Exarchate = {
		icon = transfer_state_g
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Exarchate_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_3_Decision_Flag
			KXK = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Exarchate_State_Limit_TT
				KXK = { check_variable = { KXK_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXK }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXK }
					is_one_state_island = yes
					state = 1139
					state = 1158
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Exarchate target: [From.GetName]"
			KXK = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXK_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Exarchate = {
		icon = transfer_state_r
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXK.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_3_Decision_Flag
			KXK = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXK
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Exarchate target: [From.GetName]"
			transfer_state = FROM
			KXK = {
				remove_state_core = FROM
				subtract_from_variable = { KXK_Num_States = 1 }
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
		
	Form_KXN_Eparchy = {
		icon = generic_form_nation
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		available = {
			OR = {
				has_full_control_of_state = 909
				has_full_control_of_state = 1132
				has_full_control_of_state = 1135
				has_full_control_of_state = 1137
			}
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Eparchy"
			hidden_effect = {
				add_manpower = -25000
				add_political_power = -50
				add_to_array = { KXN.Form_KXN_Eparchy_Choose_States_Array = 909 }
				add_to_array = { KXN.Form_KXN_Eparchy_Choose_States_Array = 1132 }
				add_to_array = { KXN.Form_KXN_Eparchy_Choose_States_Array = 1135 }
				add_to_array = { KXN.Form_KXN_Eparchy_Choose_States_Array = 1137 }
			}
			if = {
				limit = {
					count_triggers = {
						amount = 2
						has_full_control_of_state = 909
						has_full_control_of_state = 1132
						has_full_control_of_state = 1135
						has_full_control_of_state = 1137
					}
				}
				custom_effect_tooltip = Form_KXN_Eparchy_tt1
				hidden_effect = {
					set_country_flag = Form_KXN_Eparchy_Choose_Flag
				}
			}
			else = {
				custom_effect_tooltip = Form_KXN_Eparchy_tt
				hidden_effect = {
					if = {
						limit = {
							has_full_control_of_state = 1132
							NOT = { has_full_control_of_state = 909 }
							NOT = { has_full_control_of_state = 1135 }
							NOT = { has_full_control_of_state = 1137 }
						}
						KXN_FORM_EPARCHY_EFFECT = yes
						1132 = {
							controller = {
								if = {
									limit = {
										1132 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXZ = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXZ = { transfer_state = 1132 }
								}
							}
						}
						KXZ = {
							add_state_core = 1132
							set_capital = {
								state = 1132
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1135
							NOT = { has_full_control_of_state = 909 }
							NOT = { has_full_control_of_state = 1132 }
							NOT = { has_full_control_of_state = 1137 }
						}
						KXN_FORM_EPARCHY_EFFECT = yes
						1135 = {
							controller = {
								if = {
									limit = {
										1135 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXZ = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXZ = { transfer_state = 1135 }
								}
							}
						}
						KXZ = {
							add_state_core = 1135
							set_capital = {
								state = 1135
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1137
							NOT = { has_full_control_of_state = 909 }
							NOT = { has_full_control_of_state = 1132 }
							NOT = { has_full_control_of_state = 1135 }
						}
						KXN_FORM_EPARCHY_EFFECT = yes
						1137 = {
							controller = {
								if = {
									limit = {
										1137 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXZ = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXZ = { transfer_state = 1137 }
								}
							}
						}
						KXZ = {
							add_state_core = 1137
							set_capital = {
								state = 1137
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 909
							NOT = { has_full_control_of_state = 1132 }
							NOT = { has_full_control_of_state = 1135 }
							NOT = { has_full_control_of_state = 1137 }
						}
						KXN_FORM_EPARCHY_EFFECT = yes
						909 = {
							controller = {
								if = {
									limit = {
										909 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXZ = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXZ = { transfer_state = 909 }
								}
							}
						}
						KXZ = {
							add_state_core = 909
							set_capital = {
								state = 909
							}
						}
					}
				}
			}
		}
	}
	Form_KXN_Eparchy_Choose = {
		icon = SOV_place_hq
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.Form_KXN_Eparchy_Choose_States_Array
		on_map_mode = map_only
		
		fire_only_once = yes
		
		visible = {
			has_country_flag = Form_KXN_Eparchy_Choose_Flag
		}
		
		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = Form_KXN_Satellite_Not_Capital_tt
				FROM = { KXN_IS_SATELLITE_CAPITAL_TRIGGER = yes }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Eparchy_Choose target: [From.GetName]"
			custom_effect_tooltip = Form_KXN_Eparchy_Choose_tt
			hidden_effect = {
				clr_country_flag = Form_KXN_Eparchy_Choose_Flag
				KXN_FORM_EPARCHY_EFFECT = yes
				FROM = {
					controller = {
						if = {
							limit = {
								FROM = { is_capital = yes }
								check_variable = { num_owned_controlled_states < 2 }
								is_subject_of = KXN
							}
							KXZ = {
								annex_country = {
									target = PREV
									transfer_troops = yes
								}
							}
						}
						else = {
							KXZ = { transfer_state = FROM }
						}
					}
				}
				KXZ = {
					add_state_core = FROM
					set_capital = {
						state = FROM
					}
				}
			}
		}
	}
	Move_KXN_Eparchy_Capital = {
		icon = SOV_place_hq
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		target_array = KXN.Form_KXN_Eparchy_Choose_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_4_Decision_Flag
			KXZ = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 10
		
		target_trigger = {
			FROM = {
				is_fully_controlled_by = KXZ
				is_owned_and_controlled_by = KXZ
				is_core_of = KXZ
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Move_KXN_Eparchy_Capital target: [From.GetName]"
			KXZ = {
				set_capital = {
					state = FROM
				}
			}
		}
	}
	Give_State_KXN_Eparchy = {
		icon = transfer_state_g
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Eparchy_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_4_Decision_Flag
			KXZ = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Eparchy_State_Limit_TT
				KXZ = { check_variable = { KXZ_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXZ }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXZ }
					is_one_state_island = yes
					state = 1135
					state = 1137
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Eparchy target: [From.GetName]"
			KXZ = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXZ_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Eparchy = {
		icon = transfer_state_r
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXZ.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_4_Decision_Flag
			KXZ = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXZ
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Eparchy target: [From.GetName]"
			transfer_state = FROM
			KXZ = {
				remove_state_core = FROM
				subtract_from_variable = { KXZ_Num_States = 1 }
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
		
	Form_KXN_Marshalcy = {
		icon = generic_form_nation
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		available = {
			OR = {
				has_full_control_of_state = 1097
				has_full_control_of_state = 1163
				has_full_control_of_state = 1168
				has_full_control_of_state = 1171
				has_full_control_of_state = 1176
				has_full_control_of_state = 1188
			}
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Marshalcy"
			hidden_effect = { 
				add_manpower = -25000
				add_political_power = -50
				add_to_array = { KXN.Form_KXN_Marshalcy_Choose_States_Array = 1097 }
				add_to_array = { KXN.Form_KXN_Marshalcy_Choose_States_Array = 1163 }
				add_to_array = { KXN.Form_KXN_Marshalcy_Choose_States_Array = 1168 }
				add_to_array = { KXN.Form_KXN_Marshalcy_Choose_States_Array = 1171 }
				add_to_array = { KXN.Form_KXN_Marshalcy_Choose_States_Array = 1176 }
				add_to_array = { KXN.Form_KXN_Marshalcy_Choose_States_Array = 1188 }
			}
			if = {
				limit = {
					count_triggers = {
						amount = 2
						has_full_control_of_state = 1097
						has_full_control_of_state = 1163
						has_full_control_of_state = 1168
						has_full_control_of_state = 1171
						has_full_control_of_state = 1176
						has_full_control_of_state = 1188
					}
				}
				custom_effect_tooltip = Form_KXN_Marshalcy_tt1
				hidden_effect = {
					set_country_flag = Form_KXN_Marshalcy_Choose_Flag
				}
			}
			else = {
				custom_effect_tooltip = Form_KXN_Marshalcy_tt
				hidden_effect = {
					if = {
						limit = {
							has_full_control_of_state = 1097
							NOT = { has_full_control_of_state = 1163 }
							NOT = { has_full_control_of_state = 1168 }
							NOT = { has_full_control_of_state = 1171 }
							NOT = { has_full_control_of_state = 1176 }
							NOT = { has_full_control_of_state = 1188 }
						}
						KXN_FORM_MARSHALCY_EFFECT = yes
						1097 = {
							controller = {
								if = {
									limit = {
										1097 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXH = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXH = { transfer_state = 1097 }
								}
							}
						}
						KXH = {
							add_state_core = 1097
							set_capital = {
								state = 1097
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1163
							NOT = { has_full_control_of_state = 1097 }
							NOT = { has_full_control_of_state = 1168 }
							NOT = { has_full_control_of_state = 1171 }
							NOT = { has_full_control_of_state = 1176 }
							NOT = { has_full_control_of_state = 1188 }
						}
						KXN_FORM_MARSHALCY_EFFECT = yes
						1163 = {
							controller = {
								if = {
									limit = {
										1163 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXH = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXH = { transfer_state = 1163 }
								}
							}
						}
						KXH = {
							add_state_core = 1163
							set_capital = {
								state = 1163
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1168
							NOT = { has_full_control_of_state = 1097 }
							NOT = { has_full_control_of_state = 1163 }
							NOT = { has_full_control_of_state = 1171 }
							NOT = { has_full_control_of_state = 1176 }
							NOT = { has_full_control_of_state = 1188 }
						}
						KXN_FORM_MARSHALCY_EFFECT = yes
						1168 = {
							controller = {
								if = {
									limit = {
										1168 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXH = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXH = { transfer_state = 1168 }
								}
							}
						}
						KXH = {
							add_state_core = 1168
							set_capital = {
								state = 1168
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1171
							NOT = { has_full_control_of_state = 1097 }
							NOT = { has_full_control_of_state = 1163 }
							NOT = { has_full_control_of_state = 1168 }
							NOT = { has_full_control_of_state = 1176 }
							NOT = { has_full_control_of_state = 1188 }
						}
						KXN_FORM_MARSHALCY_EFFECT = yes
						1171 = {
							controller = {
								if = {
									limit = {
										1171 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXH = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXH = { transfer_state = 1171 }
								}
							}
						}
						KXH = {
							add_state_core = 1171
							set_capital = {
								state = 1171
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1176
							NOT = { has_full_control_of_state = 1097 }
							NOT = { has_full_control_of_state = 1163 }
							NOT = { has_full_control_of_state = 1168 }
							NOT = { has_full_control_of_state = 1171 }
							NOT = { has_full_control_of_state = 1188 }
						}
						KXN_FORM_MARSHALCY_EFFECT = yes
						1176 = {
							controller = {
								if = {
									limit = {
										1176 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXH = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXH = { transfer_state = 1176 }
								}
							}
						}
						KXH = {
							add_state_core = 1176
							set_capital = {
								state = 1176
							}
						}
					}
					else_if = {
						limit = {
							has_full_control_of_state = 1188
							NOT = { has_full_control_of_state = 1097 }
							NOT = { has_full_control_of_state = 1163 }
							NOT = { has_full_control_of_state = 1168 }
							NOT = { has_full_control_of_state = 1171 }
							NOT = { has_full_control_of_state = 1176 }
						}
						KXN_FORM_MARSHALCY_EFFECT = yes
						1188 = {
							controller = {
								if = {
									limit = {
										1188 = { is_capital = yes }
										check_variable = { num_owned_controlled_states < 2 }
										is_subject_of = KXN
									}
									KXH = {
										annex_country = {
											target = PREV
											transfer_troops = yes
										}
									}
								}
								else = {
									KXH = { transfer_state = 1188 }
								}
							}
						}
						KXH = {
							add_state_core = 1188
							set_capital = {
								state = 1188
							}
						}
					}
				}
			}
		}
	}
	Form_KXN_Marshalcy_Choose = {
		icon = SOV_place_hq
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.Form_KXN_Marshalcy_Choose_States_Array
		on_map_mode = map_only
		
		fire_only_once = yes
		
		visible = {
			has_country_flag = Form_KXN_Marshalcy_Choose_Flag
		}
		
		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = Form_KXN_Satellite_Not_Capital_tt
				FROM = { KXN_IS_SATELLITE_CAPITAL_TRIGGER = yes }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Marshalcy_Choose target: [From.GetName]"
			custom_effect_tooltip = Form_KXN_Marshalcy_Choose_tt
			hidden_effect = {
				clr_country_flag = Form_KXN_Marshalcy_Choose_Flag
				KXN_FORM_MARSHALCY_EFFECT = yes
				FROM = {
					controller = {
						if = {
							limit = {
								FROM = { is_capital = yes }
								check_variable = { num_owned_controlled_states < 2 }
								is_subject_of = KXN
							}
							KXH = {
								annex_country = {
									target = PREV
									transfer_troops = yes
								}
							}
						}
						else = {
							KXH = { transfer_state = FROM }
						}
					}
				}
				KXH = {
					add_state_core = FROM
					set_capital = {
						state = FROM
					}
				}
			}
		}
	}
	Move_KXN_Marshalcy_Capital = {
		icon = SOV_place_hq
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		target_array = KXN.Form_KXN_Marshalcy_Choose_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_5_Decision_Flag
			KXH = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 10
		
		target_trigger = {
			FROM = {
				is_fully_controlled_by = KXH
				is_owned_and_controlled_by = KXH
				is_core_of = KXH
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Move_KXN_Marshalcy_Capital target: [From.GetName]"
			KXH = {
				set_capital = {
					state = FROM
				}
			}
		}
	}
	Give_State_KXN_Marshalcy = {
		icon = transfer_state_g
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Marshalcy_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_5_Decision_Flag
			KXH = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Marshalcy_State_Limit_TT
				KXH = { check_variable = { KXH_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXH }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXH }
					is_one_state_island = yes
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Marshalcy target: [From.GetName]"
			KXH = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXH_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Marshalcy = {
		icon = transfer_state_r
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXH.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_5_Decision_Flag
			KXH = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXH
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Marshalcy target: [From.GetName]"
			transfer_state = FROM
			KXH = {
				remove_state_core = FROM
				subtract_from_variable = { KXH_Num_States = 1 }
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
	Form_KXN_Equatorarchy = {
		icon = generic_form_nation
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		available = {
			OR = {
				has_full_control_of_state = 685
				has_full_control_of_state = 697
				has_full_control_of_state = 712
				has_full_control_of_state = 715
				has_full_control_of_state = 721
				has_full_control_of_state = 725
				has_full_control_of_state = 728
				has_full_control_of_state = 743
				has_full_control_of_state = 875
				has_full_control_of_state = 883
				has_full_control_of_state = 1093
				has_full_control_of_state = 1099
				has_full_control_of_state = 1165
				has_full_control_of_state = 1168
				has_full_control_of_state = 1202
				has_full_control_of_state = 1204
			}
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Equatorarchy"
			hidden_effect = { add_manpower = -25000 add_political_power = -50 }
			custom_effect_tooltip = Form_KXN_Equatorarchy_tt1
			hidden_effect = {
				set_country_flag = Form_KXN_Equatorarchy_Choose_Flag
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 685 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 697 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 712 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 715 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 721 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 725 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 728 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 743 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 875 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 883 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 1093 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 1099 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 1165 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 1168 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 1202 }
				add_to_array = { KXN.Form_KXN_Equatorarchy_Choose_States_Array = 1204 }
			}
		}
	}
	Form_KXN_Equatorarchy_Choose = {
		icon = SOV_place_hq
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.Form_KXN_Equatorarchy_Choose_States_Array
		on_map_mode = map_only
		
		fire_only_once = yes
		
		visible = {
			has_country_flag = Form_KXN_Equatorarchy_Choose_Flag
		}
		
		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = Form_KXN_Satellite_Not_Capital_tt
				FROM = { KXN_IS_SATELLITE_CAPITAL_TRIGGER = yes }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Equatorarchy_Choose target: [From.GetName]"
			custom_effect_tooltip = Form_KXN_Equatorarchy_Choose_tt
			hidden_effect = {
				clr_country_flag = Form_KXN_Equatorarchy_Choose_Flag
				KXN_FORM_EQUATORARCHY_EFFECT = yes
				FROM = {
					controller = {
						if = {
							limit = {
								FROM = { is_capital = yes }
								check_variable = { num_owned_controlled_states < 2 }
								is_subject_of = KXN
							}
							KXE = {
								annex_country = {
									target = PREV
									transfer_troops = yes
								}
							}
						}
						else = {
							KXE = { transfer_state = FROM }
						}
					}
				}
				KXE = {
					add_state_core = FROM
					set_capital = {
						state = FROM
					}
				}
			}
		}
	}
	Move_KXN_Equatorarchy_Capital = {
		icon = SOV_place_hq
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		target_array = KXN.Form_KXN_Equatorarchy_Choose_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_6_Decision_Flag
			KXE = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 10
		
		target_trigger = {
			FROM = {
				is_fully_controlled_by = KXE
				is_owned_and_controlled_by = KXE
				is_core_of = KXE
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Move_KXN_Equatorarchy_Capital target: [From.GetName]"
			KXE = {
				set_capital = {
					state = FROM
				}
			}
		}
	}
	Give_State_KXN_Equatorarchy = {
		icon = transfer_state_g
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Equatorarchy_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_6_Decision_Flag
			KXE = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Equatorarchy_State_Limit_TT
				KXE = { check_variable = { KXE_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXE }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXE }
					is_one_state_island = yes
					region = 246
					region = 245
					region = 234
					region = 1
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Equatorarchy target: [From.GetName]"
			KXE = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXE_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Equatorarchy = {
		icon = transfer_state_r
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXE.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_6_Decision_Flag
			KXE = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXE
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Equatorarchy target: [From.GetName]"
			transfer_state = FROM
			KXE = {
				remove_state_core = FROM
				subtract_from_variable = { KXE_Num_States = 1 }
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
	Form_KXN_Occident = {
		icon = generic_form_nation
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		available = {
			OR = {
				has_full_control_of_state = 883
				has_full_control_of_state = 885
				has_full_control_of_state = 909
				has_full_control_of_state = 911
				has_full_control_of_state = 912
				has_full_control_of_state = 971
				has_full_control_of_state = 974
				has_full_control_of_state = 1106
				has_full_control_of_state = 1036
				has_full_control_of_state = 1040
				has_full_control_of_state = 1051
			}
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Occident"
			hidden_effect = { add_manpower = -25000 add_political_power = -50 }
			custom_effect_tooltip = Form_KXN_Occident_tt1
			hidden_effect = {
				set_country_flag = Form_KXN_Occident_Choose_Flag
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 883 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 885 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 909 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 911 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 912 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 971 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 974 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 1106 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 1036 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 1040 }
				add_to_array = { KXN.Form_KXN_Occident_Choose_States_Array = 1051 }
			}
		}
	}
	Form_KXN_Occident_Choose = {
		icon = SOV_place_hq
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.Form_KXN_Occident_Choose_States_Array
		on_map_mode = map_only
		
		fire_only_once = yes
		
		visible = {
			has_country_flag = Form_KXN_Occident_Choose_Flag
		}
		
		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = Form_KXN_Satellite_Not_Capital_tt
				FROM = { KXN_IS_SATELLITE_CAPITAL_TRIGGER = yes }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Occident_Choose target: [From.GetName]"
			custom_effect_tooltip = Form_KXN_Occident_Choose_tt
			hidden_effect = {
				clr_country_flag = Form_KXN_Occident_Choose_Flag
				KXN_FORM_OCCIDENT_EFFECT = yes
				FROM = {
					controller = {
						if = {
							limit = {
								FROM = { is_capital = yes }
								check_variable = { num_owned_controlled_states < 2 }
								is_subject_of = KXN
							}
							KXO = {
								annex_country = {
									target = PREV
									transfer_troops = yes
								}
							}
						}
						else = {
							KXO = { transfer_state = FROM }
						}
					}
				}
				KXO = {
					add_state_core = FROM
					set_capital = {
						state = FROM
					}
				}
			}
		}
	}
	Move_KXN_Occident_Capital = {
		icon = SOV_place_hq
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		target_array = KXN.Form_KXN_Occident_Choose_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_7_Decision_Flag
			KXO = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 10
		
		target_trigger = {
			FROM = {
				is_fully_controlled_by = KXO
				is_owned_and_controlled_by = KXO
				is_core_of = KXO
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Move_KXN_Occident_Capital target: [From.GetName]"
			KXO = {
				set_capital = {
					state = FROM
				}
			}
		}
	}
	Give_State_KXN_Occident = {
		icon = transfer_state_g
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Occident_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_7_Decision_Flag
			KXO = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Occident_State_Limit_TT
				KXO = { check_variable = { KXO_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXO }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXO }
					is_one_state_island = yes
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Occident target: [From.GetName]"
			KXO = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXO_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Occident = {
		icon = transfer_state_r
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXO.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_7_Decision_Flag
			KXO = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXO
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Occident target: [From.GetName]"
			transfer_state = FROM
			KXO = {
				remove_state_core = FROM
				subtract_from_variable = { KXO_Num_States = 1 }
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
		
	Form_KXN_Satellite = {
		icon = generic_form_nation
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		available = {
			OR = {
				has_full_control_of_state = 790
				has_full_control_of_state = 810
				has_full_control_of_state = 811
				has_full_control_of_state = 834
				has_full_control_of_state = 843
				has_full_control_of_state = 854
				has_full_control_of_state = 858
				has_full_control_of_state = 866
				has_full_control_of_state = 868
				has_full_control_of_state = 956
				has_full_control_of_state = 986
				has_full_control_of_state = 990
				has_full_control_of_state = 995
				has_full_control_of_state = 999
				has_full_control_of_state = 1002
				has_full_control_of_state = 1009
				has_full_control_of_state = 1014
				has_full_control_of_state = 1017
			}
		}

		custom_cost_trigger = {
			has_manpower > 24999
			has_political_power > 49
		}

		custom_cost_text = decision_cost_50_pp_manpower_25000
		
		
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Satellite"
			hidden_effect = { add_manpower = -25000 add_political_power = -50 }
			custom_effect_tooltip = Form_KXN_Satellite_tt1
			hidden_effect = {
				set_country_flag = Form_KXN_Satellite_Choose_Flag
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 790 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 810 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 811 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 834 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 843 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 854 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 858 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 866 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 868 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 956 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 986 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 990 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 995 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 999 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 1002 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 1009 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 1014 }
				add_to_array = { KXN.Form_KXN_Satellite_Choose_States_Array = 1017 }
			}
		}
	}
	Form_KXN_Satellite_Choose = {
		icon = SOV_place_hq
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.Form_KXN_Satellite_Choose_States_Array
		on_map_mode = map_only
		
		fire_only_once = yes
		
		visible = {
			has_country_flag = Form_KXN_Satellite_Choose_Flag
		}
		
		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = Form_KXN_Satellite_Not_Capital_tt
				FROM = { KXN_IS_SATELLITE_CAPITAL_TRIGGER = yes }
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Form_KXN_Satellite_Choose target: [From.GetName]"
			custom_effect_tooltip = Form_KXN_Satellite_Choose_tt
			hidden_effect = {
				clr_country_flag = Form_KXN_Satellite_Choose_Flag
				KXN_FORM_SATELLITE_EFFECT = yes
				FROM = {
					controller = {
						if = {
							limit = {
								FROM = { is_capital = yes }
								check_variable = { num_owned_controlled_states < 2 }
								is_subject_of = KXN
							}
							KXM = {
								annex_country = {
									target = PREV
									transfer_troops = yes
								}
							}
						}
						else = {
							KXM = { transfer_state = FROM }
						}
					}
				}
				KXM = {
					add_state_core = FROM
					set_capital = {
						state = FROM
					}
				}
			}
		}
	}
	Move_KXN_Satellite_Capital = {
		icon = SOV_place_hq
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = africa
		target_array = KXN.Form_KXN_Satellite_Choose_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_8_Decision_Flag
			KXM = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 10
		
		target_trigger = {
			FROM = {
				is_fully_controlled_by = KXM
				is_owned_and_controlled_by = KXM
				is_core_of = KXM
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Move_KXN_Satellite_Capital target: [From.GetName]"
			KXM = {
				set_capital = {
					state = FROM
				}
			}
		}
	}
	Give_State_KXN_Satellite = {
		icon = transfer_state_g
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXN.KXN_Satellite_States_Array
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_8_Decision_Flag
			KXM = {
				exists = yes
				is_subject_of = KXN
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Satellite_State_Limit_TT
				KXM = { check_variable = { KXM_Num_States < KXN_Tributary_State_Cap } }
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = KXM }
				is_capital = no
				OR = {
					any_neighbor_state = { is_owned_and_controlled_by = KXM }
					is_one_state_island = yes
				}
				OWNER = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
					PREV = { is_fully_controlled_by = PREV }
				}
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Give_State_KXN_Satellite target: [From.GetName]"
			KXM = {
				transfer_state = FROM
				add_state_core = FROM
				add_to_variable = { KXM_Num_States = 1 }
			}
			KXN_Reduce_Overexpansion_TT = yes
		}
	}
	Take_State_KXN_Satellite = {
		icon = transfer_state_r
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 0 }
		
		state_target = yes
		target_array = KXM.owned_controlled_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_8_Decision_Flag
			KXM = {
				exists = yes
				is_subject_of = KXN
			}
		}
		
		cost = 5
		
		target_trigger = {
			FROM = {
				is_owned_and_controlled_by = KXM
				is_capital = no
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision Take_State_KXN_Satellite target: [From.GetName]"
			transfer_state = FROM
			KXM = {
				remove_state_core = FROM
				subtract_from_variable = { KXM_Num_States = 1 }
			}
			KXN_Increase_Overexpansion_TT = yes
		}
	}
	########### Satellite State Upgrade Decision ###########
	KXN_Upgrade_Military_1 = {
		icon = generic_protection
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Upgrade_Military_1_tt
				check_variable = { FROM.num_battalions > 25 }
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Upgrade_Military_1"
			effect_tooltip = {
				swap_ideas = {
					remove_idea = KXN_Tributary_Buff_DUMMY
					add_idea = KXN_Tributary_Buff_DUMMY_1
				}
			}
			add_to_variable = { KXN_Tributary_Buff_V1 = 0.01 }
			add_to_variable = { KXN_Tributary_Buff_V1A = 5 }
		}
	}
	KXN_Upgrade_Military_2 = {
		icon = generic_protection
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Upgrade_Military_2_tt
				check_variable = { FROM.num_battalions > 50 }
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Upgrade_Military_2"
			effect_tooltip = {
				swap_ideas = {
					remove_idea = KXN_Tributary_Buff_DUMMY
					add_idea = KXN_Tributary_Buff_DUMMY_2
				}
			}
			add_to_variable = { KXN_Tributary_Buff_V1 = 0.02 }
			add_to_variable = { KXN_Tributary_Buff_V1A = 5 }
		}
	}
	KXN_Upgrade_Military_3 = {
		icon = generic_protection
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Upgrade_Military_3_tt
				check_variable = { FROM.num_battalions > 75 }
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Upgrade_Military_3"
			effect_tooltip = {
				swap_ideas = {
					remove_idea = KXN_Tributary_Buff_DUMMY
					add_idea = KXN_Tributary_Buff_DUMMY_2
				}
			}
			add_to_variable = { KXN_Tributary_Buff_V1 = 0.02 }
			add_to_variable = { KXN_Tributary_Buff_V1A = 5 }
		}
	}
	KXN_Upgrade_Industry_1 = {
		icon = generic_factory
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Upgrade_Industry_1_tt
				check_variable = { FROM.num_of_factories > 15 }
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Upgrade_Industry_1"
			effect_tooltip = {
				swap_ideas = {
					remove_idea = KXN_Tributary_Buff_DUMMY
					add_idea = KXN_Tributary_Buff_DUMMY_3
				}
			}
			add_to_variable = { KXN_Tributary_Buff_V2 = 0.01 }
		}
	}
	KXN_Upgrade_Industry_2 = {
		icon = generic_factory
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Upgrade_Industry_2_tt
				check_variable = { FROM.num_of_factories > 30 }
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Upgrade_Industry_2"
			effect_tooltip = {
				swap_ideas = {
					remove_idea = KXN_Tributary_Buff_DUMMY
					add_idea = KXN_Tributary_Buff_DUMMY_4
				}
			}
			add_to_variable = { KXN_Tributary_Buff_V2 = 0.02 }
		}
	}
	KXN_Upgrade_Industry_3 = {
		icon = generic_factory
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Upgrade_Industry_3_tt
				check_variable = { FROM.num_of_factories > 45 }
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Upgrade_Industry_3"
			effect_tooltip = {
				swap_ideas = {
					remove_idea = KXN_Tributary_Buff_DUMMY
					add_idea = KXN_Tributary_Buff_DUMMY_4
				}
			}
			add_to_variable = { KXN_Tributary_Buff_V2 = 0.02 }
		}
	}
	KXN_Divide_Rule_1 = {
		icon = generic_monarchy
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
				NOT = {
					has_country_flag = KXN_Vermilion_Flag
					has_country_flag = KXN_Fragrance_Flag
				}
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Divide_Rule_1_tt
				FROM = {
					any_core_state = {
						is_owned_and_controlled_by = FROM
						any_country_with_core = {
							NOT = { tag = FROM }
							FROM = {
								any_core_state = {
									is_owned_and_controlled_by = FROM
									any_country_with_core = {
										NOT = { 
											tag = FROM
											tag = PREV.PREV.PREV
										}
										FROM = {
											any_core_state = {
												is_owned_and_controlled_by = FROM
												any_country_with_core = {
													NOT = { 
														tag = FROM
														tag = PREV.PREV.PREV
														tag = PREV.PREV.PREV.PREV.PREV.PREV
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Divide_Rule_1"
			FROM = {
				custom_effect_tooltip = KXN_Divide_Rule_1_effect_tt
				add_to_variable = { KXN_Tributary_State_Cap = 2 }
			}
		}
	}
	KXN_Divide_Rule_2 = {
		icon = generic_monarchy
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
				NOT = {
					has_country_flag = KXN_Vermilion_Flag
					has_country_flag = KXN_Fragrance_Flag
				}
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Divide_Rule_2_tt
				FROM = {
					any_core_state = {
						is_owned_and_controlled_by = FROM
						any_country_with_core = {
							NOT = { tag = FROM }
							FROM = {
								any_core_state = {
									is_owned_and_controlled_by = FROM
									any_country_with_core = {
										NOT = { 
											tag = FROM
											tag = PREV.PREV.PREV
										}
										FROM = {
											any_core_state = {
												is_owned_and_controlled_by = FROM
												any_country_with_core = {
													NOT = { 
														tag = FROM
														tag = PREV.PREV.PREV
														tag = PREV.PREV.PREV.PREV.PREV.PREV
													}
													FROM = {
														any_core_state = {
															is_owned_and_controlled_by = FROM
															any_country_with_core = {
																NOT = { 
																	tag = FROM
																	tag = PREV.PREV.PREV
																	tag = PREV.PREV.PREV.PREV.PREV.PREV
																	tag = PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV
																}
																FROM = {
																	any_core_state = {
																		is_owned_and_controlled_by = FROM
																		any_country_with_core = {
																			NOT = { 
																				tag = FROM
																				tag = PREV.PREV.PREV
																				tag = PREV.PREV.PREV.PREV.PREV.PREV
																				tag = PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV
																				tag = PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV.PREV
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		
		target_array = KXN.subjects

		cost = 15
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Divide_Rule_2"
			FROM = {
				custom_effect_tooltip = KXN_Divide_Rule_2_effect_tt
				add_to_variable = { KXN_Tributary_State_Cap = 3 }
			}
		}
	}
	KXN_Resource_Hub_Steel = {
		icon = steel
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { steel > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Resource_Hub_Steel"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Steel_tt
				set_variable = { KXN_Tributary_Buff_Steel = FROM.resource_produced@steel }
				multiply_variable = { KXN_Tributary_Buff_Steel = 0.25 }
				set_country_flag = KXN_Resource_Hub_Steel_Flag
			}
		}
	}
	KXN_Resource_Hub_Tungsten = {
		icon = tungsten
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { tungsten > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Resource_Hub_Tungsten"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Tungsten_tt
				set_variable = { KXN_Tributary_Buff_Tungsten = FROM.resource_produced@tungsten }
				multiply_variable = { KXN_Tributary_Buff_Tungsten = 0.25 }
				set_country_flag = KXN_Resource_Hub_Tungsten_Flag
			}
		}
	}
	KXN_Resource_Hub_Aluminium = {
		icon = aluminium
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { aluminium > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Resource_Hub_Aluminium"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Aluminium_tt
				set_variable = { KXN_Tributary_Buff_Aluminium = FROM.resource_produced@aluminium }
				multiply_variable = { KXN_Tributary_Buff_Aluminium = 0.25 }
				set_country_flag = KXN_Resource_Hub_Aluminium_Flag
			}
		}
	}
	KXN_Resource_Hub_Chromium = {
		icon = chromium
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { chromium > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Resource_Hub_Chromium"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Chromium_tt
				set_variable = { KXN_Tributary_Buff_Chromium = FROM.resource_produced@chromium }
				multiply_variable = { KXN_Tributary_Buff_Chromium = 0.25 }
				set_country_flag = KXN_Resource_Hub_Chromium_Flag
			}
		}
	}
	KXN_Resource_Hub_Crystals = {
		icon = crystals
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { crystals > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Resource_Hub_Crystals"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Crystals_tt
				set_variable = { KXN_Tributary_Buff_Crystals = FROM.resource_produced@crystals }
				multiply_variable = { KXN_Tributary_Buff_Crystals = 0.25 }
				set_country_flag = KXN_Resource_Hub_Crystals_Flag
			}
		}
	}
	KXN_Resource_Hub_Rubber = {
		icon = rubber
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { rubber > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Resource_Hub_Rubber"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Rubber_tt
				set_variable = { KXN_Tributary_Buff_Rubber = FROM.resource_produced@rubber }
				multiply_variable = { KXN_Tributary_Buff_Rubber = 0.25 }
				set_country_flag = KXN_Resource_Hub_Rubber_Flag
			}
		}
	}
	KXN_Resource_Hub_Oil = {
		icon = oil
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		target_trigger = {
			FROM = {
				original_tag = KXN
				KXN_IS_SATELLITE_TRIGGER = yes
			}
		}
		
		visible = {
			FROM = {
				has_country_flag = KXN_Satellite_Decision_Flag
			}
		}
		
		available = {
			FROM = { oil > 49 }
		}
		
		target_array = KXN.subjects

		cost = 25
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Resource_Hub_Oil"
			FROM = {
				custom_effect_tooltip = KXN_Resource_Hub_Oil_tt
				set_variable = { KXN_Tributary_Buff_Oil = FROM.resource_produced@oil }
				multiply_variable = { KXN_Tributary_Buff_Oil = 0.25 }
				set_country_flag = KXN_Resource_Hub_Oil_Flag
			}
		}
	}

	########### Generic Form Tributary Decision ###########
	KXN_Form_Tributary = {
		icon = generic_colonial_administration
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		visible = { has_country_flag = KXN_Form_Tributary_Flag }

		target_trigger = {
			FROM = {
				exists = no
				NOT = {
					is_subject_of = KXN
					original_tag = KXN
					original_tag = KIR
					original_tag = KIC
					original_tag = KIS
					original_tag = KHM
					original_tag = NVA
				}
			}
		}
		
		target_array = KXN.occupied_countries
		target_non_existing = yes
		
		available = {
			custom_trigger_tooltip = {
				tooltip = KXN_Form_Tributary_Req_tt
				all_of_scopes = {
					array = FROM.core_states
					OWNER = {
						OR = {
							tag = ROOT
							is_subject_of = ROOT
						}
						PREV = { is_fully_controlled_by = PREV }
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = KXN_Form_Tributary_Req_tt1
				any_of_scopes = {
					array = FROM.core_states
					OWNER = {
						tag = ROOT
						PREV = { is_fully_controlled_by = PREV }
					}
				}
			}
		}

		cost = 75
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Form_Tributary"
			release_puppet = FROM
			FROM = {
				hidden_effect = {
					drop_cosmetic_tag = yes
					set_cosmetic_tag = KXN_Tributary
					add_ideas = KXN_Tributary_State
				}
				custom_effect_tooltip = KXN_Tributary_State_tt
			}
		}
	}
	KXN_Create_Tributary = {
		icon = pawn
		allowed = { original_tag = KXN }
		ai_will_do = { factor = 25 }

		visible = { has_country_flag = KXN_Form_Tributary_Flag }

		target_trigger = {
			FROM = {
				NOT = {
					has_idea = KXN_Tributary_State
					has_cosmetic_tag = KXN_Tributary
					original_tag = KXN
				}
			}
		}
		
		target_array = KXN.subjects

		cost = 50
		fire_only_once = yes

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove KXN_Create_Tributary"
			FROM = {
				hidden_effect = {
					drop_cosmetic_tag = yes
					set_cosmetic_tag = KXN_Tributary
					add_ideas = KXN_Tributary_State
				}
				custom_effect_tooltip = KXN_Tributary_State_tt
			}
		}
	}
	
	########### Bannerkir Levy ###########
	KXN_Bannerkir_Levy = {
		icon = generic_nationalism
		allowed = { tag = KXN }
		ai_will_do = { factor = 20 }
		
		state_target = any_controlled_state
		target_array = KXN.core_states
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_Bannerkir_Levy_Show_Flag
		}
		
		target_trigger = {
			FROM = { state_population_k > 250 }
		}
		
		cost = KXN_Bannerkir_Levy_Cost
		days_re_enable = 180
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Bannerkir_Levy target: [From.GetName]"
			custom_effect_tooltip = KXN_Bannerkir_Levy_tt
			hidden_effect = {
				add_to_variable = { KXN_Bannerkir_Levy_Cost = 15 }
				clamp_variable = { var = KXN_Bannerkir_Levy_Cost min = 0 max = 150 }
				FROM = { add_manpower = -25000 }
				add_manpower = 25000
			}
		}
	}
}

KXN_Aerostat_Category = {
	KXN_Aerostat_CAS_Decision = {
		icon = airship_defence
		allowed = { tag = KXN }
		ai_will_do = { factor = 20 }
		
		state_target = africa
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_Aerostat_CAS_Decision_Show_Flag
		}
		
		target_trigger = {
			FROM = {
				OR = {
					AND = {
						controller = {
							has_war_with = KXN
						}
						any_neighbor_state = {
							is_controlled_by = KXN
						}
					}
					AND = {
						is_controlled_by = KXN
						any_neighbor_state = {
							controller = {
								has_war_with = KXN
							}
						}
					}
				}
			}
		}
		
		custom_cost_text = decision_cost_10_cp_airship_25
		custom_cost_trigger = {
			command_power > 9
			has_equipment = { medium_airship_equipment_0 > 24 }
		}
		
		days_re_enable = 70
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Aerostat_CAS_Decision target: [From.GetName]"
			FROM = {
				add_dynamic_modifier = { modifier = KXN_Aerostat_CAS_Modifier scope = KXN days = 70 }
			}
			hidden_effect = {
				country_event = { id = lan_kir_utility.2 days = 70 }
				add_command_power = -10
				add_equipment_to_stockpile = {
					type = medium_airship_equipment_0
					amount = -25
				}
			}
			custom_effect_tooltip = decision_cost_airship_25_return_tt
		}
	}
	KXN_Aerostat_Bomb_Decision = {
		icon = airship_bomb
		allowed = { tag = KXN }
		ai_will_do = { factor = 20 }
		
		state_target = africa
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_Aerostat_Bomb_Decision_Show_Flag
		}
		
		target_trigger = {
			FROM = {
				OR = {
					AND = {
						controller = {
							has_war_with = KXN
							PREV = {
								NOT = {
									is_fully_controlled_by = PREV
								}
							}
						}
						any_neighbor_state = {
							is_controlled_by = KXN
						}
					}
					AND = {
						is_controlled_by = KXN
						NOT = { is_fully_controlled_by = KXN }
						any_neighbor_state = {
							controller = {
								has_war_with = KXN
							}
						}
					}
				}
			}
		}
		
		custom_cost_text = decision_cost_25_cp_airship_30
		custom_cost_trigger = {
			command_power > 24
			has_equipment = { medium_airship_equipment_0 > 29 }
		}
		
		days_re_enable = 30
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Aerostat_Bomb_Decision target: [From.GetName]"
			hidden_effect = {
				scoped_sound_effect = "ui_scorched_earth"
				set_variable = { var = FROM.Aerostat_Bomb_Damage_Var value = 1 }
				clear_variable = FROM.Aerostat_Bomb_Damage_Ratio
				for_each_scope_loop = {
					array = KXN.enemies
					if = {
						limit = {
							divisions_in_state = {
								size > 0
								state = FROM
							}
						}
						add_to_variable = { FROM.Aerostat_Bomb_Damage_Ratio = num_armies_in_state@FROM }
					}
				}
				divide_variable = { var = FROM.Aerostat_Bomb_Damage_Var value = FROM.Aerostat_Bomb_Damage_Ratio }
				clamp_variable = {
					var = FROM.Aerostat_Bomb_Damage_Var
					max = 0.4
				}
				meta_effect = {
					text = {
						damage_units = {
							state = FROM
							limit = { has_war_with = ROOT }
							damage = [Aerostat_Bomb_Damage]
							ratio = yes
							army = yes
							navy = no
						}
					}
					Aerostat_Bomb_Damage = "[?FROM.Aerostat_Bomb_Damage_Var]"
				}
				country_event = { id = lan_kir_utility.3 days = 30 }
				add_command_power = -25
				add_equipment_to_stockpile = {
					type = medium_airship_equipment_0
					amount = -30
				}
			}
			custom_effect_tooltip = KXN_Aerostat_Bomb_Decision_tt
			custom_effect_tooltip = decision_cost_airship_30_return_tt
		}
	}
	KXN_Aerostat_Supply_Decision = {
		icon = airship_supply
		allowed = { tag = KXN }
		ai_will_do = { factor = 20 }
		
		state_target = africa
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_Aerostat_Supply_Decision_Show_Flag
		}
		
		target_array = KXN.controlled_states
		
		custom_cost_text = decision_cost_10_cp_airship_25
		custom_cost_trigger = {
			command_power > 9
			has_equipment = { medium_airship_equipment_0 > 24 }
		}
		
		days_re_enable = 70
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Aerostat_Supply_Decision target: [From.GetName]"
			FROM = {
				add_dynamic_modifier = { modifier = KXN_Aerostat_Supply_Modifier scope = KXN days = 70 }
			}
			hidden_effect = {
				country_event = { id = lan_kir_utility.2 days = 70 }
				add_command_power = -10
				add_equipment_to_stockpile = {
					type = medium_airship_equipment_0
					amount = -25
				}
			}
			custom_effect_tooltip = decision_cost_airship_25_return_tt
		}
	}
	KXN_Aerostat_Patrol_Decision = {
		icon = airship_patrol
		allowed = { tag = KXN }
		ai_will_do = { factor = 20 }
		
		state_target = africa
		on_map_mode = map_only
		
		visible = {
			has_country_flag = KXN_Aerostat_Patrol_Decision_Show_Flag
		}
		
		target_array = KXN.controlled_states
		target_trigger = {
			FROM = {
				has_resistance = yes
				NOT = { is_core_of = KXN }
			}
		}
		
		custom_cost_text = decision_cost_10_cp_airship_25
		custom_cost_trigger = {
			command_power > 9
			has_equipment = { medium_airship_equipment_0 > 24 }
		}
		
		days_re_enable = 70
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Aerostat_Patrol_Decision target: [From.GetName]"
			FROM = {
				add_dynamic_modifier = { modifier = KXN_Aerostat_Patrol_Modifier scope = KXN days = 70 }
			}
			hidden_effect = {
				country_event = { id = lan_kir_utility.2 days = 70 }
				add_command_power = -10
				add_equipment_to_stockpile = {
					type = medium_airship_equipment_0
					amount = -25
				}
			}
			custom_effect_tooltip = decision_cost_airship_25_return_tt
		}
	}
	KXN_Aerostat_Bomb_Decision_HIDE = {
		icon = airship_bomb
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Aerostat_Bomb_Decision_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Aerostat_Bomb_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_Bomb_Decision_HIDE_tt
		}
	}
	KXN_Aerostat_Bomb_Decision_SHOW = {
		icon = airship_bomb
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Aerostat_Bomb_Decision_Show_Flag }
		}
		complete_effect = {
			set_country_flag = KXN_Aerostat_Bomb_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_Bomb_Decision_SHOW_tt
		}
	}
	KXN_Aerostat_CAS_Decision_HIDE = {
		icon = airship_defence
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Aerostat_CAS_Decision_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Aerostat_CAS_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_CAS_Decision_HIDE_tt
		}
	}
	KXN_Aerostat_CAS_Decision_SHOW = {
		icon = airship_defence
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Aerostat_CAS_Decision_Show_Flag }
		}
		complete_effect = {
			set_country_flag = KXN_Aerostat_CAS_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_CAS_Decision_SHOW_tt
		}
	}
	KXN_Aerostat_Supply_Decision_HIDE = {
		icon = airship_supply
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Aerostat_Supply_Decision_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Aerostat_Supply_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_Supply_Decision_HIDE_tt
		}
	}
	KXN_Aerostat_Supply_Decision_SHOW = {
		icon = airship_supply
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Aerostat_Supply_Decision_Show_Flag }
		}
		complete_effect = {
			set_country_flag = KXN_Aerostat_Supply_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_Supply_Decision_SHOW_tt
		}
	}
	KXN_Aerostat_Patrol_Decision_HIDE = {
		icon = airship_patrol
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Aerostat_Patrol_Decision_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Aerostat_Patrol_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_Patrol_Decision_HIDE_tt
		}
	}
	KXN_Aerostat_Patrol_Decision_SHOW = {
		icon = airship_patrol
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Aerostat_Patrol_Decision_Show_Flag }
		}
		complete_effect = {
			set_country_flag = KXN_Aerostat_Patrol_Decision_Show_Flag
			custom_effect_tooltip = KXN_Aerostat_Patrol_Decision_SHOW_tt
		}
	}
}

operations = {
	KXN_Reverse_Vanguard_Motorisation = {
		icon = generic_motorized
		allowed = { is_kirin_race = yes }
		ai_will_do = { factor = 0 }
		
		visible = {
			has_tech = tech_kirin_vanguardmot
			has_country_flag = tech_kirin_vanguardmot_unlocked
		}
		
		cost = 25
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Reverse_Vanguard_Motorisation"
			custom_effect_tooltip = KXN_Reverse_Vanguard_Motorisation_tt
			hidden_effect = {
				set_technology = { tech_kirin_vanguardmot = 0 }
				KXN_REFRESH_VANGUARDS_EFFECT = yes
				clr_country_flag = tech_kirin_vanguardmot_unlocked
			}
		}
	}
	KXN_Reverse_Paratrooper_Motorisation = {
		icon = generic_motorized
		allowed = { tag = KXN }
		ai_will_do = { factor = 0 }
		
		visible = {
			has_tech = KXN_Para_Motorcyclists
			has_country_flag = KXN_Para_Motorcyclists_unlocked
		}
		
		cost = 25
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KXN_Reverse_Paratrooper_Motorisation"
			custom_effect_tooltip = KXN_Reverse_Paratrooper_Motorisation_tt
			hidden_effect = {
				set_technology = { KXN_Para_Motorcyclists = 0 }
				KXN_REFRESH_PARATROOPERS_EFFECT = yes
				clr_country_flag = KXN_Para_Motorcyclists_unlocked
				uncomplete_national_focus = {
					focus = KXN_Focus_MOTORCYCLE_7
					uncomplete_children = yes
					refund_political_power = no
				}
			}
		}
	}
	 KXN_Bannerkir_Levy_HIDE = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			has_country_flag = KXN_Bannerkir_Levy_Show_Flag
		}
		complete_effect = {
			clr_country_flag = KXN_Bannerkir_Levy_Show_Flag
			custom_effect_tooltip = KXN_Bannerkir_Levy_HIDE_tt
		}
	}
	KXN_Bannerkir_Levy_SHOW = {
		icon = generic_decision
		allowed = { tag = KXN }
		visible = {
			NOT = { has_country_flag = KXN_Bannerkir_Levy_Show_Flag }
		}
		complete_effect = {
			set_country_flag = KXN_Bannerkir_Levy_Show_Flag
			custom_effect_tooltip = KXN_Bannerkir_Levy_SHOW_tt
		}
	}
}
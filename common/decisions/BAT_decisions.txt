BAT_appoint_warmaster = {
	BAT_appoint_autumn = {
		ai_will_do = {
			factor = 100
		}
		available = {
			NOT = {
				has_country_flag = BAT_changed_leader_flag
			}
		}
		visible = {
			OR = {
				has_government = neutrality
				has_government = fascism
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = BAT_autumn_breeze
				}
			}
			has_character = BAT_autumn_breeze

			NOT = {
			    has_country_flag = BAT_autumn_retired
			}
			NOT = {
			    has_country_flag = BAT_no_changing_flag
			}
			NOT = {
			    has_country_flag = BAT_warmasters_not_leaders
			}
		}
		icon = lunar_war_plan

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_appoint_autumn"
			custom_effect_tooltip = BAT_changed_leader_tp
			BAT_autumn_breeze = {
				promote_character = {
    				ideology = falangism
 				}
                promote_character = {
    				ideology = theocracy_subideology
 				}
			}
			if = {
			    limit = {
				    has_idea = BAT_emerald_advisor_1
					has_idea = BAT_emerald_advisor_2
					has_idea = BAT_emerald_advisor_3
				}
				remove_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
				add_ideas = { 
					BAT_autumn_advisor_1
					BAT_autumn_advisor_2
					BAT_autumn_advisor_3
				}	
			}
			else_if = {
			    limit = {
				    has_idea = BAT_eternal_advisor_1
					has_idea = BAT_eternal_advisor_2
					has_idea = BAT_eternal_advisor_3
				}
				remove_ideas = { 
					BAT_eternal_advisor_1
					BAT_eternal_advisor_2
					BAT_eternal_advisor_3
				}
				add_ideas = { 
					BAT_autumn_advisor_1
					BAT_autumn_advisor_2
					BAT_autumn_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lunar_advisor_1
					has_idea = BAT_lunar_advisor_2
					has_idea = BAT_lunar_advisor_3
				}
				remove_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
				add_ideas = { 
					BAT_autumn_advisor_1
					BAT_autumn_advisor_2
					BAT_autumn_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lightning_advisor_1
					has_idea = BAT_lightning_advisor_2
					has_idea = BAT_lightning_advisor_3
				}
				remove_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
				add_ideas = { 
					BAT_autumn_advisor_1
					BAT_autumn_advisor_2
					BAT_autumn_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_stone_advisor_1
					has_idea = BAT_stone_advisor_2
					has_idea = BAT_stone_advisor_3
				}
				remove_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
				add_ideas = { 
					BAT_autumn_advisor_1
					BAT_autumn_advisor_2
					BAT_autumn_advisor_3
				}
			}
			else = {
			    add_ideas = { 
					BAT_autumn_advisor_1
					BAT_autumn_advisor_2
					BAT_autumn_advisor_3
				}
			}
			hidden_effect = {
				set_country_flag = {
					flag = BAT_changed_leader_flag
					days = 365
					value = 1
				}
			}
		}
	}

	BAT_appoint_emerald = {
		ai_will_do = {
			factor = 100
		}
		available = {
			NOT = {
				has_country_flag = BAT_changed_leader_flag
			}
		}
		visible = {
			OR = {
				has_government = neutrality
				has_government = fascism
			}
			has_character = BAT_emerald_light

			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = BAT_emerald_light
				}
			}
			NOT = {
			    has_country_flag = BAT_no_changing_flag
			}
			NOT = {
			    has_country_flag = BAT_warmasters_not_leaders
			}
		}
		icon = lunar_war_plan

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_appoint_emerald"
			custom_effect_tooltip = BAT_changed_leader_tp
			BAT_emerald_light = {
				promote_character = {
    				ideology = falangism
 				}
                promote_character = {
    				ideology = theocracy_subideology
 				}
			}
			if = {
			    limit = {
				    has_idea = BAT_autumn_advisor_1
					has_idea = BAT_autumn_advisor_2
					has_idea = BAT_autumn_advisor_3
				}
				remove_ideas = { 
					BAT_autumn_advisor_1
					BAT_autumn_advisor_2
					BAT_autumn_advisor_3
				}
				add_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_eternal_advisor_1
					has_idea = BAT_eternal_advisor_2
					has_idea = BAT_eternal_advisor_3
				}
				remove_ideas = { 
					BAT_eternal_advisor_1
					BAT_eternal_advisor_2
					BAT_eternal_advisor_3
				}
				add_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lunar_advisor_1
					has_idea = BAT_lunar_advisor_2
					has_idea = BAT_lunar_advisor_3
				}
				remove_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
				add_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lightning_advisor_1
					has_idea = BAT_lightning_advisor_2
					has_idea = BAT_lightning_advisor_3
				}
				remove_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
				add_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_stone_advisor_1
					has_idea = BAT_stone_advisor_2
					has_idea = BAT_stone_advisor_3
				}
				remove_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
				add_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lucent_advisor_1
					has_idea = BAT_lucent_advisor_2
					has_idea = BAT_lucent_advisor_3
				}
				remove_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_3
				}
				add_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lucent_advisor_1
					has_idea = BAT_lucent_advisor_2
					has_idea = BAT_lucent_advisor_4
				}
				remove_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_4
				}
				add_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_auburn_advisor_1
					has_idea = BAT_auburn_advisor_2
					has_idea = BAT_auburn_advisor_3
				}
				remove_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
				add_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
			}
			else = {
			   add_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
			}
			hidden_effect = {
				set_country_flag = {
					flag = BAT_changed_leader_flag
					days = 365
					value = 1
				}
			}
		}
	}

	BAT_appoint_eclipse = {
		ai_will_do = {
			factor = 100
		}
		available = {
			NOT = {
				has_country_flag = BAT_changed_leader_flag
			}
		}
		visible = {
			OR = {
				has_government = neutrality
				has_government = fascism
			}
			has_character = BAT_eternal_eclipse

			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = BAT_eternal_eclipse
				}
			}
			NOT = {
			    OR = {
			        has_country_flag = BAT_eternal_died
					has_country_flag = BAT_eternal_retired
				}
			}
			NOT = {
			    has_country_flag = BAT_no_changing_flag
			}
			NOT = {
			    has_country_flag = BAT_warmasters_not_leaders
			}
		}
		icon = lunar_war_plan

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_appoint_eclipse"
			custom_effect_tooltip = BAT_changed_leader_tp
			BAT_eternal_eclipse = {
				promote_character = {
    				ideology = falangism
 				}
                promote_character = {
    				ideology = theocracy_subideology
 				}
			}
			if = {
			    limit = {
				    has_idea = BAT_autumn_advisor_1
					has_idea = BAT_autumn_advisor_2
					has_idea = BAT_autumn_advisor_3
				}
				remove_ideas = { 
					BAT_autumn_advisor_1
					BAT_autumn_advisor_2
					BAT_autumn_advisor_3
				}
				add_ideas = { 
					BAT_eternal_advisor_1
					BAT_eternal_advisor_2
					BAT_eternal_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_emerald_advisor_1
					has_idea = BAT_emerald_advisor_2
					has_idea = BAT_emerald_advisor_3
				}
				remove_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
				add_ideas = { 
					BAT_eternal_advisor_1
					BAT_eternal_advisor_2
					BAT_eternal_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lunar_advisor_1
					has_idea = BAT_lunar_advisor_2
					has_idea = BAT_lunar_advisor_3
				}
				remove_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
				add_ideas = { 
					BAT_eternal_advisor_1
					BAT_eternal_advisor_2
					BAT_eternal_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lightning_advisor_1
					has_idea = BAT_lightning_advisor_2
					has_idea = BAT_lightning_advisor_3
				}
				remove_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
				add_ideas = { 
					BAT_eternal_advisor_1
					BAT_eternal_advisor_2
					BAT_eternal_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_stone_advisor_1
					has_idea = BAT_stone_advisor_2
					has_idea = BAT_stone_advisor_3
				}
				remove_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
				add_ideas = { 
					BAT_eternal_advisor_1
					BAT_eternal_advisor_2
					BAT_eternal_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_auburn_advisor_1
					has_idea = BAT_auburn_advisor_2
					has_idea = BAT_auburn_advisor_3
				}
				remove_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
				add_ideas = { 
					BAT_eternal_advisor_1
					BAT_eternal_advisor_2
					BAT_eternal_advisor_3
				}
			}
			else = {
			    add_ideas = { 
					BAT_eternal_advisor_1
					BAT_eternal_advisor_2
					BAT_eternal_advisor_3
				}
			}
			hidden_effect = {
				set_country_flag = {
					flag = BAT_changed_leader_flag
					days = 365
					value = 1
				}
			}
		}
	}

	BAT_appoint_hail = {
		ai_will_do = {
			factor = 100
		}
		available = {
			NOT = {
				has_country_flag = BAT_changed_leader_flag
			}
		}
		visible = {
			OR = {
				has_government = neutrality
				has_government = fascism
			}
			has_character = BAT_lunar_hail

			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = BAT_lunar_hail
				}
			}
			NOT = {
			    has_country_flag = BAT_no_changing_flag
			}
			NOT = {
			    has_country_flag = BAT_lunar_hail_retired
			}
			NOT = {
			    has_country_flag = BAT_warmasters_not_leaders
			}
		}
		icon = lunar_war_plan

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_appoint_hail"
			custom_effect_tooltip = BAT_changed_leader_tp
			BAT_lunar_hail = {
				promote_character = {
    				ideology = falangism
 				}
                promote_character = {
    				ideology = theocracy_subideology
 				}
			}
			if = {
			    limit = {
				    has_idea = BAT_autumn_advisor_1
					has_idea = BAT_autumn_advisor_2
					has_idea = BAT_autumn_advisor_3
				}
				remove_ideas = { 
					BAT_autumn_advisor_1
					BAT_autumn_advisor_2
					BAT_autumn_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_emerald_advisor_1
					has_idea = BAT_emerald_advisor_2
					has_idea = BAT_emerald_advisor_3
				}
				remove_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_eternal_advisor_1
					has_idea = BAT_eternal_advisor_2
					has_idea = BAT_eternal_advisor_3
				}
				remove_ideas = { 
					BAT_eternal_advisor_1
					BAT_eternal_advisor_2
					BAT_eternal_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lightning_advisor_1
					has_idea = BAT_lightning_advisor_2
					has_idea = BAT_lightning_advisor_3
				}
				remove_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_stone_advisor_1
					has_idea = BAT_stone_advisor_2
					has_idea = BAT_stone_advisor_3
				}
				remove_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lucent_advisor_1
					has_idea = BAT_lucent_advisor_2
					has_idea = BAT_lucent_advisor_3
				}
				remove_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lucent_advisor_1
					has_idea = BAT_lucent_advisor_2
					has_idea = BAT_lucent_advisor_4
				}
				remove_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_4
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_auburn_advisor_1
					has_idea = BAT_auburn_advisor_2
					has_idea = BAT_auburn_advisor_3
				}
				remove_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else = {
			    add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			hidden_effect = {
				set_country_flag = {
					flag = BAT_changed_leader_flag
					days = 365
					value = 1
				}
			}
		}
	}

	BAT_appoint_lightning = {
		ai_will_do = {
			factor = 100
		}
		available = {
			NOT = {
				has_country_flag = BAT_changed_leader_flag
			}
		}
		visible = {
			OR = {
				has_government = neutrality
				has_government = fascism
			}
			has_character = BAT_lightning_charm

			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = BAT_lightning_charm
				}
			}
			NOT = {
			    has_country_flag = BAT_no_changing_flag
			}
			NOT = {
			    has_country_flag = BAT_warmasters_not_leaders
			}
		}
		icon = lunar_war_plan

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_appoint_lightning"
			custom_effect_tooltip = BAT_changed_leader_tp
			BAT_lightning_charm = {
				promote_character = {
    				ideology = falangism
 				}
                promote_character = {
    				ideology = theocracy_subideology
 				}
			}
			if = {
			    limit = {
				    has_idea = BAT_autumn_advisor_1
					has_idea = BAT_autumn_advisor_2
					has_idea = BAT_autumn_advisor_3
				}
				remove_ideas = { 
					BAT_autumn_advisor_1
					BAT_autumn_advisor_2
					BAT_autumn_advisor_3
				}
				add_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_emerald_advisor_1
					has_idea = BAT_emerald_advisor_2
					has_idea = BAT_emerald_advisor_3
				}
				remove_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
				add_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_eternal_advisor_1
					has_idea = BAT_eternal_advisor_2
					has_idea = BAT_eternal_advisor_3
				}
				remove_ideas = { 
					BAT_eternal_advisor_1
					BAT_eternal_advisor_2
					BAT_eternal_advisor_3
				}
				add_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lunar_advisor_1
					has_idea = BAT_lunar_advisor_2
					has_idea = BAT_lunar_advisor_3
				}
				remove_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
				add_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_stone_advisor_1
					has_idea = BAT_stone_advisor_2
					has_idea = BAT_stone_advisor_3
				}
				remove_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
				add_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lucent_advisor_1
					has_idea = BAT_lucent_advisor_2
					has_idea = BAT_lucent_advisor_3
				}
				remove_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_3
				}
				add_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lucent_advisor_1
					has_idea = BAT_lucent_advisor_2
					has_idea = BAT_lucent_advisor_4
				}
				remove_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_4
				}
				add_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_auburn_advisor_1
					has_idea = BAT_auburn_advisor_2
					has_idea = BAT_auburn_advisor_3
				}
				remove_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
				add_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
			}
			else = {
			    add_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
			}
			hidden_effect = {
				set_country_flag = {
					flag = BAT_changed_leader_flag
					days = 365
					value = 1
				}
			}
		}
	}

	BAT_appoint_palisade = {
		ai_will_do = {
			factor = 100
		}
		available = {
			NOT = {
				has_country_flag = BAT_changed_leader_flag
			}
		}
		visible = {
			OR = {
				has_government = neutrality
				has_government = fascism
			}
			has_character = BAT_stone_palisade

			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = BAT_stone_palisade
				}
			}
			NOT = {
			    has_country_flag = BAT_no_changing_flag
			}
			NOT = {
			    has_country_flag = BAT_warmasters_not_leaders
			}
		}
		icon = lunar_war_plan

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_appoint_lightning"
			custom_effect_tooltip = BAT_changed_leader_tp
			BAT_stone_palisade = {
				promote_character = {
    				ideology = falangism
 				}
                promote_character = {
    				ideology = theocracy_subideology
 				}
			}
			if = {
			    limit = {
				    has_idea = BAT_autumn_advisor_1
					has_idea = BAT_autumn_advisor_2
					has_idea = BAT_autumn_advisor_3
				}
				remove_ideas = { 
					BAT_autumn_advisor_1
					BAT_autumn_advisor_2
					BAT_autumn_advisor_3
				}
				add_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_emerald_advisor_1
					has_idea = BAT_emerald_advisor_2
					has_idea = BAT_emerald_advisor_3
				}
				remove_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
				add_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_eternal_advisor_1
					has_idea = BAT_eternal_advisor_2
					has_idea = BAT_eternal_advisor_3
				}
				remove_ideas = { 
					BAT_eternal_advisor_1
					BAT_eternal_advisor_2
					BAT_eternal_advisor_3
				}
				add_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lunar_advisor_1
					has_idea = BAT_lunar_advisor_2
					has_idea = BAT_lunar_advisor_3
				}
				remove_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
				add_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lightning_advisor_1
					has_idea = BAT_lightning_advisor_2
					has_idea = BAT_lightning_advisor_3
				}
				remove_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
				add_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lucent_advisor_1
					has_idea = BAT_lucent_advisor_2
					has_idea = BAT_lucent_advisor_3
				}
				remove_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_3
				}
				add_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lucent_advisor_1
					has_idea = BAT_lucent_advisor_2
					has_idea = BAT_lucent_advisor_4
				}
				remove_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_4
				}
				add_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_auburn_advisor_1
					has_idea = BAT_auburn_advisor_2
					has_idea = BAT_auburn_advisor_3
				}
				remove_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
				add_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
			}
			else = {
			    add_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
			}
			hidden_effect = {
				set_country_flag = {
					flag = BAT_changed_leader_flag
					days = 365
					value = 1
				}
			}
		}
	}
	
	BAT_appoint_auburn = {
		ai_will_do = {
			factor = 100
		}
		available = {
			NOT = {
				has_country_flag = BAT_changed_leader_flag
			}
		}
		visible = {
			OR = {
				has_government = neutrality
				has_government = fascism
			}
			has_character = BAT_auburn_leaf

			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = BAT_auburn_leaf
				}
			}
			has_country_flag = BAT_autumn_retired
			NOT = {
			    has_country_flag = BAT_no_changing_flag
			}
			NOT = {
			    has_country_flag = BAT_auburn_has_no_balls
			}
			NOT = {
			    has_country_flag = BAT_warmasters_not_leaders
			}
		}
		icon = lunar_war_plan

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_appoint_autumn"
			custom_effect_tooltip = BAT_changed_leader_tp
			BAT_auburn_leaf = {
				promote_character = {
    				ideology = falangism
 				}
                promote_character = {
    				ideology = theocracy_subideology
 				}
			}
			if = {
			    limit = {
				    has_idea = BAT_lucent_advisor_1
					has_idea = BAT_lucent_advisor_2
					has_idea = BAT_lucent_advisor_3
				}
				remove_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_3
				}
				add_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lucent_advisor_1
					has_idea = BAT_lucent_advisor_2
					has_idea = BAT_lucent_advisor_4
				}
				remove_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_4
				}
				add_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_emerald_advisor_1
					has_idea = BAT_emerald_advisor_2
					has_idea = BAT_emerald_advisor_3
				}
				remove_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
				add_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lunar_advisor_1
					has_idea = BAT_lunar_advisor_2
					has_idea = BAT_lunar_advisor_3
				}
				remove_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
				add_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lightning_advisor_1
					has_idea = BAT_lightning_advisor_2
					has_idea = BAT_lightning_advisor_3
				}
				remove_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
				add_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_stone_advisor_1
					has_idea = BAT_stone_advisor_2
					has_idea = BAT_stone_advisor_3
				}
				remove_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
				add_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
			}
			else = {
			    add_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
			}
			hidden_effect = {
				set_country_flag = {
					flag = BAT_changed_leader_flag
					days = 365
					value = 1
				}
			}
		}
	}
	
	BAT_appoint_lucent = {
		ai_will_do = {
			factor = 100
		}
		available = {
			NOT = {
				has_country_flag = BAT_changed_leader_flag
			}
		}
		visible = {
			OR = {
				has_government = neutrality
				has_government = fascism
			}
			has_character = BAT_lucent_eclipse

			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = BAT_lucent_eclipse
				}
			}
			OR = {
			    has_country_flag = BAT_eternal_died
			    has_country_flag = BAT_eternal_retired
			}
			NOT = {
			    has_country_flag = BAT_no_changing_flag
			}
			NOT = {
			    has_country_flag = BAT_lucent_has_no_balls
			}
			NOT = {
			    has_country_flag = BAT_warmasters_not_leaders
			}
		}
		icon = lunar_war_plan

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_appoint_lucent"
			custom_effect_tooltip = BAT_changed_leader_tp
			BAT_lucent_eclipse = {
				promote_character = {
    				ideology = falangism
 				}
                promote_character = {
    				ideology = theocracy_subideology
 				}
			}
			if = {
			    limit = {
				    has_idea = BAT_auburn_advisor_1
					has_idea = BAT_auburn_advisor_2
					has_idea = BAT_auburn_advisor_3
					NOT = {
					    has_country_flag = BAT_carrot_stick_not_advisor
					}
				}
				remove_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
				add_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_auburn_advisor_1
					has_idea = BAT_auburn_advisor_2
					has_idea = BAT_auburn_advisor_3
					has_country_flag = BAT_carrot_stick_not_advisor
				}
				remove_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
				add_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_4
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_emerald_advisor_1
					has_idea = BAT_emerald_advisor_2
					has_idea = BAT_emerald_advisor_3
					NOT = {
					    has_country_flag = BAT_carrot_stick_not_advisor
					}
				}
				remove_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
				add_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_emerald_advisor_1
					has_idea = BAT_emerald_advisor_2
					has_idea = BAT_emerald_advisor_3
					has_country_flag = BAT_carrot_stick_not_advisor
				}
				remove_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
				add_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_4
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lunar_advisor_1
					has_idea = BAT_lunar_advisor_2
					has_idea = BAT_lunar_advisor_3
					NOT = {
					    has_country_flag = BAT_carrot_stick_not_advisor
					}
				}
				remove_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
				add_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lunar_advisor_1
					has_idea = BAT_lunar_advisor_2
					has_idea = BAT_lunar_advisor_3
					has_country_flag = BAT_carrot_stick_not_advisor
				}
				remove_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
				add_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_4
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lightning_advisor_1
					has_idea = BAT_lightning_advisor_2
					has_idea = BAT_lightning_advisor_3
					NOT = {
					    has_country_flag = BAT_carrot_stick_not_advisor
					}
				}
				remove_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
				add_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lightning_advisor_1
					has_idea = BAT_lightning_advisor_2
					has_idea = BAT_lightning_advisor_3
					has_country_flag = BAT_carrot_stick_not_advisor
				}
				remove_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
				add_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_4
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_stone_advisor_1
					has_idea = BAT_stone_advisor_2
					has_idea = BAT_stone_advisor_3
					NOT = {
					    has_country_flag = BAT_carrot_stick_not_advisor
					}
				}
				remove_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
				add_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_stone_advisor_1
					has_idea = BAT_stone_advisor_2
					has_idea = BAT_stone_advisor_3
					has_country_flag = BAT_carrot_stick_not_advisor
				}
				remove_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
				add_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_4
				}
			}
			else = {
			    add_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_3
				}
			}
			hidden_effect = {
				set_country_flag = {
					flag = BAT_changed_leader_flag
					days = 365
					value = 1
				}
			}
		}
	}
	
	BAT_appoint_lehay = {
		ai_will_do = {
			factor = 100
		}
		available = {
			NOT = {
				has_country_flag = BAT_changed_leader_flag
			}
		}
		visible = {
			OR = {
				has_government = neutrality
				has_government = fascism
			}
			has_character = BAT_leaf_lehay

			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = BAT_leaf_lehay
				}
			}
			NOT = {
			    has_country_flag = BAT_no_changing_flag
			}
			NOT = {
			    has_country_flag = BAT_warmasters_not_leaders
			}
			has_country_flag = BAT_lunar_hail_retired
		}
		icon = lunar_war_plan

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_appoint_lehay"
			custom_effect_tooltip = BAT_changed_leader_tp
			BAT_leaf_lehay = {
				promote_character = {
    				ideology = falangism
 				}
                promote_character = {
    				ideology = theocracy_subideology
 				}
			}
			if = {
			    limit = {
				    has_idea = BAT_autumn_advisor_1
					has_idea = BAT_autumn_advisor_2
					has_idea = BAT_autumn_advisor_3
				}
				remove_ideas = { 
					BAT_autumn_advisor_1
					BAT_autumn_advisor_2
					BAT_autumn_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_emerald_advisor_1
					has_idea = BAT_emerald_advisor_2
					has_idea = BAT_emerald_advisor_3
				}
				remove_ideas = { 
					BAT_emerald_advisor_1
					BAT_emerald_advisor_2
					BAT_emerald_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_eternal_advisor_1
					has_idea = BAT_eternal_advisor_2
					has_idea = BAT_eternal_advisor_3
				}
				remove_ideas = { 
					BAT_eternal_advisor_1
					BAT_eternal_advisor_2
					BAT_eternal_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lightning_advisor_1
					has_idea = BAT_lightning_advisor_2
					has_idea = BAT_lightning_advisor_3
				}
				remove_ideas = { 
					BAT_lightning_advisor_1
					BAT_lightning_advisor_2
					BAT_lightning_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_stone_advisor_1
					has_idea = BAT_stone_advisor_2
					has_idea = BAT_stone_advisor_3
				}
				remove_ideas = { 
					BAT_stone_advisor_1
					BAT_stone_advisor_2
					BAT_stone_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lucent_advisor_1
					has_idea = BAT_lucent_advisor_2
					has_idea = BAT_lucent_advisor_3
				}
				remove_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_lucent_advisor_1
					has_idea = BAT_lucent_advisor_2
					has_idea = BAT_lucent_advisor_4
				}
				remove_ideas = { 
					BAT_lucent_advisor_1
					BAT_lucent_advisor_2
					BAT_lucent_advisor_4
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_auburn_advisor_1
					has_idea = BAT_auburn_advisor_2
					has_idea = BAT_auburn_advisor_3
				}
				remove_ideas = { 
					BAT_auburn_advisor_1
					BAT_auburn_advisor_2
					BAT_auburn_advisor_3
				}
				add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			else = {
			    add_ideas = { 
					BAT_lunar_advisor_1
					BAT_lunar_advisor_2
					BAT_lunar_advisor_3
				}
			}
			hidden_effect = {
				set_country_flag = {
					flag = BAT_changed_leader_flag
					days = 365
					value = 1
				}
			}
		}
	}
}

BAT_chiropterran_hegemony = {
    BAT_colthage_governate = {
		icon = eng_trade_unions_support
		visible = {
			NOT = {
				country_exists = CTH
			}
			any_owned_state = {
			    is_core_of = CTH		
			}
			OR = {
				has_government = fascism
				has_government = neutrality
			}
		}
		available = {
			is_subject = no
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_colthage_governate"
			custom_effect_tooltip = BAT_colthage_governate_tp
			hidden_effect = {
			    if = {
				    limit = {
					    698 = {
						    is_core_of = CTH
						}
					}
					698 = {
						remove_core_of = CTH
					}
				}
				if = {
				    limit = {
					    711 = {
						    is_core_of = CTH
						}
					}
					711 = {
						remove_core_of = CTH
					}
				}
				if = {
				    limit = {
					    697 = {
						    is_core_of = CTH
						}
					}
					697 = {
						remove_core_of = CTH
					}
				}
				for_each_scope_loop = {
                    array = CTH.core_states
                    if = {
                        limit = {
                            OR = {
                                is_owned_and_controlled_by = ROOT
                                owner = {
                                    is_subject_of = ROOT
                                }
                            }
                        }
                        CTH = {
                            transfer_state = PREV
                        }
                    }
                }
				for_each_scope_loop = {
                    array = CVA.core_states
                    if = {
                        limit = {
                            OR = {
                                is_owned_and_controlled_by = ROOT
                                owner = {
                                    is_subject_of = ROOT
                                }
                            }
                        }
                        CTH = {
                            transfer_state = PREV
                        }
                    }
                }
				if = {
					limit = {
						707 = {
							owner = {
								OR = { 
									tag = ROOT
									is_subject_of = ROOT
								}
							}
						}
					}
					CTH = {
					    transfer_state = 707
					}
				}
				if = {
					limit = {
						1089 = {
							owner = {
								OR = { 
									tag = ROOT
									is_subject_of = ROOT
								}
							}
						}
					}
					CTH = {
					    transfer_state = 1089
					}
				}
				if = {
					limit = {
						933 = {
							owner = {
								OR = { 
									tag = ROOT
									is_subject_of = ROOT
								}
							}
						}
					}
					CTH = {
					    transfer_state = 933
					}
				}
				if = {
					limit = {
						708 = {
							owner = {
								OR = { 
									tag = ROOT
									is_subject_of = ROOT
								}
							}
						}
					}
					CTH = {
					    transfer_state = 708
					}
				}
				if = {
					limit = {
						751 = {
							owner = {
								OR = { 
									tag = ROOT
									is_subject_of = ROOT
								}
							}
						}
					}
					CTH = {
					    transfer_state = 751
					}
				}
				CTH = {
				    set_country_flag = BAT_puppet_flag
					set_cosmetic_tag = CTH_BAT
					set_capital = {
						state = 875
						remember_old_capital = no 
					}
					ROOT = {
						puppet = PREV
					} 
				}
				if = {
				    limit = {
					    ROOT = {
						    has_government = neutrality
						}
					}
				    CTH = {
					    load_focus_tree = generic_zebra_focus
					    set_politics = { 
						    ruling_party = neutrality 
					    }
					    set_party_name = { 
						    ideology = fascism
						    name = CTH_BAT_fascist_party
						    long_name = CTH_BAT_fascist_party_long
					    }
					    set_party_name = { 
						    ideology = neutrality
						    name = CTH_BAT_neutrality_party
						    long_name = CTH_BAT_neutrality_party_long
					    }
					    set_popularities = {
						    democratic = 15
						    fascism = 35
						    communism = 0
						    neutrality = 50
					    }
				    }
				}
				if = {
				    limit = {
					    ROOT = {
						    has_government = fascism
						}
					}
				    CTH = {
					    load_focus_tree = generic_zebra_focus
					    set_politics = { 
						    ruling_party = fascism 
					    }
					    set_party_name = { 
						    ideology = fascism
						    name = CTH_BAT_fascist_party
						    long_name = CTH_BAT_fascist_party_long
					    }
					    set_party_name = { 
						    ideology = neutrality
						    name = CTH_BAT_neutrality_party
						    long_name = CTH_BAT_neutrality_party_long
					    }
					    set_popularities = {
						    democratic = 15
						    fascism = 50
						    communism = 0
						    neutrality = 35
					    }
				    }
				}
				BAT_hefty_standard = { #For some insane reason if I don't make these commands seperate the puppet leader becomes the leader of the ROOT tag
				    set_nationality = CTH 
				}
				CTH = {
                    BAT_hefty_standard = {
					    promote_character = {
    					    ideology = falangism
 					    }
                	    promote_character = {
    					    ideology = theocracy_subideology
 					    }
				    }	
				}
				if = {
			    	limit = {
				    	is_in_faction = yes
					}
					ROOT = {
					    add_to_faction = CTH
					}
				}
			}
		}
		ai_will_do = {
			factor = 200
		}
	}
	
	BAT_hippogriffia_governate = {
		icon = eng_trade_unions_support
		visible = {
			NOT = {
				country_exists = HIP
			}
			any_owned_state = {
			    is_core_of = HIP
			}
			OR = {
				has_government = fascism
				has_government = neutrality
			}
			CTH = {
				OR = {
				exists = no
					is_subject = yes
					NOT = {
						is_in_faction_with = BAT
					}
				}	
			}
			WIN = {
			    NOT = {
				    has_country_flag = WIN_BAT_takeover
				}
			}
		}
		available = {
			is_subject = no
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_hippogriffia_governate"
			custom_effect_tooltip = BAT_hippogriffia_governate_tp
			hidden_effect = {
			    if = {
				    limit = {
					    698 = {
						    is_core_of = HIP
						}
					}
					698 = {
						remove_core_of = HIP
					}
				}
				if = {
				    limit = {
					    711 = {
						    is_core_of = HIP
						}
					}
					711 = {
						remove_core_of = HIP
					}
				}
				if = {
				    limit = {
					    697 = {
						    is_core_of = HIP
						}
					}
					697 = {
						remove_core_of = HIP
					}
				}
				if = {
				    limit = {
					    710 = {
						    is_core_of = HIP
						}
					}
					710 = {
						remove_core_of = HIP
					}
				}
				for_each_scope_loop = {
                    array = HIP.core_states
                    if = {
                        limit = {
                            OR = {
                                is_owned_and_controlled_by = ROOT
                                owner = {
                                    is_subject_of = ROOT
                                }
                            }
                        }
                        HIP = {
                            transfer_state = PREV
                        }
                    }
                }
				if = {
				    limit = {
					    1199 = {
						    is_owned_by = HIP
						}
					}
					BAT = {
						transfer_state = 1199
					}
				}
				if = {
				    limit = {
					    1204 = {
						    is_owned_by = HIP
						}
					}
					BAT = {
						transfer_state = 1204
					}
				}
				HIP = {
				    set_country_flag = BAT_puppet_flag
					set_cosmetic_tag = HIP_BAT
					set_capital = {
						state = 1165
						remember_old_capital = no 
					}
					ROOT = {
						puppet = PREV
					} 
				}
				if = {
				    limit = {
					    ROOT = {
						    has_government = neutrality
						}
					}
				    HIP = {
					    load_focus_tree = generic_zebra_focus
					    set_politics = { 
						    ruling_party = neutrality 
					    }
					    set_party_name = { 
						    ideology = fascism
						    name = HIP_BAT_fascist_party
						    long_name = HIP_BAT_fascist_party_long
					    }
					    set_party_name = { 
						    ideology = neutrality
						    name = HIP_BAT_neutrality_party
						    long_name = HIP_BAT_neutrality_party_long
					    }
					    set_popularities = {
						    democratic = 15
						    fascism = 35
						    communism = 0
						    neutrality = 50
					    }
				    }
				}
				if = {
				    limit = {
					    ROOT = {
						    has_government = fascism
						}
					}
				    HIP = {
					    load_focus_tree = generic_zebra_focus
					    set_politics = { 
						    ruling_party = fascism 
					    }
					    set_party_name = { 
						    ideology = fascism
						    name = HIP_BAT_fascist_party
						    long_name = HIP_BAT_fascist_party_long
					    }
					    set_party_name = { 
						    ideology = neutrality
						    name = HIP_BAT_neutrality_party
						    long_name = HIP_BAT_neutrality_party_long
					    }
					    set_popularities = {
						    democratic = 15
						    fascism = 50
						    communism = 0
						    neutrality = 35
					    }
				    }
				}
				BAT_ocean_spray_2 = { #For some insane reason if I don't make these commands seperate the puppet leader becomes the leader of the ROOT tag
				    set_nationality = HIP 
				}
				HIP = {
                    BAT_ocean_spray_2 = {
					    promote_character = {
    					    ideology = falangism
 					    }
                	    promote_character = {
    					    ideology = theocracy_subideology
 					    }
				    }	
				}				
				if = {
			    	limit = {
				    	is_in_faction = yes
					}
					ROOT = {
					    add_to_faction = HIP
					}
				}
			}
		}
		ai_will_do = {
			factor = 200
		}
	}
	
	BAT_quaggatai_governate = {
		icon = eng_trade_unions_support
		visible = {
			NOT = {
				country_exists = CGI
			}
			any_owned_state = {
			    is_core_of = CGI
				
			}
			OR = {
				has_government = fascism
				has_government = neutrality
			}
		}
		available = {
			is_subject = no
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_quaggatai_governate"
			custom_effect_tooltip = BAT_quaggatai_governate_tp
			hidden_effect = {
				for_each_scope_loop = {
                    array = CGI.core_states
                    if = {
                        limit = {
                            OR = {
                                is_owned_and_controlled_by = ROOT
                                owner = {
                                    is_subject_of = ROOT
                                }
                            }
                        }
                        CGI = {
                            transfer_state = PREV
                        }
                    }
                }
				if = {
					limit = {
						707 = {
							owner = {
							    NOT = { 
									original_tag = CTH 
								}
								OR = { 
									tag = ROOT
									is_subject_of = ROOT
								}
							}
						}
					}
					CGI = {
					    transfer_state = 707
					}
				}
				if = {
					limit = {
						1089 = {
							owner = {
							    NOT = { 
									original_tag = CTH 
								}
								OR = { 
									tag = ROOT
									is_subject_of = ROOT
								}
							}
						}
					}
					CGI = {
					    transfer_state = 1089
					}
				}
				if = {
					limit = {
						933 = {
							owner = {
							    NOT = { 
									original_tag = CTH 
								}
								OR = { 
									tag = ROOT
									is_subject_of = ROOT
								}
							}
						}
					}
					CGI = {
					    transfer_state = 933
					}
				}
				if = {
					limit = {
						708 = {
							owner = {
								OR = { 
									tag = ROOT
									is_subject_of = ROOT
								}
							}
						}
					}
					CGI = {
					    transfer_state = 708
					}
				}
				if = {
					limit = {
						751 = {
							owner = {
								OR = { 
									tag = ROOT
									is_subject_of = ROOT
								}
							}
						}
					}
					CGI = {
					    transfer_state = 751
					}
				}
				CGI = {
				    set_country_flag = BAT_puppet_flag
					set_cosmetic_tag = CGI_BAT
					set_capital = {
						state = 883
						remember_old_capital = no 
					}
					ROOT = {
						puppet = PREV
					} 
				}
				if = {
				    limit = {
					    ROOT = {
						    has_government = neutrality
						}
					}
				    CGI = {
					    load_focus_tree = generic_zebra_focus
					    set_politics = { 
						    ruling_party = neutrality 
					    }
					    set_party_name = { 
						    ideology = fascism
						    name = CGI_BAT_fascist_party
						    long_name = CTH_BAT_fascist_party_long
					    }
					    set_party_name = { 
						    ideology = neutrality
						    name = CGI_BAT_neutrality_party
						    long_name = CTH_BAT_neutrality_party_long
					    }
					    set_popularities = {
						    democratic = 15
						    fascism = 35
						    communism = 0
						    neutrality = 50
					    }
				    }
				}
				if = {
				    limit = {
					    ROOT = {
						    has_government = fascism
						}
					}
				    CGI = {
					    load_focus_tree = generic_zebra_focus
					    set_politics = { 
						    ruling_party = fascism 
					    }
					    set_party_name = { 
						    ideology = fascism
						    name = CGI_BAT_fascist_party
						    long_name = CGI_BAT_fascist_party_long
					    }
					    set_party_name = { 
						    ideology = neutrality
						    name = CGI_BAT_neutrality_party
						    long_name = CGI_BAT_neutrality_party_long
					    }
					    set_popularities = {
						    democratic = 15
						    fascism = 50
						    communism = 0
						    neutrality = 35
					    }
				    }
				}
				BAT_violet_glow = { #For some insane reason if I don't make these commands seperate the puppet leader becomes the leader of the ROOT tag
				    set_nationality = CGI 
				}
				CGI = {
                    BAT_violet_glow = {
					    promote_character = {
    					    ideology = falangism
 					    }
                	    promote_character = {
    					    ideology = theocracy_subideology
 					    }
				    }	
				}
				if = {
			    	limit = {
				    	is_in_faction = yes
					}
					ROOT = {
					    add_to_faction = CGI
					}
				}
			}
		}
		ai_will_do = {
			factor = 200
		}
	}
	
	BAT_from_equestria_1 = {
		icon = scroll
		
		visible = {
			has_completed_focus = BAT_settler_colonies
		}

        fire_only_once = yes
		days_remove = 30
		cost = 50

		ai_will_do = {
			base = 100
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_from_equestria_1"
			if = {
			    limit = {
				    has_government = neutrality
				}
				add_popularity = { 
					ideology = neutrality 	
					popularity = 0.025
				}
			}
			if = {
			    limit = {
				    has_government = fascism
				}
				add_popularity = { 
					ideology = fascism 	
					popularity = 0.025
				}
			}
			add_manpower = 25000
			add_equipment_to_stockpile = { 
				type = infantry_equipment 
				amount = 2500 
				producer = EQS 
			}
			hidden_effect = {
				set_country_flag = BAT_equestria_1
			}
		}
	}
	
	BAT_from_equestria_2 = {
		icon = scroll
		
		visible = {
			has_completed_focus = BAT_settler_colonies
			has_country_flag = BAT_equestria_1
		}

        fire_only_once = yes
		days_remove = 30
		cost = 40

		ai_will_do = {
			base = 100
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_from_equestria_2"
			if = {
			    limit = {
				    has_government = neutrality
				}
				add_popularity = { 
					ideology = neutrality 	
					popularity = 0.02
				}
			}
			if = {
			    limit = {
				    has_government = fascism
				}
				add_popularity = { 
					ideology = fascism 	
					popularity = 0.02
				}
			}
			add_manpower = 20000
			add_equipment_to_stockpile = { 
				type = infantry_equipment 
				amount = 2000 
				producer = EQS 
			}
			hidden_effect = {
				set_country_flag = BAT_equestria_2
			}
		}
	}
	
	BAT_from_equestria_3 = {
		icon = scroll
		
		visible = {
			has_completed_focus = BAT_settler_colonies
			has_country_flag = BAT_equestria_2
		}

        fire_only_once = yes
		days_remove = 30
		cost = 30

		ai_will_do = {
			base = 100
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_from_equestria_3"
			if = {
			    limit = {
				    has_government = neutrality
				}
				add_popularity = { 
					ideology = neutrality 	
					popularity = 0.015
				}
			}
			if = {
			    limit = {
				    has_government = fascism
				}
				add_popularity = { 
					ideology = fascism 	
					popularity = 0.015
				}
			}
			add_manpower = 15000
			add_equipment_to_stockpile = { 
				type = infantry_equipment 
				amount = 1500 
				producer = EQS 
			}
		}
	}
	
	BAT_from_new_mareland_1 = {
		icon = scroll
		
		visible = {
			has_completed_focus = BAT_settler_colonies
		}

        fire_only_once = yes
		days_remove = 30
		cost = 50

		ai_will_do = {
			base = 100
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_from_new_mareland_1"
			if = {
			    limit = {
				    has_government = neutrality
				}
				add_popularity = { 
					ideology = neutrality 	
					popularity = 0.025
				}
			}
			if = {
			    limit = {
				    has_government = fascism
				}
				add_popularity = { 
					ideology = fascism 	
					popularity = 0.025
				}
			}
			add_manpower = 25000
			add_equipment_to_stockpile = { 
				type = infantry_equipment 
				amount = 2500 
				producer = EQC 
			}
			hidden_effect = {
				set_country_flag = BAT_new_mareland_1
			}
		}
	}
	
	BAT_from_new_mareland_2 = {
		icon = scroll
		
		visible = {
			has_completed_focus = BAT_settler_colonies
			has_country_flag = BAT_new_mareland_1
			is_subject = no
		}

        fire_only_once = yes
		days_remove = 30
		cost = 40

		ai_will_do = {
			base = 100
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_from_new_mareland_2"
			if = {
			    limit = {
				    has_government = neutrality
				}
				add_popularity = { 
					ideology = neutrality 	
					popularity = 0.02
				}
			}
			if = {
			    limit = {
				    has_government = fascism
				}
				add_popularity = { 
					ideology = fascism 	
					popularity = 0.02
				}
			}
			add_manpower = 20000
			add_equipment_to_stockpile = { 
				type = infantry_equipment 
				amount = 2000 
				producer = EQC 
			}
			hidden_effect = {
				set_country_flag = BAT_new_mareland_2
			}
		}
	}
	
	BAT_from_new_mareland_3 = {
		icon = scroll
		
		visible = {
			has_completed_focus = BAT_settler_colonies
			has_country_flag = BAT_new_mareland_2
			is_subject = no
		}

        fire_only_once = yes
		days_remove = 30
		cost = 30

		ai_will_do = {
			base = 100
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_from_new_mareland_3"
			if = {
			    limit = {
				    has_government = neutrality
				}
				add_popularity = { 
					ideology = neutrality 	
					popularity = 0.015
				}
			}
			if = {
			    limit = {
				    has_government = fascism
				}
				add_popularity = { 
					ideology = fascism 	
					popularity = 0.015
				}
			}
			add_manpower = 15000
			add_equipment_to_stockpile = { 
				type = infantry_equipment 
				amount = 1500 
				producer = EQC 
			}
		}
	}
	
	BAT_create_colony = {
		icon = eng_install_government
		allowed = {
			original_tag = BAT
		}
        available = {
			FROM = {
				resistance < 40
				NOT = { 
					has_dynamic_modifier = { 
						modifier = BAT_lunarist_colony_modifier 
					} 
					has_state_flag = BAT_created_colony
				}
			}
		}
		visible = {
			has_completed_focus = BAT_the_model_communities
			FROM = {
				NOT = { 
					has_dynamic_modifier = { 
						modifier = BAT_lunarist_colony_modifier 
					} 
					has_state_flag = BAT_created_colony
				}
				is_owned_and_controlled_by = BAT
			}
		}
		target_root_trigger = {
            has_completed_focus = BAT_the_model_communities
        }
        state_target = yes
        targets = { 692 1205 728 729 730 746 745 744 743 1206 688 710 747 711 748 697 698 }
        on_map_mode = map_only

		ai_will_do = {
			base = 100
		}

		cost = 50
		days_remove = 60

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_create_colony"
			custom_effect_tooltip = BAT_create_colony_tp
			hidden_effect = {
				FROM = {
					add_dynamic_modifier = { 
						modifier = BAT_lunarist_colony_modifier 
					}
					set_state_flag = BAT_created_colony
				}
			}
		}
	}
	
	BAT_anti_resistance_operation = {
        icon = decision_repression
		allowed = {
		    original_tag = BAT
		}
        available = {
			command_power > 14
			has_manpower > 499
        }
        visible = {
		    OR = {
                has_completed_focus = BAT_dealing_with_resistance
				has_completed_focus = BAT_dealing_with_resistance_2
			}
			OR = {
			    has_idea = BAT_territorial_resistance_1
				has_idea = BAT_territorial_resistance_2
				has_idea = BAT_territorial_resistance_3
			}
			FROM = {
                is_owned_and_controlled_by = ROOT
            }
        }
        target_root_trigger = {
            OR = {
                has_completed_focus = BAT_dealing_with_resistance
				has_completed_focus = BAT_dealing_with_resistance_2
			}
        }
        state_target = yes
        targets = { 692 1205 728 729 730 746 745 744 743 1206 688 710 747 711 748 697 698 }
        on_map_mode = map_only
    
        ai_will_do = {
            base = 100
        }
        
		custom_cost_trigger = {
			command_power > 14
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_mp_500
        days_re_enable = 60
		days_remove = 7
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_resistance_operation"
			hidden_effect = {
			    add_command_power = -15
				add_manpower = -500
			}
        }
		remove_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_resistance_operation"
			if = {
			    limit = {
				    NOT = {
			            has_country_flag = BAT_tobuck_dead
			            has_country_flag = BAT_zarantia_dead
			            has_country_flag = BAT_slave_dead
			        }
				    OR = {
				        has_completed_focus = BAT_flying_arrow_doctrine
						has_completed_focus = BAT_flying_arrow_doctrine_2
					}
				}
				random_list = {
					1 = { 
				    	custom_effect_tooltip = BAT_intel_4_tp
				    	add_to_variable = { 
                        	var = BAT_tobuck_intel 
                        	value = 1
                    	}		
			        	clamp_variable = {
				        	var = BAT_tobuck_intel
				        	min = 0
				        	max = 100
			        	}
					}
					1 = { 
				    	custom_effect_tooltip = BAT_intel_5_tp
                    	add_to_variable = { 
                        	var = BAT_zarantia_intel 
                        	value = 1
                    	}	
			        	clamp_variable = {
				        	var = BAT_zarantia_intel
				        	min = 0
				       	 	max = 100
			        	}
					}
					1 = { 	
				    	custom_effect_tooltip = BAT_intel_6_tp
                    	add_to_variable = { 
                        	var = BAT_slave_intel 
                        	value = 1
                    	}			
			        	clamp_variable = {
				        	var = BAT_slave_intel
				        	min = 0
				       	 	max = 100
			       	 	}
					}
				}
			}
			else_if = {
			    limit = {
				    NOT = {
			            has_country_flag = BAT_tobuck_dead
			            has_country_flag = BAT_zarantia_dead
			            has_country_flag = BAT_slave_dead
			        }
					NOT = {
					    OR = {
				        	has_completed_focus = BAT_flying_arrow_doctrine
							has_completed_focus = BAT_flying_arrow_doctrine_2
						}
					}
				}
				random_list = {
					1 = { 
				    	custom_effect_tooltip = BAT_intel_1_tp
				    	add_to_variable = { 
                        	var = BAT_tobuck_intel 
                        	value = 0.5
                    	}		
			        	clamp_variable = {
				        	var = BAT_tobuck_intel
				        	min = 0
				        	max = 100
			        	}
					}
					1 = { 
				    	custom_effect_tooltip = BAT_intel_2_tp
                    	add_to_variable = { 
                        	var = BAT_zarantia_intel 
                        	value = 0.5
                    	}	
			        	clamp_variable = {
				        	var = BAT_zarantia_intel
				        	min = 0
				       	 	max = 100
			        	}
					}
					1 = { 	
				    	custom_effect_tooltip = BAT_intel_3_tp
                    	add_to_variable = { 
                        	var = BAT_slave_intel 
                        	value = 0.5
                    	}			
			        	clamp_variable = {
				        	var = BAT_slave_intel
				        	min = 0
				       	 	max = 100
			       	 	}
					}
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_tobuck_dead
				    NOT = {
			            has_country_flag = BAT_zarantia_dead
			            has_country_flag = BAT_slave_dead
			        }
				    OR = {
				        has_completed_focus = BAT_flying_arrow_doctrine
						has_completed_focus = BAT_flying_arrow_doctrine_2
					}
				}
				random_list = {
					1 = { 
				    	custom_effect_tooltip = BAT_intel_5_tp
                    	add_to_variable = { 
                        	var = BAT_zarantia_intel 
                        	value = 1
                    	}	
			        	clamp_variable = {
				        	var = BAT_zarantia_intel
				        	min = 0
				       	 	max = 100
			        	}
					}
					1 = { 	
				    	custom_effect_tooltip = BAT_intel_6_tp
                    	add_to_variable = { 
                        	var = BAT_slave_intel 
                        	value = 1
                    	}			
			        	clamp_variable = {
				        	var = BAT_slave_intel
				        	min = 0
				       	 	max = 100
			       	 	}
					}
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_tobuck_dead
				    NOT = {
			            has_country_flag = BAT_zarantia_dead
			            has_country_flag = BAT_slave_dead
			        }
					NOT = {
					    OR = {
				        	has_completed_focus = BAT_flying_arrow_doctrine
							has_completed_focus = BAT_flying_arrow_doctrine_2
						}
					}
				}
				random_list = {
					1 = { 
				    	custom_effect_tooltip = BAT_intel_2_tp
                    	add_to_variable = { 
                        	var = BAT_zarantia_intel 
                        	value = 0.5
                    	}	
			        	clamp_variable = {
				        	var = BAT_zarantia_intel
				        	min = 0
				       	 	max = 100
			        	}
					}
					1 = { 	
				    	custom_effect_tooltip = BAT_intel_3_tp
                    	add_to_variable = { 
                        	var = BAT_slave_intel 
                        	value = 0.5
                    	}			
			        	clamp_variable = {
				        	var = BAT_slave_intel
				        	min = 0
				       	 	max = 100
			       	 	}
					}
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_zarantia_dead
				    NOT = {
			            has_country_flag = BAT_tobuck_dead
			            has_country_flag = BAT_slave_dead
			        }
				    OR = {
				        has_completed_focus = BAT_flying_arrow_doctrine
						has_completed_focus = BAT_flying_arrow_doctrine_2
					}
				}
				random_list = {
					1 = { 
				    	custom_effect_tooltip = BAT_intel_4_tp
                    	add_to_variable = { 
                        	var = BAT_tobuck_intel 
                        	value = 1
                    	}	
			        	clamp_variable = {
				        	var = BAT_tobuck_intel
				        	min = 0
				       	 	max = 100
			        	}
					}
					1 = { 	
				    	custom_effect_tooltip = BAT_intel_6_tp
                    	add_to_variable = { 
                        	var = BAT_slave_intel 
                        	value = 1
                    	}			
			        	clamp_variable = {
				        	var = BAT_slave_intel
				        	min = 0
				       	 	max = 100
			       	 	}
					}
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_zarantia_dead
				    NOT = {
			            has_country_flag = BAT_tobuck_dead
			            has_country_flag = BAT_slave_dead
			        }
					NOT = {
				        OR = {
				            has_completed_focus = BAT_flying_arrow_doctrine
						    has_completed_focus = BAT_flying_arrow_doctrine_2
					    }
					}
				}
				random_list = {
					1 = { 
				    	custom_effect_tooltip = BAT_intel_1_tp
                    	add_to_variable = { 
                        	var = BAT_tobuck_intel 
                        	value = 0.5
                    	}	
			        	clamp_variable = {
				        	var = BAT_tobuck_intel
				        	min = 0
				       	 	max = 100
			        	}
					}
					1 = { 	
				    	custom_effect_tooltip = BAT_intel_3_tp
                    	add_to_variable = { 
                        	var = BAT_slave_intel 
                        	value = 0.5
                    	}			
			        	clamp_variable = {
				        	var = BAT_slave_intel
				        	min = 0
				       	 	max = 100
			       	 	}
					}
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_tobuck_dead
				    NOT = {
			            has_country_flag = BAT_zarantia_dead
			            has_country_flag = BAT_slave_dead
			        }
				    OR = {
				        has_completed_focus = BAT_flying_arrow_doctrine
						has_completed_focus = BAT_flying_arrow_doctrine_2
					}
				}
				random_list = {
					1 = { 
				    	custom_effect_tooltip = BAT_intel_5_tp
                    	add_to_variable = { 
                        	var = BAT_zarantia_intel 
                        	value = 1
                    	}	
			        	clamp_variable = {
				        	var = BAT_zarantia_intel
				        	min = 0
				       	 	max = 100
			        	}
					}
					1 = { 	
				    	custom_effect_tooltip = BAT_intel_6_tp
                    	add_to_variable = { 
                        	var = BAT_slave_intel 
                        	value = 1
                    	}			
			        	clamp_variable = {
				        	var = BAT_slave_intel
				        	min = 0
				       	 	max = 100
			       	 	}
					}
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_tobuck_dead
				    NOT = {
			            has_country_flag = BAT_zarantia_dead
			            has_country_flag = BAT_slave_dead
			        }
					NOT = {
				        OR = {
				            has_completed_focus = BAT_flying_arrow_doctrine
						    has_completed_focus = BAT_flying_arrow_doctrine_2
					    }
					}
				}
				random_list = {
					1 = { 
				    	custom_effect_tooltip = BAT_intel_2_tp
                    	add_to_variable = { 
                        	var = BAT_zarantia_intel 
                        	value = 0.5
                    	}	
			        	clamp_variable = {
				        	var = BAT_zarantia_intel
				        	min = 0
				       	 	max = 100
			        	}
					}
					1 = { 	
				    	custom_effect_tooltip = BAT_intel_3_tp
                    	add_to_variable = { 
                        	var = BAT_slave_intel 
                        	value = 0.5
                    	}			
			        	clamp_variable = {
				        	var = BAT_slave_intel
				        	min = 0
				       	 	max = 100
			       	 	}
					}
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_slave_dead
				    NOT = {
			            has_country_flag = BAT_zarantia_dead
			            has_country_flag = BAT_tobuck_dead
			        }
				    OR = {
				        has_completed_focus = BAT_flying_arrow_doctrine
						has_completed_focus = BAT_flying_arrow_doctrine_2
					}
				}
				random_list = {
					1 = { 
				    	custom_effect_tooltip = BAT_intel_4_tp
                    	add_to_variable = { 
                        	var = BAT_tobuck_intel 
                        	value = 1
                    	}	
			        	clamp_variable = {
				        	var = BAT_tobuck_intel
				        	min = 0
				       	 	max = 100
			        	}
					}
					1 = { 	
				    	custom_effect_tooltip = BAT_intel_5_tp
                    	add_to_variable = { 
                        	var = BAT_zarantia_intel 
                        	value = 1
                    	}			
			        	clamp_variable = {
				        	var = BAT_zarantia_intel
				        	min = 0
				       	 	max = 100
			       	 	}
					}
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_slave_dead
				    NOT = {
			            has_country_flag = BAT_zarantia_dead
			            has_country_flag = BAT_tobuck_dead
			        }
					NOT = {
				        OR = {
				            has_completed_focus = BAT_flying_arrow_doctrine
						    has_completed_focus = BAT_flying_arrow_doctrine_2
					    }
					}
				}
				random_list = {
					1 = { 
				    	custom_effect_tooltip = BAT_intel_1_tp
                    	add_to_variable = { 
                        	var = BAT_tobuck_intel 
                        	value = 0.5
                    	}	
			        	clamp_variable = {
				        	var = BAT_tobuck_intel
				        	min = 0
				       	 	max = 100
			        	}
					}
					1 = { 	
				    	custom_effect_tooltip = BAT_intel_2_tp
                    	add_to_variable = { 
                        	var = BAT_zarantia_intel 
                        	value = 0.5
                    	}			
			        	clamp_variable = {
				        	var = BAT_zarantia_intel
				        	min = 0
				       	 	max = 100
			       	 	}
					}
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_tobuck_dead
					has_country_flag = BAT_zarantia_dead
				    NOT = {
			            has_country_flag = BAT_slave_dead
			        }
				    OR = {
				        has_completed_focus = BAT_flying_arrow_doctrine
						has_completed_focus = BAT_flying_arrow_doctrine_2
					}
				}
				custom_effect_tooltip = BAT_intel_6_tp
                add_to_variable = { 
                    var = BAT_slave_intel 
                    value = 1
                }			
			    clamp_variable = {
				    var = BAT_slave_intel
				    min = 0
				    max = 100
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_tobuck_dead
					has_country_flag = BAT_zarantia_dead
				    NOT = {
			            has_country_flag = BAT_slave_dead
			        }
					NOT = {
					    OR = {
				        	has_completed_focus = BAT_flying_arrow_doctrine
							has_completed_focus = BAT_flying_arrow_doctrine_2
						}
					}
				}
				custom_effect_tooltip = BAT_intel_3_tp
				add_to_variable = { 
                    var = BAT_slave_intel 
                    value = 0.5
                }			
			    clamp_variable = {
				    var = BAT_slave_intel
				    min = 0
				    max = 100
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_slave_dead
					has_country_flag = BAT_zarantia_dead
				    NOT = {
			            has_country_flag = BAT_tobuck_dead
			        }
				    OR = {
				        has_completed_focus = BAT_flying_arrow_doctrine
						has_completed_focus = BAT_flying_arrow_doctrine_2
					}
				}
				custom_effect_tooltip = BAT_intel_4_tp
                add_to_variable = { 
                    var = BAT_tobuck_intel 
                    value = 1
                }			
			    clamp_variable = {
				    var = BAT_tobuck_intel
				    min = 0
				    max = 100
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_slave_dead
					has_country_flag = BAT_zarantia_dead
				    NOT = {
			            has_country_flag = BAT_tobuck_dead
			        }
					NOT = {
					    OR = {
				        	has_completed_focus = BAT_flying_arrow_doctrine
							has_completed_focus = BAT_flying_arrow_doctrine_2
						}
					}
				}
				custom_effect_tooltip = BAT_intel_1_tp
				add_to_variable = { 
                    var = BAT_tobuck_intel 
                    value = 0.5
                }			
			    clamp_variable = {
				    var = BAT_tobuck_intel
				    min = 0
				    max = 100
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_tobuck_dead
					has_country_flag = BAT_slave_dead
				    NOT = {
			            has_country_flag = BAT_zarantia_dead
			        }
				    OR = {
				        has_completed_focus = BAT_flying_arrow_doctrine
						has_completed_focus = BAT_flying_arrow_doctrine_2
					}
				}
				custom_effect_tooltip = BAT_intel_5_tp
                add_to_variable = { 
                    var = BAT_zarantia_intel 
                    value = 1
                }			
			    clamp_variable = {
				    var = BAT_zarantia_intel
				    min = 0
				    max = 100
				}
			}
			else_if = {
			    limit = {
				    has_country_flag = BAT_tobuck_dead
					has_country_flag = BAT_slave_dead
				    NOT = {
			            has_country_flag = BAT_zarantia_dead
			        }
					NOT = {
					    OR = {
				        	has_completed_focus = BAT_flying_arrow_doctrine
							has_completed_focus = BAT_flying_arrow_doctrine_2
						}
					}
				}
				custom_effect_tooltip = BAT_intel_2_tp
				add_to_variable = { 
                    var = BAT_zarantia_intel 
                    value = 0.5
                }			
			    clamp_variable = {
				    var = BAT_zarantia_intel
				    min = 0
				    max = 100
				}
			}
			if = {
			    limit = {
				    OR = {
				        has_completed_focus = BAT_drop_squads
						has_completed_focus = BAT_drop_squads_2
					}
				}
				save_current_manpower = yes
		   		FROM = {
               	 	add_resistance = -7.5
					add_manpower = -500
            	}
				restore_previous_manpower = yes
			}
			else = {
				save_current_manpower = yes
		   		FROM = {
               	 	add_resistance = -5.0
					add_manpower = -500
            	}
				restore_previous_manpower = yes
			}
			if = {
			    limit = {
				    OR = {
				        has_completed_focus = BAT_ban_collective_punishment
					    has_completed_focus = BAT_ban_collective_punishment_2
					}
				}
				FROM = {
               	 	add_compliance = 2.5
            	}
			}
			calculate_intel_levels = yes
		}
    }
	
	BAT_gather_intel_on_NZLF = {
		icon = eng_trade_unions_support
		available = {
		    hidden_trigger = {
			    command_power > 14
				has_political_power > 9
				has_manpower > 499
			}
		}
		visible = {
			OR = {
			    has_idea = BAT_territorial_resistance_1
				has_idea = BAT_territorial_resistance_2
				has_idea = BAT_territorial_resistance_3
			}
			OR = {
				has_completed_focus = BAT_interbranch_cooperation
				has_completed_focus = BAT_interbranch_cooperation_2
			}
			NOT = {
			    has_country_flag = BAT_tobuck_dead
			}
		}
		
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 9
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_10_mp_500

        days_re_enable = 60
		days_remove = 7

		ai_will_do = {
			base = 100
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_gather_intel_on_NZLF"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -10
				add_manpower = -500
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_gather_intel_on_NZLF"
			if = {
			    limit = {
				    OR = {
				        has_completed_focus = BAT_internment_camps
						has_completed_focus = BAT_internment_camps_2
					}
				}
				custom_effect_tooltip = BAT_gather_intel_on_NZLF_2_tp
				add_to_variable = { 
                	var = BAT_tobuck_intel 
                	value = 5
            	}		
				clamp_variable = {
					var = BAT_tobuck_intel
					min = 0
					max = 100
				}
			}
			else = {
			    custom_effect_tooltip = BAT_gather_intel_on_NZLF_tp
				add_to_variable = { 
                	var = BAT_tobuck_intel 
                	value = 4
            	}		
				clamp_variable = {
					var = BAT_tobuck_intel
					min = 0
					max = 100
				}
			}
			calculate_intel_levels = yes
		}
	}
	
	BAT_gather_intel_on_AZW = {
		icon = eng_trade_unions_support
		available = {
		    hidden_trigger = {
			    command_power > 14
				has_political_power > 9
				has_manpower > 499
			}
		}
		visible = {
			OR = {
			    has_idea = BAT_territorial_resistance_1
				has_idea = BAT_territorial_resistance_2
				has_idea = BAT_territorial_resistance_3
			}
			OR = {
				has_completed_focus = BAT_interbranch_cooperation
				has_completed_focus = BAT_interbranch_cooperation_2
			}
			NOT = {
			    has_country_flag = BAT_zarantia_dead
			}
		}
		
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 9
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_10_mp_500

        days_re_enable = 60
		days_remove = 7

		ai_will_do = {
			base = 100
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_gather_intel_on_AZW"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -10
				add_manpower = -500
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_gather_intel_on_AZW"
			if = {
			    limit = {
				    OR = {
				        has_completed_focus = BAT_internment_camps
						has_completed_focus = BAT_internment_camps_2
					}
				}
				custom_effect_tooltip = BAT_gather_intel_on_AZW_2_tp
				add_to_variable = { 
                	var = BAT_zarantia_intel 
                	value = 5
            	}		
				clamp_variable = {
					var = BAT_zarantia_intel
					min = 0
					max = 100
				}
			}
			else = {
			    custom_effect_tooltip = BAT_gather_intel_on_AZW_tp
				add_to_variable = { 
                	var = BAT_zarantia_intel 
                	value = 4
            	}		
				clamp_variable = {
					var = BAT_zarantia_intel
					min = 0
					max = 100
				}
			}
			calculate_intel_levels = yes
		}
	}
	
	BAT_gather_intel_on_TMS = {
		icon = eng_trade_unions_support
		available = {
		    hidden_trigger = {
			    command_power > 14
				has_political_power > 9
				has_manpower > 499
			}
		}
		visible = {
			OR = {
			    has_idea = BAT_territorial_resistance_1
				has_idea = BAT_territorial_resistance_2
				has_idea = BAT_territorial_resistance_3
			}
			OR = {
				has_completed_focus = BAT_interbranch_cooperation
				has_completed_focus = BAT_interbranch_cooperation_2
			}
			NOT = {
			    has_country_flag = BAT_slave_dead
			}
		}
		
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 9
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_10_mp_500

        days_re_enable = 60
		days_remove = 7

		ai_will_do = {
			base = 100
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_gather_intel_on_TMS"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -10
				add_manpower = -500
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_gather_intel_on_TMS"
			if = {
			    limit = {
				    OR = {
				        has_completed_focus = BAT_internment_camps
						has_completed_focus = BAT_internment_camps_2
					}
				}
				custom_effect_tooltip = BAT_gather_intel_on_TMS_2_tp
				add_to_variable = { 
                	var = BAT_slave_intel 
                	value = 5
            	}		
				clamp_variable = {
					var = BAT_slave_intel
					min = 0
					max = 100
				}
			}
			else = {
			    custom_effect_tooltip = BAT_gather_intel_on_TMS_tp
				add_to_variable = { 
                	var = BAT_slave_intel 
                	value = 4
            	}		
				clamp_variable = {
					var = BAT_slave_intel
					min = 0
					max = 100
				}
			}
			calculate_intel_levels = yes
		}
	}
	BAT_ai_partisans_kill_tobuck = {
		allowed = {
			tag = BAT
		}
		visible = {
			is_ai = yes
			check_variable = { 
				var = BAT_tobuck_intel
				value = 100
				compare = greater_than_or_equals
			}
			NOT = {
				has_country_flag = BAT_tobuck_dead
			}
		}
		fire_only_once = yes
		cost = 0
		ai_will_do = {
			factor = 10000
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_ai_partisans_kill_tobuck"
			clr_country_flag = BAT_tobuck_alive
			set_variable = { BAT_dude_1_status = 2 }
			country_event = bat.93
		}
	}
	BAT_ai_partisans_kill_zarantia = {
		allowed = {
			tag = BAT
		}
		visible = {
			is_ai = yes
			check_variable = { 
				var = BAT_zarantia_intel
				value = 100
				compare = greater_than_or_equals
			}
			NOT = {
				has_country_flag = BAT_zarantia_dead
			}
		}
		fire_only_once = yes
		cost = 0
		ai_will_do = {
			factor = 10000
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_ai_partisans_kill_zarantia"
			clr_country_flag = BAT_zarantia_alive
			set_variable = { BAT_dude_2_status = 2 }
			country_event = bat.94
		}
	}
	BAT_ai_partisans_kill_slave = {
		allowed = {
			tag = BAT
		}
		visible = {
			is_ai = yes
			check_variable = { 
				var = BAT_slave_intel
				value = 100
				compare = greater_than_or_equals
			}
			NOT = {
				has_country_flag = BAT_slave_dead
			}
		}
		fire_only_once = yes
		cost = 0
		ai_will_do = {
			factor = 10000
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_ai_partisans_kill_slave"
			clr_country_flag = BAT_slave_alive
			set_variable = { BAT_dude_3_status = 2 }
			country_event = bat.95
		}
	}
}

BAT_raiding = {
	BAT_prepare_raid = {
		icon = generic_operation
		available = {
			FROM = {
				any_owned_state = {
					is_controlled_by = FROM
					any_neighbor_state = {
						is_fully_controlled_by = ROOT
						set_temp_variable = { var:attacker_state_temp = id }
						has_ROOT_at_least_1_div_in_current_state_scope = yes
					}
					set_temp_variable = { var:defender_state_temp = id }
				}
			}
			NOT = {
				has_country_flag = raid_succeeded
				has_country_flag = raid_failed
				has_country_flag = raid_in_progress
			}
		}

		visible = {
		    OR = {
				has_idea = BAT_slavery
				has_idea = BAT_slavery_2
				has_idea = BAT_slavery_3
			}
			NOT = {
				has_country_flag = preparing_raid
				has_war_with = FROM
				is_subject_of = FROM
			}
			FROM = {
				can_have_border_war_with_ROOT = yes
			}
			OR = {
				NOT = { has_border_war_with = FROM }
				AND = {
					FROM = {
						any_owned_state = {
							is_controlled_by = FROM
							any_neighbor_state = {
								is_fully_controlled_by = ROOT
							}
						}
					}
				}
			}
		}
		target_array = neighbors
		target_trigger = {
			FROM = {
				is_neighbor_of = ROOT
			}
		}
		highlight_states = {
		    highlight_states_trigger = {
				OR = {
					state = FROM.defender_state_vs_@ROOT
					AND = {
						is_owned_and_controlled_by = FROM
						any_neighbor_state = {
							has_ROOT_at_least_1_div_in_current_state_scope = yes
							is_fully_controlled_by = ROOT
						}
					}
				}
			}
		}
		ai_will_do = {
			base = 100
		}
		cost = 25
		fire_only_once = no
		days_re_enable = 90
		days_remove = 30

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_prepare_raid target: [From.GetName]"
			hidden_effect = {
				random_state = {
					limit = {
						is_owned_and_controlled_by = FROM
						any_neighbor_state = {
							has_ROOT_at_least_1_div_in_current_state_scope = yes
							is_fully_controlled_by = ROOT
						}
					}
					save_event_target_as = defender_state
					set_variable = { FROM.defender_state_vs_@ROOT = id }
					set_temp_variable = { defender_state_temp = id }
				}
				random_state = {
					limit = {
						is_fully_controlled_by = ROOT
						has_ROOT_at_least_1_div_in_current_state_scope = yes
						any_neighbor_state = {
							state = var:FROM.defender_state_vs_@ROOT
						}
					}
					save_event_target_as = attacker_state
					set_variable = { FROM.attacker_state_vs_@ROOT = id }
					set_temp_variable = { attacker_state_temp = id }
				}
				set_country_flag = preparing_raid
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove prepare_raid target: [From.GetName]"
			activate_targeted_decision = { target = FROM decision = BAT_initiate_raid }
		}
	}

	BAT_initiate_raid = {
		icon = generic_operation
		allowed = { always = no } #Activated from effect
		available = {
			var:FROM.attacker_state_vs_@ROOT = {
				is_fully_controlled_by = ROOT
			}
			OR = {
				is_ai = yes
				divisions_in_border_state = {
					state = var:FROM.attacker_state_vs_@ROOT
					border_state = var:FROM.defender_state_vs_@ROOT
					size > 0
				}
			}
		}
		highlight_states = {
		    highlight_states_trigger = {
				state = var:FROM.attacker_state_vs_@ROOT
			}
		}
		ai_will_do = {
			base = 100
		}
		cancel_trigger = {
			OR = {
				FROM = {
					can_have_border_war_with_ROOT = no
				}
			}
		}
		fire_only_once = yes #Reactivation handled in effect
		selectable_mission = yes
		days_mission_timeout = 30

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout BAT_initiate_raid"
			hidden_effect = {
				FROM = {
					clear_variable = attacker_state_vs_@ROOT
					clear_variable = defender_state_vs_@ROOT
				}
				clr_country_flag = preparing_raid
				# remove_targeted_decision = { target = FROM decision = BAT_initiate_raid }
				activate_targeted_decision = { target = FROM decision = BAT_prepare_raid }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision initiate_raid"
			effect_tooltip = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = var:FROM.attacker_state_vs_@ROOT
						num_provinces = 4
						on_win = bat.1
						on_lose = bat.3
						on_cancel = bat.2
					}

					defender = {
						state = var:FROM.defender_state_vs_@ROOT
						num_provinces = 4
						on_win = bat.6
						on_lose = bat.4
						on_cancel = bat.5
					}
				}
			}
			hidden_effect = {
				if = {
					limit = {
						FROM = {
							OR = {
								is_ai = no
								AND = {
									has_war = yes
									divisions_in_border_state = {
										border_state = var:FROM.attacker_state_vs_@ROOT
										state = var:FROM.defender_state_vs_@ROOT
										size < 1
									}
								}
							}
						}
					}
					FROM = { country_event = bat.7 }
				}
				else = {
					start_border_war = {
						change_state_after_war = no
						attacker = {
							state = var:FROM.attacker_state_vs_@ROOT
							num_provinces = 4
							on_win = bat.1
							on_lose = bat.3
							on_cancel = bat.2
						}
						defender = {
							state = var:FROM.defender_state_vs_@ROOT
							num_provinces = 4
							on_win = bat.6
							on_lose = bat.4
							on_cancel = bat.5
						}
					}
				}
			}
			hidden_effect = {
				set_country_flag = raid_in_progress
				clr_country_flag = preparing_raid
				# remove_targeted_decision = { target = FROM decision = BAT_initiate_raid }
				activate_targeted_decision = { target = FROM decision = BAT_prepare_raid }
			}
		}
	}

	BAT_test_subject_procurement = {
		icon = generic_research
		available = {
			hidden_trigger = {
				check_variable = {
					BAT_labourers > 14999
				}
			}
			NOT = {
				has_country_flag = BAT_embarking_project
			}
		}
		visible = {
			OR = {
				has_idea = BAT_slavery
				has_idea = BAT_slavery_2
				has_idea = BAT_slavery_3
			}
		}

		custom_cost_trigger = {
			check_variable = {
				BAT_labourers > 14999
			}
		}
		custom_cost_text = decision_cost_15000_labour

		days_remove = BAT_faster_integration_time_2?30

		ai_will_do = {
			base = 0
			modifier = {
				check_variable = { BAT_labourers > 80000 }
				add = 3
			}
			modifier = {
				check_variable = { BAT_labourers > 70000 }
				add = 2
			}
			modifier = {
				check_variable = { BAT_labourers > 60000 }
				add = 1.5
			}
			modifier = {
				check_variable = { BAT_labourers > 50000 }
				add = 1
			}
			modifier = {
				check_variable = { BAT_labourers < 40000 }
				add = -4
			}
			modifier = {
				check_variable = { BAT_labourers < 30000 }
				add = -8
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_test_subject_procurement"
			if = {
				limit = {
					NOT = {
						OR = {
							has_completed_focus = BAT_control_collars
							has_completed_focus = BAT_decent_living_quarters
						}
					}
				}
				add_ideas = BAT_doing_a_project
			}
			hidden_effect = {
				subtract_from_variable = {
					var = BAT_labourers
					value = 15000
				}
				set_country_flag = BAT_embarking_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_test_subject_procurement"
			if = {
				limit = {
					has_idea = BAT_doing_a_project
				}
				remove_ideas = BAT_doing_a_project
			}
			if = {
				limit = {
					has_completed_focus = BAT_free_reign_to_LMRD
				}
				custom_effect_tooltip = BAT_test_subject_1_tp
				add_to_variable = {
					var = BAT_test_subjects
					value = 7500
				}
			}
			else = {
				custom_effect_tooltip = BAT_test_subject_2_tp
				add_to_variable = {
					var = BAT_test_subjects
					value = 5000
				}
			}
			hidden_effect = {
				clr_country_flag = BAT_embarking_project
			}
		}
	}

	BAT_labour_civilian_factory = {
		icon = generic_construction
		available = {
			hidden_trigger = {
				if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 > 1
						}
					}
					has_political_power > 4
				}
				else_if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 = 1
						}
					}
					has_political_power > 9
				}
				else = {
					has_political_power > 14
				}
				if = {
					limit = {
						has_completed_focus = BAT_control_collars
					}
					check_variable = {
						BAT_labourers > 27499
					}
				}
				else_if = {
					limit = {
						has_completed_focus = BAT_improve_working_conditions
					}
					check_variable = {
						BAT_labourers > 19999
					}
				}
				else = {
					check_variable = {
						BAT_labourers > 24999
					}
				}
			}
			NOT = {
				has_country_flag = BAT_embarking_project
			}
		}
		visible = {
			OR = {
				has_idea = BAT_slavery
				has_idea = BAT_slavery_2
				has_idea = BAT_slavery_3
			}
		}

		custom_cost_trigger = {
			if = {
				limit = {
					check_variable = {
						BAT_cost_variable_1 > 1
					}
				}
				has_political_power > 4
			}
			else_if = {
				limit = {
					check_variable = {
						BAT_cost_variable_1 = 1
					}
				}
				has_political_power > 9
			}
			else = {
				has_political_power > 14
			}
			if = {
				limit = {
					has_completed_focus = BAT_control_collars
				}
				check_variable = {
					BAT_labourers > 27499
				}
			}
			else_if = {
				limit = {
					has_completed_focus = BAT_improve_working_conditions
				}
				check_variable = {
					BAT_labourers > 19999
				}
			}
			else = {
				check_variable = {
					BAT_labourers > 24999
				}
			}
		}
		custom_cost_text = decision_cost_25000_labour_pp_15

		days_remove = BAT_faster_integration_time?60

		ai_will_do = {
			base = 0
			modifier = {
				check_variable = { BAT_labourers > 70000 }
				add = 3
			}
			modifier = {
				check_variable = { BAT_labourers > 60000 }
				add = 2
			}
			modifier = {
				check_variable = { BAT_labourers > 50000 }
				add = 1.5
			}
			modifier = {
				check_variable = { BAT_labourers > 40000 }
				add = 1
			}
			modifier = {
				check_variable = { BAT_labourers < 30000 }
				add = -4
			}
			modifier = {
				check_variable = { BAT_labourers < 25000 }
				add = -8
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_labour_civilian_factory"
			if = {
				limit = {
					NOT = {
						OR = {
							has_completed_focus = BAT_control_collars
							has_completed_focus = BAT_decent_living_quarters
						}
					}
				}
				add_ideas = BAT_doing_a_project
			}
			hidden_effect = {
				if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 > 1
						}
					}
					add_political_power = -5
				}
				else_if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 = 1
						}
					}
					add_political_power = -10
				}
				else = {
					add_political_power = -15
				}
				if = {
					limit = {
						has_completed_focus = BAT_control_collars
					}
					subtract_from_variable = {
						var = BAT_labourers
						value = 27500
					}
				}
				else_if = {
					limit = {
						has_completed_focus = BAT_improve_working_conditions
					}
					subtract_from_variable = {
						var = BAT_labourers
						value = 20000
					}
				}
				else = {
					subtract_from_variable = {
						var = BAT_labourers
						value = 25000
					}
				}
				set_country_flag = BAT_embarking_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_labour_civilian_factory"
			one_random_industrial_complex = yes
			if = {
				limit = {
					has_completed_focus = BAT_mandatory_temple_attendence
					NOT = {
						has_completed_focus = BAT_improve_working_conditions
					}
				}
				add_manpower = 6250
			}
			else_if = {
				limit = {
					AND = {
						has_completed_focus = BAT_mandatory_temple_attendence
						has_completed_focus = BAT_improve_working_conditions
					}
				}
				add_manpower = 5000
			}
			if = {
				limit = {
					has_idea = BAT_doing_a_project
				}
				remove_ideas = BAT_doing_a_project
			}
			hidden_effect = {
				clr_country_flag = BAT_embarking_project
			}
		}
	}

	BAT_labour_army_factory = {
		icon = generic_industry
		available = {
			hidden_trigger = {
				if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 > 1
						}
					}
					has_political_power > 4
				}
				else_if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 = 1
						}
					}
					has_political_power > 9
				}
				else = {
					has_political_power > 14
				}
				if = {
					limit = {
						has_completed_focus = BAT_control_collars
					}
					check_variable = {
						BAT_labourers > 27499
					}
				}
				else_if = {
					limit = {
						has_completed_focus = BAT_improve_working_conditions
					}
					check_variable = {
						BAT_labourers > 19999
					}
				}
				else = {
					check_variable = {
						BAT_labourers > 24999
					}
				}
			}
			NOT = {
				has_country_flag = BAT_embarking_project
			}
		}
		visible = {
			OR = {
				has_idea = BAT_slavery
				has_idea = BAT_slavery_2
				has_idea = BAT_slavery_3
			}
		}

		custom_cost_trigger = {
			if = {
				limit = {
					check_variable = {
						BAT_cost_variable_1 > 1
					}
				}
				has_political_power > 4
			}
			else_if = {
				limit = {
					check_variable = {
						BAT_cost_variable_1 = 1
					}
				}
				has_political_power > 9
			}
			else = {
				has_political_power > 14
			}
			if = {
				limit = {
					has_completed_focus = BAT_control_collars
				}
				check_variable = {
					BAT_labourers > 27499
				}
			}
			else_if = {
				limit = {
					has_completed_focus = BAT_improve_working_conditions
				}
				check_variable = {
					BAT_labourers > 19999
				}
			}
			else = {
				check_variable = {
					BAT_labourers > 24999
				}
			}
		}
		custom_cost_text = decision_cost_25000_labour_pp_15

		days_remove = BAT_faster_integration_time?60

		ai_will_do = {
			base = 0
			modifier = {
				check_variable = { BAT_labourers > 70000 }
				add = 3
			}
			modifier = {
				check_variable = { BAT_labourers > 60000 }
				add = 2
			}
			modifier = {
				check_variable = { BAT_labourers > 50000 }
				add = 1.5
			}
			modifier = {
				check_variable = { BAT_labourers > 40000 }
				add = 1
			}
			modifier = {
				check_variable = { BAT_labourers < 30000 }
				add = -4
			}
			modifier = {
				check_variable = { BAT_labourers < 25000 }
				add = -8
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_labour_army_factory"
			if = {
				limit = {
					NOT = {
						OR = {
							has_completed_focus = BAT_control_collars
							has_completed_focus = BAT_decent_living_quarters
						}
					}
				}
				add_ideas = BAT_doing_a_project
			}
			hidden_effect = {
				if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 > 1
						}
					}
					add_political_power = -5
				}
				else_if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 = 1
						}
					}
					add_political_power = -10
				}
				else = {
					add_political_power = -15
				}
				if = {
					limit = {
						has_completed_focus = BAT_control_collars
					}
					subtract_from_variable = {
						var = BAT_labourers
						value = 27500
					}
				}
				else_if = {
					limit = {
						has_completed_focus = BAT_improve_working_conditions
					}
					subtract_from_variable = {
						var = BAT_labourers
						value = 20000
					}
				}
				else = {
					subtract_from_variable = {
						var = BAT_labourers
						value = 25000
					}
				}
				set_country_flag = BAT_embarking_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_labour_army_factory"
			one_random_arms_factory = yes
			if = {
				limit = {
					has_completed_focus = BAT_mandatory_temple_attendence
					NOT = {
						has_completed_focus = BAT_improve_working_conditions
					}
				}
				add_manpower = 6250
			}
			else_if = {
				limit = {
					AND = {
						has_completed_focus = BAT_mandatory_temple_attendence
						has_completed_focus = BAT_improve_working_conditions
					}
				}
				add_manpower = 5000
			}
			if = {
				limit = {
					has_idea = BAT_doing_a_project
				}
				remove_ideas = BAT_doing_a_project
			}
			hidden_effect = {
				clr_country_flag = BAT_embarking_project
			}
		}
	}
	
	BAT_labour_dockyard = {
		icon = generic_naval
		available = {
			hidden_trigger = {
				if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 > 1
						}
					}
					has_political_power > 4
				}
				else_if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 = 1
						}
					}
					has_political_power > 9
				}
				else = {
					has_political_power > 14
				}
				if = {
					limit = {
						has_completed_focus = BAT_control_collars
					}
					check_variable = {
						BAT_labourers > 27499
					}
				}
				else_if = {
					limit = {
						has_completed_focus = BAT_improve_working_conditions
					}
					check_variable = {
						BAT_labourers > 19999
					}
				}
				else = {
					check_variable = {
						BAT_labourers > 24999
					}
				}
			}
			NOT = {
				has_country_flag = BAT_embarking_project
			}
		}
		visible = {
			OR = {
				has_idea = BAT_slavery
				has_idea = BAT_slavery_2
				has_idea = BAT_slavery_3
			}
		}

		custom_cost_trigger = {
			if = {
				limit = {
					check_variable = {
						BAT_cost_variable_1 > 1
					}
				}
				has_political_power > 4
			}
			else_if = {
				limit = {
					check_variable = {
						BAT_cost_variable_1 = 1
					}
				}
				has_political_power > 9
			}
			else = {
				has_political_power > 14
			}
			if = {
				limit = {
					has_completed_focus = BAT_control_collars
				}
				check_variable = {
					BAT_labourers > 27499
				}
			}
			else_if = {
				limit = {
					has_completed_focus = BAT_improve_working_conditions
				}
				check_variable = {
					BAT_labourers > 19999
				}
			}
			else = {
				check_variable = {
					BAT_labourers > 24999
				}
			}
		}
		custom_cost_text = decision_cost_25000_labour_pp_15

		days_remove = BAT_faster_integration_time?60

		ai_will_do = {
			base = 0
			modifier = {
				check_variable = { BAT_labourers > 70000 }
				add = 3
			}
			modifier = {
				check_variable = { BAT_labourers > 60000 }
				add = 2
			}
			modifier = {
				check_variable = { BAT_labourers > 50000 }
				add = 1.5
			}
			modifier = {
				check_variable = { BAT_labourers > 40000 }
				add = 1
			}
			modifier = {
				check_variable = { BAT_labourers < 30000 }
				add = -4
			}
			modifier = {
				check_variable = { BAT_labourers < 25000 }
				add = -8
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_labour_dockyard"
			if = {
				limit = {
					NOT = {
						OR = {
							has_completed_focus = BAT_control_collars
							has_completed_focus = BAT_decent_living_quarters
						}
					}
				}
				add_ideas = BAT_doing_a_project
			}
			hidden_effect = {
				if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 > 1
						}
					}
					add_political_power = -5
				}
				else_if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 = 1
						}
					}
					add_political_power = -10
				}
				else = {
					add_political_power = -15
				}
				if = {
					limit = {
						has_completed_focus = BAT_control_collars
					}
					subtract_from_variable = {
						var = BAT_labourers
						value = 27500
					}
				}
				else_if = {
					limit = {
						has_completed_focus = BAT_improve_working_conditions
					}
					subtract_from_variable = {
						var = BAT_labourers
						value = 20000
					}
				}
				else = {
					subtract_from_variable = {
						var = BAT_labourers
						value = 25000
					}
				}
				set_country_flag = BAT_embarking_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_labour_army_factory"
			one_random_dockyard = yes
			if = {
				limit = {
					has_completed_focus = BAT_mandatory_temple_attendence
					NOT = {
						has_completed_focus = BAT_improve_working_conditions
					}
				}
				add_manpower = 6250
			}
			else_if = {
				limit = {
					AND = {
						has_completed_focus = BAT_mandatory_temple_attendence
						has_completed_focus = BAT_improve_working_conditions
					}
				}
				add_manpower = 5000
			}
			if = {
				limit = {
					has_idea = BAT_doing_a_project
				}
				remove_ideas = BAT_doing_a_project
			}
			hidden_effect = {
				clr_country_flag = BAT_embarking_project
			}
		}
	}

	BAT_increased_work_quotas = {
		icon = generic_decision
		available = {
			hidden_trigger = {
				if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 > 1
						}
					}
					has_political_power > 4
				}
				else_if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 = 1
						}
					}
					has_political_power > 9
				}
				else = {
					has_political_power > 14
				}
				if = {
					limit = {
						has_completed_focus = BAT_control_collars
					}
					check_variable = {
						BAT_labourers > 27499
					}
				}
				else_if = {
					limit = {
						has_completed_focus = BAT_improve_working_conditions
					}
					check_variable = {
						BAT_labourers > 19999
					}
				}
				else = {
					check_variable = {
						BAT_labourers > 24999
					}
				}
			}
			NOT = {
				has_country_flag = BAT_embarking_project
			}
		}
		visible = {
			OR = {
				has_idea = BAT_slavery
				has_idea = BAT_slavery_2
				has_idea = BAT_slavery_3
			}
		}

		custom_cost_trigger = {
			if = {
				limit = {
					check_variable = {
						BAT_cost_variable_1 > 1
					}
				}
				has_political_power > 4
			}
			else_if = {
				limit = {
					check_variable = {
						BAT_cost_variable_1 = 1
					}
				}
				has_political_power > 9
			}
			else = {
				has_political_power > 14
			}
			if = {
				limit = {
					has_completed_focus = BAT_control_collars
				}
				check_variable = {
					BAT_labourers > 27499
				}
			}
			else_if = {
				limit = {
					has_completed_focus = BAT_improve_working_conditions
				}
				check_variable = {
					BAT_labourers > 19999
				}
			}
			else = {
				check_variable = {
					BAT_labourers > 24999
				}
			}
		}
		custom_cost_text = decision_cost_25000_labour_pp_15

		days_remove = BAT_faster_integration_time?60

		ai_will_do = {
			base = 0
			modifier = {
				check_variable = { BAT_labourers > 70000 }
				add = 3
			}
			modifier = {
				check_variable = { BAT_labourers > 60000 }
				add = 2
			}
			modifier = {
				check_variable = { BAT_labourers > 50000 }
				add = 1.5
			}
			modifier = {
				check_variable = { BAT_labourers > 40000 }
				add = 1
			}
			modifier = {
				check_variable = { BAT_labourers < 30000 }
				add = -4
			}
			modifier = {
				check_variable = { BAT_labourers < 25000 }
				add = -8
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAK_increased_work_quotas"
			if = {
				limit = {
					NOT = {
						OR = {
							has_completed_focus = BAT_control_collars
							has_completed_focus = BAT_decent_living_quarters
						}
					}
				}
				add_ideas = BAT_doing_a_project
			}
			hidden_effect = {
				if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 > 1
						}
					}
					add_political_power = -5
				}
				else_if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 = 1
						}
					}
					add_political_power = -10
				}
				else = {
					add_political_power = -15
				}
				if = {
					limit = {
						has_completed_focus = BAT_control_collars
					}
					subtract_from_variable = {
						var = BAT_labourers
						value = 27500
					}
				}
				else_if = {
					limit = {
						has_completed_focus = BAT_improve_working_conditions
					}
					subtract_from_variable = {
						var = BAT_labourers
						value = 20000
					}
				}
				else = {
					subtract_from_variable = {
						var = BAT_labourers
						value = 25000
					}
				}
				set_country_flag = BAT_embarking_project
			}
		}
		modifier = {
			production_speed_buildings_factor = 0.10
			local_resources_factor = 0.10
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_labour_army_factory"
			random_owned_controlled_state = {
				limit = {
					is_core_of = ROOT
				}
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = infrastructure
					level = 1
					instant_build = yes
				}
			}
			if = {
				limit = {
					has_completed_focus = BAT_mandatory_temple_attendence
					NOT = {
						has_completed_focus = BAT_improve_working_conditions
					}
				}
				add_manpower = 6250
			}
			else_if = {
				limit = {
					AND = {
						has_completed_focus = BAT_mandatory_temple_attendence
						has_completed_focus = BAT_improve_working_conditions
					}
				}
				add_manpower = 5000
			}
			if = {
				limit = {
					has_idea = BAT_doing_a_project
				}
				remove_ideas = BAT_doing_a_project
			}
			hidden_effect = {
				clr_country_flag = BAT_embarking_project
			}
		}
	}

	BAT_mass_recruitment = {
		icon = rifles
		available = {
			hidden_trigger = {
				if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 > 1
						}
					}
					has_political_power > 4
				}
				else_if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 = 1
						}
					}
					has_political_power > 9
				}
				else = {
					has_political_power > 14
				}
				if = {
					limit = {
						has_completed_focus = BAT_control_collars
					}
					check_variable = {
						BAT_labourers > 22499
					}
				}
				else_if = {
					limit = {
						has_completed_focus = BAT_improve_working_conditions
					}
					check_variable = {
						BAT_labourers > 14999
					}
				}
				else = {
					check_variable = {
						BAT_labourers > 19999
					}
				}
			}
			NOT = {
				has_country_flag = BAT_embarking_project
			}
		}
		visible = {
			OR = {
				has_idea = BAT_slavery
				has_idea = BAT_slavery_2
				has_idea = BAT_slavery_3
			}
			has_completed_focus = BAT_service_for_freedom
		}

		custom_cost_trigger = {
				if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 > 1
						}
					}
					has_political_power > 4
				}
				else_if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 = 1
						}
					}
					has_political_power > 9
				}
				else = {
					has_political_power > 14
				}
			if = {
				limit = {
					has_completed_focus = BAT_control_collars
				}
				check_variable = {
					BAT_labourers > 22499
				}
			}
			else_if = {
				limit = {
					has_completed_focus = BAT_improve_working_conditions
				}
				check_variable = {
					BAT_labourers > 14999
				}
			}
			else = {
				check_variable = {
					BAT_labourers > 19999
				}
			}
		}
		custom_cost_text = decision_cost_20000_labour_pp_15

		days_remove = BAT_faster_integration_time_2?30

		ai_will_do = {
			base = 0
			modifier = {
				check_variable = { BAT_labourers > 70000 }
				add = 3
			}
			modifier = {
				check_variable = { BAT_labourers > 60000 }
				add = 2
			}
			modifier = {
				check_variable = { BAT_labourers > 50000 }
				add = 1.5
			}
			modifier = {
				check_variable = { BAT_labourers > 40000 }
				add = 1
			}
			modifier = {
				check_variable = { BAT_labourers < 30000 }
				add = -4
			}
			modifier = {
				check_variable = { BAT_labourers < 25000 }
				add = -8
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAK_increased_work_quotas"
			hidden_effect = {
				if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 > 1
						}
					}
					add_political_power = -5
				}
				else_if = {
					limit = {
						check_variable = {
							BAT_cost_variable_1 = 1
						}
					}
					add_political_power = -10
				}
				else = {
					add_political_power = -15
				}
				if = {
					limit = {
						has_completed_focus = BAT_control_collars
					}
					subtract_from_variable = {
						var = BAT_labourers
						value = 22500
					}
				}
				else_if = {
					limit = {
						has_completed_focus = BAT_improve_working_conditions
					}
					subtract_from_variable = {
						var = BAT_labourers
						value = 15000
					}
				}
				else = {
					subtract_from_variable = {
						var = BAT_labourers
						value = 20000
					}
				}
				set_country_flag = BAT_embarking_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_labour_army_factory"
			add_manpower = 15000
			add_popularity = {
				ideology = neutrality
				popularity = 0.01
			}
			hidden_effect = {
				clr_country_flag = BAT_embarking_project
			}
		}
	}
	
    BAT_import_labourers = {
		icon = infiltrate_state
		available = {
		    num_of_civilian_factories > 1
		}
		visible = {
			OR = {
				has_idea = BAT_slavery
				has_idea = BAT_slavery_2
				has_idea = BAT_slavery_3
			}
			has_completed_focus = BAT_use_our_connections
		}
		modifier = {
			civilian_factory_use = 2
			political_power_factor = -0.05
		}

		cost = 30
        days_re_enable = 120
		days_remove = 15

		ai_will_do = {
			base = 0
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_import_labourers"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_import_labourers"
			custom_effect_tooltip = BAT_import_labourers_tp
			add_popularity = {
				ideology = fascism
				popularity = 0.01
			}
			add_to_variable = { 
			   	var = BAT_labourers 
			   	value = 10000 
			}
		}
	}
	
	BAT_importing_luxury_goods = {
		icon = ger_mefo_bills
		available = {
		    num_of_civilian_factories > 1
		}
		visible = {
			OR = {
				has_idea = BAT_slavery
				has_idea = BAT_slavery_2
				has_idea = BAT_slavery_3
			}
			has_completed_focus = BAT_a_life_of_luxury
		}
		modifier = {
			civilian_factory_use = 2
			political_power_factor = -0.05
		}

		cost = 20
        days_re_enable = 60
		days_remove = 15

		ai_will_do = {
			base = 1
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_importing_luxury_goods"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_importing_luxury_goods"
			add_stability = 0.04
			add_popularity = {
				ideology = neutrality
				popularity = 0.01
			}
		}
	}
}

BAT_economic_investment = { #Thanks Jaspy/I have no clue what I am doing
    BAT_economic_investment_in_industrial_sector = { ## build n+3 factories, starting from 3 factories, for constant reward of 1 off map factory ##
		icon = ger_mefo_bills
		visible = {
			has_completed_focus = BAT_the_new_economic_policy
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = MAN_economic_investment_cost_tooltip
				OR = {
					check_variable = { num_of_factories > BAT_economic_investment_variable_factory_number }	
					check_variable = { num_of_factories = BAT_economic_investment_variable_factory_number }
				}
			}
			custom_trigger_tooltip = {
				tooltip = MAN_economic_investment_in_industrial_sector_up_the_ante_decision_not_ongoing_tt
				NOT = { has_country_flag = BAT_economic_investment_in_industrial_sector_up_the_ante_decision_ongoing }
			}
		}
		
		cost = 75
		days_remove = 150
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_economic_investment"
			set_country_flag = BAT_economic_investment_in_industrial_sector_decision_ongoing 
			add_to_variable = { var = BAT_economic_investment_variable_factory_number value = BAT_economic_investment_variable_factory_number_common_difference }
			add_to_variable = { var = BAT_economic_investment_variable_factory_number_variable_for_display value = BAT_economic_investment_variable_factory_number_common_difference }
			add_to_variable = { var = BAT_economic_investment_variable_factory_number_stages_variable value = 1 }
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_economic_investment_in_industrial_sector"
			clr_country_flag = BAT_economic_investment_in_industrial_sector_decision_ongoing
			add_offsite_building = { type = industrial_complex level = BAT_economic_investment_variable_offmap_factory_number }
		}
		ai_will_do = {
			factor = 10
		}
	}
	
	BAT_economic_investment_in_industrial_sector_up_the_ante = {
		icon = ger_mefo_bills
		visible = {
			has_completed_focus = BAT_the_new_economic_policy
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = MAN_economic_investment_in_industrial_sector_decision_not_ongoing_tt
				NOT = { has_country_flag = BAT_economic_investment_in_industrial_sector_decision_ongoing }
			}
		}

		cost = 50
		days_remove = 30
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_economic_investment_in_industrial_sector_up_the_ante"
			set_country_flag = BAT_economic_investment_in_industrial_sector_up_the_ante_decision_ongoing 
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_economic_investment_in_industrial_sector_up_the_ante"
			clr_country_flag = BAT_economic_investment_in_industrial_sector_up_the_ante_decision_ongoing
			custom_effect_tooltip = MAN_economic_investment_in_industrial_sector_result_tt
			add_to_variable = { var = BAT_economic_investment_variable_factory_number_common_difference value = 3 }
			add_to_variable = { var = BAT_economic_investment_variable_offmap_factory_number value = 1 }
			add_to_variable = { var = BAT_economic_investment_variable_factory_number_common_difference_for_display value = 3 }
			add_to_variable = { var = BAT_economic_investment_variable_offmap_factory_number_for_display value = 1 }
			set_variable = { BAT_economic_investment_variable_factory_number_stages_variable = 0 }
			set_temp_variable = { BAT_economic_investment_variable_factory_number_TEMP = num_of_factories }
			add_to_temp_variable = { BAT_economic_investment_variable_factory_number_TEMP = BAT_economic_investment_variable_factory_number_common_difference }
			set_variable = { BAT_economic_investment_variable_factory_number = BAT_economic_investment_variable_factory_number_TEMP }
			set_temp_variable = { BAT_economic_investment_variable_factory_number_variable_for_display_TEMP = BAT_economic_investment_variable_factory_number }
			subtract_from_temp_variable = { BAT_economic_investment_variable_factory_number_variable_for_display_TEMP = num_of_factories }
			set_variable = { BAT_economic_investment_variable_factory_number_variable_for_display = BAT_economic_investment_variable_factory_number_variable_for_display_TEMP }
			set_variable = { BAT_economic_investment_variable_factory_number_variable_original = num_of_factories }
		}
		ai_will_do = {
			factor = 10
		}
	}
}

BAT_LMRD = {
    BAT_stimpaks_1 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 0
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
		}
		modifier = {
			civilian_factory_use = 1
			political_power_factor = -0.05
			research_speed_factor = -0.05
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 7499
			}
		}
		custom_cost_text = decision_cost_7500_test_subject
	
		days_remove = 90
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_stimpaks_1"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 7500
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_stimpaks_1"
		    country_event = {
				id = bat.32
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_stimpaks_1_done
			}
		}
	}
	
	BAT_horrigan_1 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 0
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
		}
		modifier = {
			civilian_factory_use = 1
			political_power_factor = -0.05
			research_speed_factor = -0.05
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 7499
			}
		}
		custom_cost_text = decision_cost_7500_test_subject
	
		days_remove = 90
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_horrigan_1"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 7500
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_horrigan_1"
		    country_event = {
				id = bat.33
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_horrigan_1_done
			}
		}
	}
	
	BAT_mkultra_1 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 0
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
			always = no #PDX broke mechanics so I'm disabling this project chain until it is fixed
		}
		modifier = {
			civilian_factory_use = 1
			political_power_factor = -0.05
			research_speed_factor = -0.05
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 7499
			}
		}
		custom_cost_text = decision_cost_7500_test_subject
	
		days_remove = 90
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_mkultra_1"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 7500
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_mkultra_1"
		    country_event = {
				id = bat.34
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_mkultra_1_done
			}
		}
	}
	
	BAT_ubercharge_1 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 0
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
		}
		modifier = {
			civilian_factory_use = 1
			political_power_factor = -0.05
			research_speed_factor = -0.05
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 7499
			}
		}
		custom_cost_text = decision_cost_7500_test_subject
	
		days_remove = 90
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_ubercharge_1"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 7500
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_ubercharge_1"
		    country_event = {
				id = bat.35
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_ubercharge_1_done
			}
		}
	}
	
	BAT_deathclaw_1 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 0
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
		}
		modifier = {
			civilian_factory_use = 1
			political_power_factor = -0.05
			research_speed_factor = -0.05
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 7499
			}
		}
		custom_cost_text = decision_cost_7500_test_subject
	
		days_remove = 90
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_deathclaw_1"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 7500
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_deathclaw_1"
		    country_event = {
				id = bat.36
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_deathclaw_1_done
			}
		}
	}
	
	BAT_stimpaks_2 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 1
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
			has_country_flag = BAT_stimpaks_1_done
		}
		modifier = {
			civilian_factory_use = 2
			political_power_factor = -0.05
			research_speed_factor = -0.075
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 9999
			}
		}
		custom_cost_text = decision_cost_10000_test_subject
	
		days_remove = 120
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_stimpaks_2"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 10000
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_stimpaks_2"
		    country_event = {
				id = bat.37
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_stimpaks_2_done
			}
		}
	}
	
	BAT_horrigan_2 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 1
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
			has_country_flag = BAT_horrigan_1_done
		}
		modifier = {
			civilian_factory_use = 2
			political_power_factor = -0.05
			research_speed_factor = -0.075
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 9999
			}
		}
		custom_cost_text = decision_cost_10000_test_subject
	
		days_remove = 120
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_horrigan_2"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 10000
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_horrigan_2"
		    country_event = {
				id = bat.38
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_horrigan_2_done
			}
		}
	}
	
	BAT_mkultra_2 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 1
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
			has_country_flag = BAT_mkultra_1_done
		}
		modifier = {
			civilian_factory_use = 2
			political_power_factor = -0.05
			research_speed_factor = -0.075
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 9999
			}
		}
		custom_cost_text = decision_cost_10000_test_subject
	
		days_remove = 120
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_mkultra_2"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 10000
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_mkultra_2"
		    country_event = {
				id = bat.39
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_mkultra_2_done
			}
		}
	}
	
	BAT_ubercharge_2 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 1
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
			has_country_flag = BAT_ubercharge_1_done
		}
		modifier = {
			civilian_factory_use = 2
			political_power_factor = -0.05
			research_speed_factor = -0.075
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 9999
			}
		}
		custom_cost_text = decision_cost_10000_test_subject
	
		days_remove = 120
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_ubercharge_2"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 10000
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_ubercharge_2"
		    country_event = {
				id = bat.40
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_ubercharge_2_done
			}
		}
	}
	
	BAT_deathclaw_2 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 1
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
			has_country_flag = BAT_deathclaw_1_done
		}
		modifier = {
			civilian_factory_use = 2
			political_power_factor = -0.05
			research_speed_factor = -0.075
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 9999
			}
		}
		custom_cost_text = decision_cost_10000_test_subject
	
		days_remove = 120
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_deathclaw_2"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 10000
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_deathclaw_2"
		    country_event = {
				id = bat.41
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_deathclaw_2_done
			}
		}
	}
	
	BAT_stimpaks_3 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 1
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
			has_country_flag = BAT_stimpaks_2_done
		}
		modifier = {
			civilian_factory_use = 3
			political_power_factor = -0.05
			research_speed_factor = -0.10
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 12499
			}
		}
		custom_cost_text = decision_cost_12500_test_subject
	
		days_remove = 150
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_stimpaks_3"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 12500
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_stimpaks_3"
		    country_event = {
				id = bat.42
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_stimpaks_3_done
			}
		}
	}
	
	BAT_horrigan_3 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 2
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
			has_country_flag = BAT_horrigan_2_done
		}
		modifier = {
			civilian_factory_use = 3
			political_power_factor = -0.05
			research_speed_factor = -0.10
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 12499
			}
		}
		custom_cost_text = decision_cost_12500_test_subject
	
		days_remove = 150
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_horrigan_3"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 12500
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_horrigan_3"
		    country_event = {
				id = bat.43
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_horrigan_3_done
			}
		}
	}
	
	BAT_mkultra_3 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 2
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
			has_country_flag = BAT_mkultra_2_done
		}
		modifier = {
			civilian_factory_use = 3
			political_power_factor = -0.05
			research_speed_factor = -0.10
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 12499
			}
		}
		custom_cost_text = decision_cost_12500_test_subject
	
		days_remove = 150
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_mkultra_3"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 12500
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_mkultra_3"
		    country_event = {
				id = bat.44
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_mkultra_3_done
			}
		}
	}
	
	BAT_ubercharge_3 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 2
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
			has_country_flag = BAT_ubercharge_2_done
		}
		modifier = {
			civilian_factory_use = 3
			political_power_factor = -0.05
			research_speed_factor = -0.10
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 12499
			}
		}
		custom_cost_text = decision_cost_12500_test_subject
	
		days_remove = 150
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_ubercharge_3"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 12500
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_ubercharge_3"
		    country_event = {
				id = bat.45
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_ubercharge_3_done
			}
		}
	}
	
	BAT_deathclaw_3 = {
	    icon = generic_research
		available = {
		    num_of_civilian_factories > 2
			NOT = {
				has_country_flag = BAT_doing_a_LMRD_project
			}
		}
		visible = {
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
			has_country_flag = BAT_deathclaw_2_done
		}
		modifier = {
			civilian_factory_use = 3
			political_power_factor = -0.05
			research_speed_factor = -0.10
		}
		
		custom_cost_trigger = {
			check_variable = {
				BAT_test_subjects > 12499
			}
		}
		custom_cost_text = decision_cost_12500_test_subject
	
		days_remove = 150
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_deathclaw_3"
			hidden_effect = {
			    subtract_from_variable = {
					var = BAT_test_subjects
					value = 12500
				}
				set_country_flag = BAT_doing_a_LMRD_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_deathclaw_3"
		    country_event = {
				id = bat.46
			}
			hidden_effect = {
				clr_country_flag = BAT_doing_a_LMRD_project
				set_country_flag = BAT_deathclaw_3_done
			}
		}
	}
	
	BAT_import_test_subjects = {
		icon = hol_draw_up_staff_plans
		available = {
		    num_of_civilian_factories > 1
		}
		visible = {
		    has_completed_focus = BAT_fill_the_gaps_with_the_LMRD
			NOT = {
			    AND = {
				    has_country_flag = BAT_stimpaks_3_done
					has_country_flag = BAT_horrigan_3_done
				    has_country_flag = BAT_mkultra_3_done
				    has_country_flag = BAT_ubercharge_3_done
				    has_country_flag = BAT_deathclaw_3_done
				}
			}
			NOT = {
			    has_country_flag = BAT_LMRD_disbanded
			}
		}
		modifier = {
			civilian_factory_use = 2
			political_power_factor = -0.05
		}

		cost = 25
        days_re_enable = 45
		days_remove = 15

		ai_will_do = {
			base = 10
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_import_test_subjects"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_import_test_subjects"
			custom_effect_tooltip = BAT_import_test_subjects_tp
			add_to_variable = { 
			   	var = BAT_test_subjects 
			   	value = 3000 
			}
		}
	}
}

BAT_special_projects = {
    BAT_AT_rifle_research_1 = {
	    icon = ger_military_buildup
		available = {
			NOT = {
				has_country_flag = BAT_doing_special_project
			}
		}
		visible = {
			has_tech = anti_tank_rifle_company_tech
			date > 1008.1.1
		}
		modifier = {
			civilian_factory_use = 3
			political_power_factor = -0.05
			research_speed_factor = -0.10
		}
		
	    cost = 25
		days_remove = 120
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_AT_rifle_research_1"
			hidden_effect = {
				set_country_flag = BAT_doing_special_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_AT_rifle_research_1"
		    set_technology = {
				BAT_Anti_Tank_Rifle_1 = 1
				popup = no
			}
			custom_effect_tooltip = BAT_AT_rifle_update_tp
			custom_effect_tooltip = BAT_next_rifle_1_tp
			hidden_effect = {
				clr_country_flag = BAT_doing_special_project
			}
		}
	}
	
	BAT_AT_rifle_research_2 = {
	    icon = ger_military_buildup
		available = {
			NOT = {
				has_country_flag = BAT_doing_special_project
			}
		}
		visible = {
			has_tech = BAT_Anti_Tank_Rifle_1
			date > 1009.1.1
		}
		modifier = {
			civilian_factory_use = 3
			political_power_factor = -0.05
			research_speed_factor = -0.10
		}
		
	    cost = 25
		days_remove = 120
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_AT_rifle_research_2"
			hidden_effect = {
				set_country_flag = BAT_doing_special_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_AT_rifle_research_2"
		    set_technology = {
				BAT_Anti_Tank_Rifle_2 = 1
				popup = no
			}
			custom_effect_tooltip = BAT_AT_rifle_update_tp
			custom_effect_tooltip = BAT_next_rifle_2_tp
			hidden_effect = {
				clr_country_flag = BAT_doing_special_project
			}
		}
	}
	
	BAT_AT_rifle_research_3 = {
	    icon = ger_military_buildup
		available = {
			NOT = {
				has_country_flag = BAT_doing_special_project
			}
		}
		visible = {
			has_tech = BAT_Anti_Tank_Rifle_2
			date > 1010.1.1
		}
		modifier = {
			civilian_factory_use = 3
			political_power_factor = -0.05
			research_speed_factor = -0.10
		}
		
	    cost = 25
		days_remove = 120
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_AT_rifle_research_3"
			hidden_effect = {
				set_country_flag = BAT_doing_special_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_AT_rifle_research_3"
		    set_technology = {
				BAT_Anti_Tank_Rifle_3 = 1
				popup = no
			}
			custom_effect_tooltip = BAT_AT_rifle_update_tp
			custom_effect_tooltip = BAT_next_rifle_3_tp
			hidden_effect = {
				clr_country_flag = BAT_doing_special_project
			}
		}
	}
	
	BAT_AT_rifle_research_4 = {
	    icon = ger_military_buildup
		available = {
			NOT = {
				has_country_flag = BAT_doing_special_project
			}
		}
		visible = {
			has_tech = BAT_Anti_Tank_Rifle_3
			date > 1011.1.1
		}
		modifier = {
			civilian_factory_use = 3
			political_power_factor = -0.05
			research_speed_factor = -0.10
		}
		
	    cost = 25
		days_remove = 120
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_AT_rifle_research_4"
			hidden_effect = {
				set_country_flag = BAT_doing_special_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_AT_rifle_research_4"
		    set_technology = {
				BAT_Anti_Tank_Rifle_4 = 1
				popup = no
			}
			custom_effect_tooltip = BAT_AT_rifle_update_tp
			custom_effect_tooltip = BAT_next_rifle_4_tp
			hidden_effect = {
				clr_country_flag = BAT_doing_special_project
			}
		}
	}
	
	BAT_AT_rifle_research_5 = {
	    icon = ger_military_buildup
		available = {
			NOT = {
				has_country_flag = BAT_doing_special_project
			}
		}
		visible = {
			has_tech = BAT_Anti_Tank_Rifle_4
			date > 1012.1.1
		}
		modifier = {
			civilian_factory_use = 3
			political_power_factor = -0.05
			research_speed_factor = -0.10
		}
		
	    cost = 25
		days_remove = 120
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_AT_rifle_research_5"
			hidden_effect = {
				set_country_flag = BAT_doing_special_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_AT_rifle_research_5"
		    set_technology = {
				BAT_Anti_Tank_Rifle_5 = 1
				popup = no
			}
			custom_effect_tooltip = BAT_AT_rifle_update_tp
			custom_effect_tooltip = BAT_next_rifle_5_tp
			hidden_effect = {
				clr_country_flag = BAT_doing_special_project
			}
		}
	}
	
	BAT_AT_rifle_research_6 = {
	    icon = ger_military_buildup
		available = {
			NOT = {
				has_country_flag = BAT_doing_special_project
			}
		}
		visible = {
			has_tech = BAT_Anti_Tank_Rifle_5
			date > 1013.1.1
		}
		modifier = {
			civilian_factory_use = 3
			political_power_factor = -0.05
			research_speed_factor = -0.10
		}
		
	    cost = 25
		days_remove = 120
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_AT_rifle_research_6"
			hidden_effect = {
				set_country_flag = BAT_doing_special_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_AT_rifle_research_6"
		    set_technology = {
				BAT_Anti_Tank_Rifle_6 = 1
				popup = no
			}
			custom_effect_tooltip = BAT_AT_rifle_update_tp
			custom_effect_tooltip = BAT_next_rifle_6_tp
			hidden_effect = {
				clr_country_flag = BAT_doing_special_project
			}
		}
	}
	
	BAT_AT_rifle_research_7 = {
	    icon = ger_military_buildup
		available = {
			NOT = {
				has_country_flag = BAT_doing_special_project
			}
		}
		visible = {
			has_tech = BAT_Anti_Tank_Rifle_6
			date > 1013.1.1
		}
		modifier = {
			civilian_factory_use = 3
			political_power_factor = -0.05
			research_speed_factor = -0.10
		}
		
	    cost = 25
		days_remove = 120
		fire_only_once = yes
		
		ai_will_do = {
			factor = 100
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_AT_rifle_research_7"
			hidden_effect = {
				set_country_flag = BAT_doing_special_project
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_AT_rifle_research_7"
		    set_technology = {
				BAT_Anti_Tank_Rifle_7 = 1
				popup = no
			}
			custom_effect_tooltip = BAT_AT_rifle_update_tp
			hidden_effect = {
				clr_country_flag = BAT_doing_special_project
			}
		}
	}
}

BAT_opium_production = {
	# the  * opium *  variable is how much available opium you have
	# * opium_factories * variable is how many factories from opium you have (opium/3 rounded down)
	# modifiers: 
	#     BAT_opium_production_bushels (country and state) - value
	#     BAT_opium_production_factor (country) - %
	BAT_opium_harvest = {
		days_mission_timeout = 120
		icon = unknown
		is_good = yes
		allowed = {
			always = no
		}
		available = {
			NOT = { has_variable = opium_plantations^0 }
			set_temp_variable = {
				predicted_opium_multiplier = 1
			}
			add_to_temp_variable = {
				predicted_opium_multiplier = modifier@BAT_opium_production_factor
			}
			multiply_temp_variable = {
				predicted_opium = predicted_opium_multiplier
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout BAT_opium_harvest"
			custom_effect_tooltip = BAT_opium_harvest_tp
			BAT_get_opium = yes
		}
	}
	
	BAT_build_plantation = {
		#on_map_mode = map_only
		state_target = yes
		target_array = core_states
		target_trigger = {
			FROM = {
				is_core_of = ROOT
				is_owned_and_controlled_by = ROOT
			}
		}
		available = {
			num_of_civilian_factories_available_for_projects > 2
		}
		icon = hol_draw_up_staff_plans
		days_remove = 60
		modifier = {
			civilian_factory_use = 3
		}
		visible = {
			FROM = {
				is_core_of = ROOT
				is_owned_and_controlled_by = ROOT
				NOT = {
					has_dynamic_modifier = {
						modifier = BAT_opium_plantation_mod
					}
				}
			}
		}
		target_root_trigger = {
			has_completed_focus = BAT_the_poppy_fields
			if = {
				limit = {
					is_ai = yes
				}
				NOT = { has_country_flag = BAT_building_plantation }
			}
		}
		cancel_if_not_visible = yes
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_build_plantation target: [From.GetName]"
			set_country_flag = BAT_building_plantation
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel BAT_build_plantation target: [From.GetName]"
			clr_country_flag = BAT_building_plantation
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_build_plantation target: [From.GetName]"
			clr_country_flag = BAT_building_plantation
			FROM = {
				add_dynamic_modifier = {
					modifier = BAT_opium_plantation_mod
				}
			}
			if = {
				limit = {
					NOT = { has_active_mission = BAT_opium_harvest }
				}
				activate_mission = BAT_opium_harvest
			}
			add_to_array = { opium_plantations = FROM }
			BAT_get_predicted_opium = yes
		}
		ai_will_do = {
			factor = 6
			modifier = {
				factor = 1.25
	
				capital_scope = {
					distance_to = {
						target = FROM
						value < 10
					}
				}
			}
			modifier = {
				factor = 1.25
	
				capital_scope = {
					distance_to = {
						target = FROM
						value < 25
					}
				}
			}
			modifier = {
				factor = 1.25
	
				capital_scope = {
					distance_to = {
						target = FROM
						value < 50
					}
				}
			}
		}
	}
	BAT_opium_flood = {
		icon = hol_draw_up_staff_plans
		cost = 50
		fire_only_once = no
		allowed = {
			original_tag = BAT
		}
		visible = {
			is_ai = no
			is_subject = no
			has_completed_focus = BAT_literal_drug_smuggling
			FROM = {
				exists = yes
				NOT = {
					is_in_faction_with = ROOT
					is_subject_of = ROOT
					has_idea = detached_country
				}
				if = {
					limit = {
						is_neighbor_of = ROOT
					}
					always = yes
				}
				else = {
					check_variable = { closest_distance_to@ROOT < 100 }
				}
			}
		}
		target_root_trigger = {
			is_ai = no
			is_subject = no
			has_completed_focus = BAT_literal_drug_smuggling
		}
		#target_array = neighbors
		target_trigger = {
			FROM = {
				exists = yes
				NOT = {
					is_in_faction_with = ROOT
					is_subject_of = ROOT
					has_idea = detached_country
				}
				if = {
					limit = {
						is_neighbor_of = ROOT
					}
					always = yes
				}
				else = {
					check_variable = { closest_distance_to@ROOT < 100 }
				}
			}
		}
		available = {
			hidden_trigger = {
				FROM = {
					set_temp_variable = { calc = num_owned_states }
					multiply_temp_variable = { calc = 2 }
					
					if = {
						limit = {
							has_idea = poverty
						}
						set_temp_variable = { poverty_lvl = 6 }
					}
					else_if = {
						limit = {
							has_idea = poverty1
						}
						set_temp_variable = { poverty_lvl = 5 }
					}
					else_if = {
						limit = {
							has_idea = poverty2
						}
						set_temp_variable = { poverty_lvl = 4 }
					}
					else_if = {
						limit = {
							has_idea = poverty3
						}
						set_temp_variable = { poverty_lvl = 3 }
					}
					else_if = {
						limit = {
							has_idea = poverty4
						}
						set_temp_variable = { poverty_lvl = 2 }
					}
					else_if = {
						limit = {
							OR = {
								has_idea = poverty5
								has_idea = no_poverty
							}
						}
						set_temp_variable = { poverty_lvl = 1 }
					}
					divide_temp_variable = { calc = poverty_lvl }
				}
				if = {
					limit = {
						check_variable = {
							var = opium
							value = calc 
							compare = greater_than_or_equals
						}
					}
					set_temp_variable = { can_flood_opium = 1 }
				}
			}
			custom_trigger_tooltip = {
				tooltip = BAT_opium_flood_cost
				check_variable = { can_flood_opium = 1 }
			}
		}
		cost = 50
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_opium_flood target: [From.GetName]"
			FROM = {
				set_temp_variable = { calc = num_owned_states }
				multiply_temp_variable = { calc = 2 }
				
				if = {
					limit = {
						has_idea = poverty
					}
					set_temp_variable = { poverty_lvl = 6 }
				}
				else_if = {
					limit = {
						has_idea = poverty1
					}
					set_temp_variable = { poverty_lvl = 5 }
				}
				else_if = {
					limit = {
						has_idea = poverty2
					}
					set_temp_variable = { poverty_lvl = 4 }
				}
				else_if = {
					limit = {
						has_idea = poverty3
					}
					set_temp_variable = { poverty_lvl = 3 }
				}
				else_if = {
					limit = {
						has_idea = poverty4
					}
					set_temp_variable = { poverty_lvl = 2 }
				}
				else_if = {
					limit = {
						OR = {
							has_idea = poverty5
							has_idea = no_poverty
						}
					}
					set_temp_variable = { poverty_lvl = 1 }
				}
				divide_temp_variable = { calc = poverty_lvl }
				add_timed_idea = {
					idea = BAT_opioid_epidemic
					days = 365
				}
			}
			subtract_from_variable = { opium = calc }
		}
	}
	# Same as above, but with limited targets for performance. AI Only
	BAT_opium_flood_ai = {
		icon = hol_draw_up_staff_plans
		cost = 50
		fire_only_once = no
		ai_will_do = {
			factor = 50
			modifier = {
				factor = 0.75
				has_opinion = {
					target = FROM
					value > 5
				}
			}
			modifier = {
				factor = 0.25
				has_opinion = {
					target = FROM
					value > 49
				}
			}
		}
		allowed = {
			original_tag = BAT
		}
		visible = {
			is_ai = yes
			is_subject = no
			has_completed_focus = BAT_literal_drug_smuggling
			FROM = {
				exists = yes
				NOT = {
					is_in_faction_with = ROOT
					is_subject_of = ROOT
					has_idea = detached_country
				}
				if = {
					limit = {
						is_neighbor_of = ROOT
					}
					always = yes
				}
				else = {
					check_variable = { closest_distance_to@ROOT < 100 }
				}
			}
		}
		target_root_trigger = {
			is_ai = yes
			is_subject = no
			has_completed_focus = BAT_literal_drug_smuggling
		}
		target_array = potential_and_current_enemies
		target_trigger = {
			FROM = {
				exists = yes
				NOT = {
					is_in_faction_with = ROOT
					is_subject_of = ROOT
					has_idea = detached_country
				}
				if = {
					limit = {
						is_neighbor_of = ROOT
					}
					always = yes
				}
				else = {
					check_variable = { closest_distance_to@ROOT < 100 }
				}
			}
		}
		available = {
			hidden_trigger = {
				FROM = {
					set_temp_variable = { calc = num_owned_states }
					multiply_temp_variable = { calc = 2 }
					
					if = {
						limit = {
							has_idea = poverty
						}
						set_temp_variable = { poverty_lvl = 6 }
					}
					else_if = {
						limit = {
							has_idea = poverty1
						}
						set_temp_variable = { poverty_lvl = 5 }
					}
					else_if = {
						limit = {
							has_idea = poverty2
						}
						set_temp_variable = { poverty_lvl = 4 }
					}
					else_if = {
						limit = {
							has_idea = poverty3
						}
						set_temp_variable = { poverty_lvl = 3 }
					}
					else_if = {
						limit = {
							has_idea = poverty4
						}
						set_temp_variable = { poverty_lvl = 2 }
					}
					else_if = {
						limit = {
							OR = {
								has_idea = poverty5
								has_idea = no_poverty
							}
						}
						set_temp_variable = { poverty_lvl = 1 }
					}
					divide_temp_variable = { calc = poverty_lvl }
				}
				if = {
					limit = {
						check_variable = {
							var = opium
							value = calc 
							compare = greater_than_or_equals
						}
					}
					set_temp_variable = { can_flood_opium = 1 }
				}
			}
			custom_trigger_tooltip = {
				tooltip = BAT_opium_flood_cost
				check_variable = { can_flood_opium = 1 }
			}
		}
		cost = 50
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_opium_flood_ai target: [From.GetName]"
			FROM = {
				set_temp_variable = { calc = num_owned_states }
				multiply_temp_variable = { calc = 2 }
				
				if = {
					limit = {
						has_idea = poverty
					}
					set_temp_variable = { poverty_lvl = 6 }
				}
				else_if = {
					limit = {
						has_idea = poverty1
					}
					set_temp_variable = { poverty_lvl = 5 }
				}
				else_if = {
					limit = {
						has_idea = poverty2
					}
					set_temp_variable = { poverty_lvl = 4 }
				}
				else_if = {
					limit = {
						has_idea = poverty3
					}
					set_temp_variable = { poverty_lvl = 3 }
				}
				else_if = {
					limit = {
						has_idea = poverty4
					}
					set_temp_variable = { poverty_lvl = 2 }
				}
				else_if = {
					limit = {
						OR = {
							has_idea = poverty5
							has_idea = no_poverty
						}
					}
					set_temp_variable = { poverty_lvl = 1 }
				}
				divide_temp_variable = { calc = poverty_lvl }
				add_timed_idea = {
					idea = BAT_opioid_epidemic
					days = 365
				}
			}
			subtract_from_variable = { opium = calc }
		}
	}
}

foreign_politics = {
    BAT_conquer_the_savages = {
		icon = generic_intelligence_operation
		allowed = {
		    original_tag = BAT
		}
		available = {
			is_subject = no
		}
		targets = { TBK }
		targets_dynamic = yes
		target_trigger = {
			FROM = { 
			    original_tag = TBK
			}
		}
		target_root_trigger = {
		    OR = {
			    has_completed_focus = BAT_strike_at_tobuck
				has_completed_focus = BAT_a_new_policy_of_expansionism
			}
		}
		visible = {
			OR = {
			    has_completed_focus = BAT_strike_at_tobuck
				has_completed_focus = BAT_a_new_policy_of_expansionism
			}
			FROM = {
				exists = yes
				OR = {
					is_neighbor_of = ROOT
					any_neighbor_country = {
				    	is_subject_of = ROOT
					}
				}
				NOT = { 
				    has_war_with = ROOT 
				}
				NOT = {
				    is_subject_of = ROOT
				}
			}
		}
		cancel_trigger = {
			OR = {
				is_subject = yes
				FROM = {
					OR = {
						exists = no
						is_subject = yes
						has_war_with = ROOT
					}
				}
			}
		}
		
		cost = 50
		fire_only_once = yes
		
		days_remove = 30
		war_with_target_on_remove = yes
		
		ai_will_do = {
			factor = 500
			modifier = {
				factor = 0
				has_war = yes
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_conquer_the_savages target: [From.GetName]"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = 1000
                }
            }
			hidden_effect = {
				if = {
				    limit = {
					    TBK = {
						    is_ai = no
						}
					}
					TBK = {
					    country_event = {
							id = bat.155
						}
					}
				}
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_conquer_the_savages target: [From.GetName]"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = -1000
                }
            }
			hidden_effect = {
				create_wargoal = { 
					type = annex_everything 
					target = TBK
				}
			}
			declare_war_on = {
                target = TBK
                type = annex_everything
            }
		}
	}
	
	BAT_conquer_the_savages_2 = {
		icon = generic_intelligence_operation
		allowed = {
		    original_tag = BAT
		}
		available = {
			is_subject = no
		}
		targets = { ZAR }
		targets_dynamic = yes
		target_trigger = {
			FROM = { 
			    original_tag = ZAR
			}
		}
		target_root_trigger = {
		    OR = {
			    has_completed_focus = BAT_strike_at_tobuck
				has_completed_focus = BAT_a_new_policy_of_expansionism
			}
		}
		visible = {
			OR = {
			    has_completed_focus = BAT_strike_at_tobuck
				has_completed_focus = BAT_a_new_policy_of_expansionism
			}
			FROM = {
				exists = yes
				OR = {
					is_neighbor_of = ROOT
					any_neighbor_country = {
				    	is_subject_of = ROOT
					}
				}
				NOT = { 
				    has_war_with = ROOT 
				}
				NOT = {
				    is_subject_of = ROOT
				}
			}
		}
		cancel_trigger = {
			OR = {
				is_subject = yes
				FROM = {
					OR = {
						exists = no
						is_subject_of = ROOT 
						has_war_with = ROOT
					}
				}
			}
		}
		
		cost = 50
		fire_only_once = yes
		
		days_remove = 30
		war_with_target_on_remove = yes
		
		ai_will_do = {
			factor = 500
			modifier = {
				factor = 0
				has_war = yes
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_conquer_the_savages_2 target: [From.GetName]"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = 1000
                }
            }
			hidden_effect = {
				if = {
				    limit = {
					    ZAR = {
						    is_ai = no
						}
					}
					ZAR = {
					    country_event = {
							id = bat.155
						}
					}
				}
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_conquer_the_savages_2 target: [From.GetName]"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = -1000
                }
            }
			hidden_effect = {
				create_wargoal = { 
					type = annex_everything 
					target = ZAR
				}
			}
			declare_war_on = {
                target = ZAR
                type = annex_everything
            }
		}
	}
	
	BAT_conquer_the_savages_3 = {
		icon = generic_intelligence_operation
		allowed = {
		    original_tag = BAT
		}
		available = {
			is_subject = no
		}
		targets = { CTH CVA HIE }
		targets_dynamic = yes
		target_trigger = {
			FROM = { 
			    OR = {
			        original_tag = CTH
					original_tag = CVA
					original_tag = HIE
				}
			}
		}
		target_root_trigger = {
		    has_completed_focus = BAT_strike_at_tobuck
			has_country_flag = BAT_HIP_defeated
		}
		visible = {
			has_country_flag = BAT_HIP_defeated
			OR = {
			    FROM = {
				    has_country_flag = BAT_HIP_defeated
				    NOT = {
						is_in_faction_with = ROOT 
					}
				}
				has_country_flag = BAT_CTH_made_a_mistake
			}
			FROM = {
				exists = yes
				OR = {
					is_neighbor_of = ROOT
					any_neighbor_country = {
				    	is_subject_of = ROOT
					}
				}
				NOT = { 
				    has_war_with = ROOT 
				}
				NOT = {
				    is_subject_of = ROOT
				}
			}
		}
		cancel_trigger = {
			OR = {
				is_subject = yes
				FROM = {
					OR = {
						exists = no
						is_subject_of = ROOT 
						has_war_with = ROOT
					}
				}
			}
		}
		
		cost = 75
		fire_only_once = yes
		
		days_remove = 30
		war_with_target_on_remove = yes
		
		ai_will_do = {
			factor = 100
			modifier = {
				factor = 0
				has_war = yes
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_conquer_the_savages_3 target: [From.GetName]"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = 1000
                }
            }
			hidden_effect = {
				if = {
				    limit = {
					    FROM = {
						    is_ai = no
						}
					}
					FROM = {
					    country_event = {
							id = bat.155
						}
					}
				}
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_conquer_the_savages_3 target: [From.GetName]"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = -1000
                }
            }
			if = {
			    limit = {
				    FROM = { 
			            original_tag = CTH
			        }
				}
			    hidden_effect = {
				    create_wargoal = { 
					    type = annex_everything 
					    target = CTH
				    }
			    }
			    declare_war_on = {
                    target = CTH
                    type = annex_everything
                }
			}
			if = {
			    limit = {
				    FROM = { 
			            original_tag = CVA
			        }
				}
			    hidden_effect = {
				    create_wargoal = { 
					    type = annex_everything 
					    target = CVA
				    }
			    }
			    declare_war_on = {
                    target = CVA
                    type = annex_everything
                }
			}
			if = {
			    limit = {
				    FROM = { 
			            original_tag = HIE
			        }
				}
			    hidden_effect = {
				    create_wargoal = { 
					    type = annex_everything 
					    target = HIE
				    }
			    }
			    declare_war_on = {
                    target = HIE
                    type = annex_everything
                }
			}
		}
	}
}

political_actions = {
    BAT_coring_1 = {
        icon = generic_nationalism
		allowed = {
		    original_tag = BAT
		}
        available = {
            FROM = {
                is_controlled_by = ROOT
				compliance > 30
            }
        }
        visible = {
		    OR = {
				has_completed_focus = BAT_integrate_the_new_territory
            	has_completed_focus = BAT_secure_tobuck
			}
            FROM = {
                is_owned_by = ROOT
            }
			NOT = {
			    OR = {
			        has_idea = BAT_integration_issues
					has_idea = BAT_integration_issues_2
				}
			}
        }
        target_root_trigger = {
            OR = {
				has_completed_focus = BAT_integrate_the_new_territory
            	has_completed_focus = BAT_secure_tobuck
			}
        }
        state_target = yes
        targets = { 692 728 729 745 730 746 747 688 743 744 1205 1206 748 }
        on_map_mode = map_only
    
        ai_will_do = {
            base = 1000
        }

        cost = 0
        fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_coring_1"
            FROM = {
                add_core_of = ROOT 
			    hidden_effect = {
			        set_state_flag = BAT_cored_once
			    }
            }
        }
    }

	BAT_coring_2 = {
        icon = generic_nationalism
		allowed = {
		    original_tag = BAT
		}
        available = {
            FROM = {
                is_controlled_by = ROOT
				compliance > 30
            }
        }
        visible = {
		    OR = {
			    AND = {
		            has_completed_focus = BAT_secure_tobuck
		            has_completed_focus = BAT_legal_opposition
				}
				AND = {
		            has_completed_focus = BAT_integrate_the_new_territory
		            has_completed_focus = BAT_end_the_hierachy
				}
				AND = {
		            has_completed_focus = BAT_integrate_the_new_territory
		            has_completed_focus = BAT_the_commonwealth_secured
				}
			}
            FROM = {
                is_owned_by = ROOT
            }
			NOT = {
			    OR = {
			        has_idea = BAT_integration_issues
					has_idea = BAT_integration_issues_2
				}
			}
        }
		target_root_trigger = {
            OR = {
			    AND = {
		            has_completed_focus = BAT_secure_tobuck
		            has_completed_focus = BAT_legal_opposition
				}
				AND = {
		            has_completed_focus = BAT_integrate_the_new_territory
		            has_completed_focus = BAT_end_the_hierachy
				}
				AND = {
		            has_completed_focus = BAT_integrate_the_new_territory
		            has_completed_focus = BAT_the_commonwealth_secured
				}
			}
        }
        state_target = yes
        targets = { 710 711 697 698 }
        on_map_mode = map_only
    
        ai_will_do = {
            base = 1000
        }

        cost = 0
        fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_coring_3"
            FROM = {
                add_core_of = ROOT 
			    hidden_effect = {
			        set_state_flag = BAT_cored_once
			    }
            }
        }
    }
	
	BAT_defeat_tobuck = {
		icon = GFX_decision_generic_merge_plant_tank
		available = {
			TBK = {
				is_subject = no
			}
		}
		visible = {
			OR = {
				has_completed_focus = BAT_h18
				has_completed_focus = BAT_g18
				has_completed_focus = BAT_f18
				AND = {
					OR = {
						has_completed_focus = BAT_d18
						has_completed_focus = BAT_e18
					}
					TBK = {
						has_government = fascism
					}
				}
			}
			TBK = {
				is_subject = no
				exists = yes
			}
		}
		cost = 50
		fire_only_once = yes
		days_remove = 25
		
		ai_will_do = {
			base = 20
		}
		
		complete_effect = {
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = 1000
                }
            }
			hidden_effect = {
				if = {
				    limit = {
					    TBK = {
						    is_ai = no
						}
					}
					FROM = {
					    country_event = {
							id = bat.155
						}
					}
				}
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_defeat_tobuck"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = -1000
                }
            }
			declare_war_on = {
				target = TBK
				type = annex_everything
			}
		}
	}
	
	BAT_push_back_zarantia = {
		icon = GFX_decision_generic_merge_plant_tank
		available = {
			ZAR = {
				is_subject = no
			}
			OR = {
				BAT = {
					owns_state = 728
				}
				ZAR = {
					owns_state = 728
				}
			}
		}
		visible = {
			OR = {
				has_completed_focus = BAT_h18
				has_completed_focus = BAT_g18
				has_completed_focus = BAT_f18
				AND = {
					OR = {
						has_completed_focus = BAT_d18
						has_completed_focus = BAT_e18
					}
					ZAR = {
						has_government = fascism
					}
				}
			}
			ZAR = {
				is_subject = no
				exists = yes
			}
		}
		cost = 50
		fire_only_once = yes
		days_remove = 25
		
		ai_will_do = {
			base = 20
		}
		
		complete_effect = {
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = 1000
                }
            }
			hidden_effect = {
				if = {
				    limit = {
					    ZAR = {
						    is_ai = no
						}
					}
					FROM = {
					    country_event = {
							id = bat.155
						}
					}
				}
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_push_back_zarantia"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = -1000
                }
            }
			if = {
				limit = {
					has_completed_focus = BAT_h18
				}
				custom_effect_tooltip = BAT_limited_war_zarantia_tp
				set_country_flag = BAT_ZAR_limited_war
			}
			declare_war_on = {
				target = ZAR
				type = annex_everything
			}
		}
	}
	BAT_take_the_maregyptian_coastline = {
		icon = GFX_decision_generic_merge_plant_tank
		available = {
			MGY = {
				is_subject = no
			}
			BAT = {
				owns_state = 730
			}
		}
		visible = {
			has_completed_focus = BAT_h18
			MGY = {
				is_subject = no
				exists = yes
			}
		}
		cost = 50
		fire_only_once = yes
		days_remove = 25
		
		ai_will_do = {
			base = 20
		}
		
		complete_effect = {
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = 1000
                }
            }
			hidden_effect = {
				if = {
				    limit = {
					    MGY = {
						    is_ai = no
						}
					}
					FROM = {
					    country_event = {
							id = bat.155
						}
					}
				}
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_take_the_maregyptian_coastline"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = -1000
                }
            }
			custom_effect_tooltip = BAT_limited_war_maregypt_tp
			set_country_flag = BAT_MGY_limited_war
			declare_war_on = {
				target = MGY
				type = annex_everything
			}
		}
	}
	BAT_fight_warzena = {
		icon = GFX_decision_generic_merge_plant_tank
		available = {
			WAR = {
				OR = {
					is_subject_of = HIP
					is_subject = no
				}
			}
		}
		visible = {
			OR = {
				has_completed_focus = BAT_g18
				has_completed_focus = BAT_f18
				AND = {
					OR = {
						has_completed_focus = BAT_d18
						has_completed_focus = BAT_e18
					}
					WAR = {
						has_government = fascism
					}
				}
			}
			WAR = {
				OR = {
					is_subject_of = HIP
					is_subject = no
				}
				exists = yes
			}
		}
		cost = 50
		fire_only_once = yes
		days_remove = 25
		
		ai_will_do = {
			base = 20
		}
		
		complete_effect = {
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = 1000
                }
            }
			hidden_effect = {
				if = {
				    limit = {
					    WAR = {
						    is_ai = no
						}
					}
					FROM = {
					    country_event = {
							id = bat.155
						}
					}
				}
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_fight_warzena"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = -1000
                }
            }
			declare_war_on = {
				target = WAR
				type = annex_everything
			}
		}
	}
	BAT_fight_warzena_preemptive = {
		icon = GFX_decision_generic_merge_plant_tank
		available = {
			WAR = {
				OR = {
					is_subject_of = HIP
					is_subject = no
				}
			}
			BAT = {
				has_war_with = HIP
				surrender_progress < 0.05
			}
			custom_trigger_tooltip = {
				tooltip = BAT_60_days_war_tp
				has_country_flag = BAT_60_days_war
			}
		}
		visible = {
			has_country_flag = BAT_preemptive_HIP_strike
			WAR = {
				OR = {
					is_subject_of = HIP
					is_subject = no
				}
				exists = yes
			}
		}
		cost = 50
		fire_only_once = yes
		days_remove = 7
		
		ai_will_do = {
			base = 20
		}
		
		complete_effect = {
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = 1000
                }
            }
			hidden_effect = {
				if = {
				    limit = {
					    WAR = {
						    is_ai = no
						}
					}
					FROM = {
					    country_event = {
							id = bat.155
						}
					}
				}
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_fight_warzena"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = -1000
                }
            }
			declare_war_on = {
				target = WAR
				type = annex_everything
			}
		}
	}
	BAT_fight_zumidia = {
		icon = GFX_decision_generic_merge_plant_tank
		available = {
			ZUM = {
				OR = {
					is_subject = no
					is_subject_of = HIP
				}
			}
			owns_state = 743
		}
		visible = {
			has_completed_focus = BAT_g18
			ZUM = {
				OR = {
					is_subject_of = HIP
					is_subject = no
				}
				exists = yes
			}
		}
		cost = 50
		fire_only_once = yes
		days_remove = 25
		
		ai_will_do = {
			base = 20
		}
		
		complete_effect = {
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = 1000
                }
            }
			hidden_effect = {
				if = {
				    limit = {
					    ZUM = {
						    is_ai = no
						}
					}
					FROM = {
					    country_event = {
							id = bat.155
						}
					}
				}
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_fight_zumidia"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = -1000
                }
            }
			declare_war_on = {
				target = ZUM
				type = annex_everything
			}
		}
	}
	BAT_destroy_hippogriffia = {
		icon = GFX_decision_generic_merge_plant_tank
		available = {
			HIP = {
				is_subject = no
			}
			OR = {
				owns_state = 697
				AND = {
					HIP = {
						owns_state = 697
					}
					OR = {
						owns_state = 743
						HIP = {
							owns_state = 743
						}
					}
				}
			}
		}
		visible = {
			has_completed_focus = BAT_g18
			HIP = {
				exists = yes
			}
		}
		cost = 50
		fire_only_once = yes
		days_remove = 25
		
		ai_will_do = {
			base = 20
		}
		
		complete_effect = {
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = 1000
                }
            }
			hidden_effect = {
				if = {
				    limit = {
					    HIP = {
						    is_ai = no
						}
					}
					FROM = {
					    country_event = {
							id = bat.155
						}
					}
				}
			}
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_destroy_hippogriffia"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = -1000
                }
            }
			declare_war_on = {
				target = HIP
				type = annex_everything
			}
		}
	}
	BAT_form_the_chiropterran_imperium = {
		icon = eng_trade_unions_support
		available = {
			owns_state = 728
			owns_state = 730
			owns_state = 733
			owns_state = 734
		}
		visible = {
			has_completed_focus = BAT_h18
		}
		cost = 0
		fire_only_once = yes
		
		ai_will_do = {
			base = 20
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_form_the_chiropterran_imperium"
			add_political_power = 50
			set_cosmetic_tag = BAT_imperium
		}
	}
	BAT_form_the_nightmare_dominion = {
		icon = eng_trade_unions_support
		available = {
			owns_state = 728
			owns_state = 747
			owns_state = 743
			owns_state = 697
			owns_state = 1165
		}
		visible = {
			has_completed_focus = BAT_g18
		}
		cost = 0
		fire_only_once = yes
		
		ai_will_do = {
			base = 20
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_form_the_nightmare_dominion"
			add_political_power = 50
			set_cosmetic_tag = BAT_dominion
			hidden_effect = {
				country_event = {
					id = bat.187
					days = 13
				}
			}
		}
	}
	BAT_form_the_federated_provinces = {
		icon = eng_trade_unions_support
		available = {
			owns_state = 728
			owns_state = 747
			owns_state = 743
		}
		visible = {
			OR = {
				has_completed_focus = BAT_d18
				has_completed_focus = BAT_e18
				has_completed_focus = BAT_f18
			}
		}
		cost = 0
		fire_only_once = yes
		
		ai_will_do = {
			base = 20
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_form_the_federated_provinces"
			add_political_power = 50
			set_cosmetic_tag = BAT_federation
		}
	}
	BAT_coring_tobuck = {
        icon = generic_nationalism
		allowed = {
		    original_tag = BAT
		}
        available = {
            FROM = {
                is_controlled_by = ROOT
				compliance > 40
            }
        }
        visible = {
			OR = {
				has_completed_focus = BAT_h18
				has_completed_focus = BAT_g18
				has_completed_focus = BAT_f18
				has_completed_focus = BAT_d18
				has_completed_focus = BAT_e18
			}
            FROM = {
                is_owned_by = ROOT
            }
        }
        target_root_trigger = {
			OR = {
				has_completed_focus = BAT_h18
				has_completed_focus = BAT_g18
				has_completed_focus = BAT_f18
				has_completed_focus = BAT_d18
				has_completed_focus = BAT_e18
			}
        }
        state_target = yes
        targets = { 692 728 729 745 1205 }
        on_map_mode = map_only
    
        ai_will_do = {
            base = 1000
        }

        cost = 30
        fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision BAT_coring_tobuck"
            FROM = {
                add_core_of = ROOT 
            }
        }
    }
	BAT_coring_stirling = {
        icon = generic_nationalism
		allowed = {
		    original_tag = BAT
		}
        available = {
            FROM = {
                is_controlled_by = ROOT
				compliance > 40
            }
        }
        visible = {
		    has_completed_focus = BAT_h18
            FROM = {
                is_owned_by = ROOT
            }
        }
        target_root_trigger = {
            has_completed_focus = BAT_h18
        }
        state_target = yes
        targets = { 730 731 733 734 737 738 }
        on_map_mode = map_only
    
        ai_will_do = {
            base = 1000
        }

        cost = 30
        fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision BAT_coring_stirling"
            FROM = {
                add_core_of = ROOT 
            }
        }
    }
	BAT_coring_batton = {
        icon = generic_nationalism
		allowed = {
		    original_tag = BAT
		}
        available = {
            FROM = {
                is_controlled_by = ROOT
				compliance > 40
            }
        }
        visible = {
			OR = {
				has_completed_focus = BAT_f18
				has_completed_focus = BAT_e18
				has_completed_focus = BAT_d18
			}
            FROM = {
                is_owned_by = ROOT
            }
        }
        target_root_trigger = {
			OR = {
				has_completed_focus = BAT_f18
				has_completed_focus = BAT_e18
				has_completed_focus = BAT_d18
			}
        }
        state_target = yes
        targets = { 743 744 1206 688 730 746 747 755 748 754 756 878 }
        on_map_mode = map_only
    
        ai_will_do = {
            base = 1000
        }

        cost = 30
        fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision BAT_coring_batton"
            FROM = {
                add_core_of = ROOT 
            }
        }
    }
	BAT_equestrian_detente = {
		icon = eng_trade_unions_support
		available = {
			EQS = {
				has_government = democratic
				is_in_faction = yes
				is_subject = no
				NOT = {
					has_war_with = BAT
				}
			}
			is_subject = no
		}
		visible = {
			OR = {
				has_completed_focus = BAT_d18
				has_completed_focus = BAT_e18
			}
			NOT = {
				is_in_faction_with = HIP
				HIP = {is_faction_leader = yes}
			}
		}
		cost = 0
		fire_only_once = yes
		
		ai_will_do = {
			base = 20
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_equestrian_detente"
			EQS = {
				country_event = {
					id = bat.189
					days = 2
				}
			}
		}
	}
}

economy_decisions = {
    BAT_reorganize_agriculture_dec = {
        icon = hol_draw_up_staff_plans
		allowed = {
		    original_tag = BAT
		}
        available = {
            FROM = {
                is_controlled_by = ROOT
				is_core_of = ROOT
            }
			num_of_civilian_factories > 1
        }
        visible = {
		    OR = {
                has_completed_focus = BAT_reorganize_agriculture
				has_completed_focus = BAT_resettle_them
			}
            FROM = {
                is_owned_by = ROOT
				is_core_of = ROOT
				NOT = {
				    has_state_flag = BAT_agriculture_reorganized
				}
            }
        }
		modifier = {
			civilian_factory_use = 1
		}
        target_root_trigger = {
            has_completed_focus = BAT_reorganize_agriculture
        }
        state_target = yes
        target_array = BAT.core_states
        on_map_mode = map_only
    
        ai_will_do = {
            base = 8
        }

        cost = 5
		days_remove = 30
        fire_only_once = yes
    
        remove_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_reorganize_agriculture"
			FROM = {
				add_manpower = 10000
				add_dynamic_modifier = {
					modifier = BAT_mechanised_farms
				}
				custom_effect_tooltip = BAT_reorganize_agriculture_tp
				set_state_flag = BAT_agriculture_reorganized
			}
        }
    }
	
	BAT_develop_manerba_shipyards = { 
		icon = generic_naval
		allowed = {
            original_tag = BAT
		}
		highlight_states = {
			highlight_state_targets = {
				state = 692
			}
		}
		available = {
			num_of_civilian_factories_available_for_projects > 2
			692 = {
			    is_owned_and_controlled_by = ROOT
			}
		}
		visible = {
		    OR = {
		        has_completed_focus = BAT_limited_unionism
			    has_completed_focus = BAT_the_development_fund
			}
			692 = {
				NOT = {
					has_state_flag = BAT_manerba_shipyards
				}
				is_owned_and_controlled_by = ROOT
			}
		}
		
		fire_only_once = yes
		
		cost = 25
		days_remove = 120
		
		modifier = {
			civilian_factory_use = 3
		}
		ai_will_do = {
			factor = 5
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_develop_manerba_shipyards"
			692 = { 
				set_state_flag = BAT_manerba_shipyards
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = dockyard
					level = 2
					instant_build = yes
				}
			}
		}
	}

	BAT_develop_tobuckian_industry = { 
		icon = ger_military_buildup
		allowed = {
            original_tag = BAT
		}
		highlight_states = {
			highlight_state_targets = {
				state = 728
			}
		}
		available = {
			num_of_civilian_factories_available_for_projects > 2
			728 = {
			    is_owned_and_controlled_by = ROOT
			}
		}
		visible = {
		    OR = {
		        has_completed_focus = BAT_limited_unionism
			    has_completed_focus = BAT_the_development_fund
			}
			728 = {
				NOT = {
					has_state_flag = BAT_tobuckian_industry
				}
				is_owned_and_controlled_by = ROOT
			}
		}
		
		fire_only_once = yes
		
		cost = 25
		days_remove = 90
		
		modifier = {
			civilian_factory_use = 3
		}
		ai_will_do = {
			factor = 5
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_develop_tobuckian_industry"
			728 = { 
				set_state_flag = BAT_tobuckian_industry
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = arms_factory
					level = 1
					instant_build = yes
				}
			}
		}
	}
	
	BAT_develop_warzenian_industry = { 
		icon = ger_military_buildup
		allowed = {
            original_tag = BAT
		}
		highlight_states = {
			highlight_state_targets = {
				state = 743
			}
		}
		available = {
			num_of_civilian_factories_available_for_projects > 2
			743 = {
			    is_owned_and_controlled_by = ROOT
			}
		}
		visible = {
		    OR = {
		        has_completed_focus = BAT_limited_unionism
			    has_completed_focus = BAT_the_development_fund
			}
			743 = {
				NOT = {
					has_state_flag = BAT_warzenian_industry
				}
				is_owned_and_controlled_by = ROOT
			}
		}
		
		fire_only_once = yes
		
		cost = 25
		days_remove = 90
		
		modifier = {
			civilian_factory_use = 3
		}
		ai_will_do = {
			factor = 5
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_develop_warzenian_industry"
			743 = { 
				set_state_flag = BAT_warzenian_industry
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = arms_factory
					level = 1
					instant_build = yes
				}
			}
		}
	}
	
	BAT_develop_aghzat_industry = { 
		icon = generic_construction
		allowed = {
            original_tag = BAT
		}
		highlight_states = {
			highlight_state_targets = {
				state = 747
			}
		}
		available = {
			num_of_civilian_factories_available_for_projects > 2
			747 = {
			    is_owned_and_controlled_by = ROOT
			}
		}
		visible = {
		    OR = {
		        has_completed_focus = BAT_limited_unionism
			    has_completed_focus = BAT_the_development_fund
			}
			747 = {
				NOT = {
					has_state_flag = BAT_aghzat_industry
				}
				is_owned_and_controlled_by = ROOT
			}
		}
		
		fire_only_once = yes
		
		cost = 25
		days_remove = 90
		
		modifier = {
			civilian_factory_use = 3
		}
		ai_will_do = {
			factor = 5
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_develop_aghzat_industry"
			747 = { 
				set_state_flag = BAT_aghzat_industry
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
			}
		}
	}
}

prospect_for_resources = {
    BAT_develop_oil_in_senmare = { 
		icon = oil
		allowed = {
            original_tag = BAT
		}
		highlight_states = {
			highlight_state_targets = {
				state = 746
			}
		}
		available = {
			num_of_civilian_factories_available_for_projects > 2
			746 = {
			    is_owned_and_controlled_by = ROOT
			}
		}
		visible = {
		    OR = {
		        has_completed_focus = BAT_limited_unionism
			    has_completed_focus = BAT_the_development_fund
			}
			746 = {
				NOT = {
					has_state_flag = BAT_oil_in_senmare
				}
				is_owned_and_controlled_by = ROOT
			}
		}
		
		fire_only_once = yes
		
		cost = 20
		days_remove = 60
		
		modifier = {
			civilian_factory_use = 3
		}
		ai_will_do = {
			factor = 5
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_develop_oil_in_senmare"
			746 = { 
				set_state_flag = BAT_oil_in_senmare
				add_resource = {
					type = oil
					amount = 10
				}
			}
		}
	}
	
	BAT_develop_oil_in_menzaka = { 
		icon = oil
		allowed = {
            original_tag = BAT
		}
		highlight_states = {
			highlight_state_targets = {
				state = 730
			}
		}
		available = {
			num_of_civilian_factories_available_for_projects > 2
			730 = {
			    is_owned_and_controlled_by = ROOT
			}
		}
		visible = {
		    OR = {
		        has_completed_focus = BAT_limited_unionism
			    has_completed_focus = BAT_the_development_fund
			}
			730 = {
				NOT = {
					has_state_flag = BAT_oil_in_menzaka
				}
				is_owned_and_controlled_by = ROOT
			}
		}
		
		fire_only_once = yes
		
		cost = 20
		days_remove = 60
		
		modifier = {
			civilian_factory_use = 3
		}
		ai_will_do = {
			factor = 5
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_develop_oil_in_menzaka"
			730 = { 
				set_state_flag = BAT_oil_in_menzaka
				add_resource = {
					type = oil
					amount = 10
				}
			}
		}
	}
	
	BAT_develop_steel_in_aghzat = { 
		icon = steel
		allowed = {
            original_tag = BAT
		}
		highlight_states = {
			highlight_state_targets = {
				state = 747
			}
		}
		available = {
			num_of_civilian_factories_available_for_projects > 2
			747 = {
			    is_owned_and_controlled_by = ROOT
			}
		}
		visible = {
		    OR = {
		        has_completed_focus = BAT_limited_unionism
			    has_completed_focus = BAT_the_development_fund
			}
			747 = {
				NOT = {
					has_state_flag = BAT_steel_in_aghzat
				}
				is_owned_and_controlled_by = ROOT
			}
		}
		
		fire_only_once = yes
		
		cost = 20
		days_remove = 60
		
		modifier = {
			civilian_factory_use = 3
		}
		ai_will_do = {
			factor = 5
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_develop_steel_in_aghzat"
			747 = { 
				set_state_flag = BAT_steel_in_aghzat
				add_resource = {
					type = steel
					amount = 12
				}
			}
		}
	}
}

BAT_NZRAO = {
    BAT_steal_resources = { #Thanks Jaspy
		icon = generic_operation
		target_root_trigger = {
			# because ai_will_do = 0
			is_ai = no
			OR = {
				has_completed_focus = BAT_exploit_subjects
				has_completed_focus = BAT_exploit_subjects_2
			}
			ROOT = {
				num_subjects > 0
			}
		}

		target_array = global.africa_states

		visible = {
			is_ai = no
		    OR = {
				has_completed_focus = BAT_exploit_subjects
				has_completed_focus = BAT_exploit_subjects_2
			}
			ROOT = {
				num_subjects > 0
			}
			FROM = {
				NOT = {
					has_state_flag = CHN_stole_resources_from_this_state_flag
				}
				OR = {
					check_variable = {
						var = FROM.resource@crystals
						value = 1
						compare = greater_than_or_equals
					}
					check_variable = {
						var = FROM.resource@chromium
						value = 1
						compare = greater_than_or_equals
					}
					check_variable = {
						var = FROM.resource@steel
						value = 1
						compare = greater_than_or_equals
					}
					check_variable = {
						var = FROM.resource@tungsten
						value = 1
						compare = greater_than_or_equals
					}
					check_variable = {
						var = FROM.resource@rubber
						value = 1
						compare = greater_than_or_equals
					}
					check_variable = {
						var = FROM.resource@aluminium
						value = 1
						compare = greater_than_or_equals
					}
					check_variable = {
						var = FROM.resource@oil
						value = 1
						compare = greater_than_or_equals
					}
				}
			}
		}
		
		available = {
			custom_trigger_tooltip = {
				tooltip = BAT_steal_resources_2_tp
				FROM = {
					owner = {
						is_subject_of = BAT
					}
					controller = {
						is_subject_of = BAT
					}
				}
				FROM = {
					set_temp_variable = { temp = CHN_resource_exploitation_decision_dynamic_cost_var }
					add_to_temp_variable = { CHN_resource_exploitation_decision_dynamic_cost_var = FROM.resource@crystals }
					add_to_temp_variable = { CHN_resource_exploitation_decision_dynamic_cost_var = FROM.resource@chromium }
					add_to_temp_variable = { CHN_resource_exploitation_decision_dynamic_cost_var = FROM.resource@steel }
					add_to_temp_variable = { CHN_resource_exploitation_decision_dynamic_cost_var = FROM.resource@tungsten }
					add_to_temp_variable = { CHN_resource_exploitation_decision_dynamic_cost_var = FROM.resource@rubber }
					add_to_temp_variable = { CHN_resource_exploitation_decision_dynamic_cost_var = FROM.resource@aluminium }
					add_to_temp_variable = { CHN_resource_exploitation_decision_dynamic_cost_var = FROM.resource@oil }
					multiply_temp_variable = { CHN_resource_exploitation_decision_dynamic_cost_var = 3.14 } ## I LOVE PIE ##
				}
			}
		}
		
		state_target = yes

		target_trigger = {
			FROM = {
			    is_on_continent = africa
				owner = {
					is_subject_of = BAT
				}
				controller = {
					is_subject_of = BAT
				}
				OR = {
					check_variable = {
						var = FROM.resource@crystals
						value = 1
						compare = greater_than_or_equals
					}
					check_variable = {
						var = FROM.resource@chromium
						value = 1
						compare = greater_than_or_equals
					}
					check_variable = {
						var = FROM.resource@steel
						value = 1
						compare = greater_than_or_equals
					}
					check_variable = {
						var = FROM.resource@tungsten
						value = 1
						compare = greater_than_or_equals
					}
					check_variable = {
						var = FROM.resource@rubber
						value = 1
						compare = greater_than_or_equals
					}
					check_variable = {
						var = FROM.resource@aluminium
						value = 1
						compare = greater_than_or_equals
					}
					check_variable = {
						var = FROM.resource@oil
						value = 1
						compare = greater_than_or_equals
					}
				}
			}
		}

		ai_will_do = {
			# if set to non-zero, also change target_root_trigger
			base = 0
		}

		cost = CHN_resource_exploitation_decision_dynamic_cost_var
		days_remove = 30

		modifier = {
			political_power_factor = -0.05
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_steal_resources target: [From.GetName]"
			FROM.owner = {
				give_resource_rights = { receiver = ROOT state = FROM }
			}
			FROM = {
				set_state_flag = CHN_stole_resources_from_this_state_flag
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_steal_resources target: [From.GetName]"
		}
	}
	
	BAT_industrial_decommission_decision = {
		icon = ger_military_buildup

		target_root_trigger = {
		    OR = {
				has_completed_focus = BAT_industrial_decommission
				has_completed_focus = BAT_industrial_decommission_2
			}
		}

		visible = {
			FROM = {
				is_owned_and_controlled_by = BAT
				arms_factory > 0
				occupation_law = BAT_dismantle_industry
			}
		}
		
		state_target = yes
		target_array = owned_controlled_states
		target_trigger = {
			FROM = {
				occupation_law = BAT_dismantle_industry
				arms_factory > 0
			}
		}
        on_map_mode = map_only

		days_remove = 15
		cost = 10
		
		remove_effect = {
			FROM = {
				set_temp_variable = { 
					amount_factory_removed = arms_factory_level 
				}
				remove_building = {
					type = arms_factory
					level = amount_factory_removed
				}
			}
			add_offsite_building = { 
				type = arms_factory 
				level = amount_factory_removed 
			}
		}
	}
	
	BAT_industrial_decommission_decision_2 = {
		icon = generic_construction

		target_root_trigger = {
			OR = {
				has_completed_focus = BAT_industrial_decommission
				has_completed_focus = BAT_industrial_decommission_2
			}
		}

		visible = {
			FROM = {
				is_owned_and_controlled_by = BAT
				industrial_complex > 0
				occupation_law = BAT_dismantle_industry
			}
		}
		
		state_target = yes
		target_array = owned_controlled_states
		target_trigger = {
			FROM = {
				occupation_law = BAT_dismantle_industry
				industrial_complex > 0
			}
		}
        on_map_mode = map_only

		days_remove = 15
		cost = 10
		
		remove_effect = {
			FROM = {
				set_temp_variable = { 
					amount_factory_removed = industrial_complex_level 
				}
				remove_building = {
					type = industrial_complex
					level = amount_factory_removed
				}
			}
			add_offsite_building = { 
				type = industrial_complex 
				level = amount_factory_removed 
			}
		}
	}
}

BAT_single_pegasus_project = {
    BAT_build_SPP_tower = {
		icon = generic_construction
		available = {
		    num_of_civilian_factories > 1
		}
		visible = {
			has_completed_focus = BAT_weather_manipulation
			FROM = {
				NOT = {
					has_state_flag = BAT_SPP_tower
				}
				is_core_of = BAT
				is_owned_and_controlled_by = BAT
			}
		}
		modifier = {
			civilian_factory_use = 2
		}
		target_root_trigger = {
            has_completed_focus = BAT_weather_manipulation
        }
		
        state_target = yes
        target_array = BAT.core_states
        on_map_mode = map_only

		ai_will_do = {
			base = 20
		}

		cost = 30
		days_remove = 30

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_build_SPP_tower"
			custom_effect_tooltip = BAT_build_SPP_tower_tp
			hidden_effect = {
			    FROM = {
					set_state_flag = BAT_SPP_tower
				}
			}
		}
	}
	
	BAT_SPP_flood = {
		icon = hol_inundate_water_lines
		available = {
		    FROM = {
			    NOT = {
				    has_state_flag = BAT_using_SPP_tower
				}
			}
		}
		visible = {
			has_completed_focus = BAT_weather_manipulation
			FROM = {
				has_state_flag = BAT_SPP_tower
				is_core_of = BAT
				is_owned_and_controlled_by = BAT
			}
		}
		target_root_trigger = {
            has_completed_focus = BAT_weather_manipulation
        }
		
        state_target = yes
        target_array = BAT.core_states
        on_map_mode = map_only

		ai_will_do = {
			base = 0
		}

		cost = 30
		days_remove = 70
		
		complete_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_SPP_flood"
			FROM = {
			    add_province_modifier = {
				    static_modifiers = { 
						flooded 
					}
					province = {
						all_provinces = yes
					}
				}
			}
			hidden_effect = {
			    FROM = {
			        set_state_flag = BAT_using_SPP_tower
				}
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_SPP_flood"
            FROM = {
			    remove_province_modifier = {
				    static_modifiers = { 
						flooded 
					}
					province = {
						all_provinces = yes
					} 
				}
			}
			hidden_effect = {
			    FROM = {
			        clr_state_flag = BAT_using_SPP_tower
				}
			}
		}
	}
	
	BAT_SPP_storm = {
		icon = generic_scorched_earth
		available = {
		    FROM = {
			    NOT = {
				    has_state_flag = BAT_using_SPP_tower
				}
			}
		}
		visible = {
			has_completed_focus = BAT_weather_manipulation
			FROM = {
				has_state_flag = BAT_SPP_tower
				is_core_of = BAT
				is_owned_and_controlled_by = BAT
			}
		}
		target_root_trigger = {
            has_completed_focus = BAT_weather_manipulation
        }
		
        state_target = yes
        target_array = BAT.core_states
        on_map_mode = map_only

		ai_will_do = {
			base = 0
		}

		cost = 30
		days_remove = 70
		
		complete_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_SPP_storm"
			FROM = {
			    add_province_modifier = {
				    static_modifiers = { 
						weather_rain_heavy 
					}
					province = {
						all_provinces = yes
					}
				}
			}
			hidden_effect = {
			    FROM = {
			        set_state_flag = BAT_using_SPP_tower
				}
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_SPP_storm"
            FROM = {
			    remove_province_modifier = {
				    static_modifiers = { 
						weather_rain_heavy 
					}
					province = {
						all_provinces = yes
					} 
				}
			}
			hidden_effect = {
			    FROM = {
			        clr_state_flag = BAT_using_SPP_tower
				}
			}
		}
	}
	
	BAT_SPP_snow = {
		icon = hol_drain_water_lines
		available = {
		    FROM = {
			    NOT = {
				    has_state_flag = BAT_using_SPP_tower
				}
			}
		}
		visible = {
			has_completed_focus = BAT_weather_manipulation
			FROM = {
				has_state_flag = BAT_SPP_tower
				is_core_of = BAT
				is_owned_and_controlled_by = BAT
			}
		}
		target_root_trigger = {
            has_completed_focus = BAT_weather_manipulation
        }
		
        state_target = yes
        target_array = BAT.core_states
        on_map_mode = map_only

		ai_will_do = {
			base = 0
		}

		cost = 30
		days_remove = 70
		
		complete_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_SPP_snow"
			FROM = {
			    add_province_modifier = {
				    static_modifiers = { 
						weather_blizzard 
					}
					province = {
						all_provinces = yes
					}
				}
			}
			hidden_effect = {
			    FROM = {
			        set_state_flag = BAT_using_SPP_tower
				}
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_SPP_snow"
            FROM = {
			    remove_province_modifier = {
				    static_modifiers = { 
						weather_blizzard 
					}
					province = {
						all_provinces = yes
					} 
				}
			}
			hidden_effect = {
			    FROM = {
			        clr_state_flag = BAT_using_SPP_tower
				}
			}
		}
	}
}

BAT_the_triarchy_category = {
    BAT_change_payment_type = {
		icon = GFX_decision_ger_mefo_bills

		cost = 0

		ai_will_do = {
			factor = 0
		}

		complete_effect = {
			log = "[GetDateText] [Root.GetName]: decision BAT_change_payment_type"
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				custom_effect_tooltip = BAT_change_to_paying_with_party_popularity_tp
				clr_country_flag = BAT_paying_with_political_power
				set_country_flag = BAT_paying_with_party_popularity
			}
			else_if = {
				limit = { 
					has_country_flag = BAT_paying_with_party_popularity 
				}
				custom_effect_tooltip = BAT_change_to_paying_with_political_power_tp
				clr_country_flag = BAT_paying_with_party_popularity
				set_country_flag = BAT_paying_with_political_power
			}
		}
	}
	
	BAT_restore_our_dignity = {
		icon = generic_intelligence_operation
		allowed = {
		    original_tag = BAT
		}
		available = {
			is_subject = no
			has_country_flag = BAT_reclamation_war_unlocked
		}		
		targets = { TBK ZAR }
		targets_dynamic = yes
		target_trigger = {
			FROM = { 
			    #has_country_flag = BAT_took_BAT_states
				owns_state = 815
				owns_state = 691
			    OR = {
			        original_tag = TBK
					original_tag = ZAR
				}
			}
		}
		target_root_trigger = {
		    has_country_flag = BAT_triarchy_formed
		}
		visible = {
			has_country_flag = BAT_triarchy_formed
			FROM = {
				exists = yes
				OR = {
					is_neighbor_of = ROOT
					any_neighbor_country = {
				    	is_subject_of = ROOT
					}
				}
				NOT = { 
				    has_war_with = ROOT 
				}
				NOT = {
				    is_subject_of = ROOT
				}
			}
		}
		cancel_trigger = {
			OR = {
				is_subject = yes
				FROM = {
					OR = {
						exists = no
						is_subject = yes
						has_war_with = ROOT
					}
				}
			}
		}
		
		cost = 20
		fire_only_once = yes
		
		days_remove = 30
		war_with_target_on_remove = yes
		
		ai_will_do = {
			factor = 100
			modifier = {
				factor = 0
				has_war = yes
			}
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_conquer_the_savages target: [From.GetName]"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = 1000
                }
            }
			hidden_effect = {
				FROM = {
					set_country_flag = BAT_took_BAT_states
				}
				if = {
				    limit = {
					    FROM = {
						    is_ai = no
						}
					}
					FROM = {
					    country_event = {
							id = bat.155
						}
					}
				}
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove BAT_conquer_the_savages target: [From.GetName]"
			FROM = {
                add_ai_strategy = {
                    type = prepare_for_war
                    id = ROOT
                    value = -1000
                }
            }
			hidden_effect = {
				create_wargoal = { 
					type = annex_everything 
					target = FROM
				}
			}
			declare_war_on = {
                target = FROM
                type = annex_everything
            }
		}
	}
	
	BAT_support_socialist_resistance_in_815_and_691 = {
		icon = generic_nationalism
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			communism < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		target_root_trigger = {
            has_country_flag = BAT_triarchy_formed
        }
        state_target = yes
        targets = { 815 691 }
        on_map_mode = map_and_decisions_view
		
		custom_cost_text = BAT_25CP_2CM
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				command_power > 24
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_support_socialist_resistance_in_815"
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_command_power = -25
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = communism
						popularity = 0.02
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20
					value = 1 
				}
			}
			FROM = {
				add_resistance = 2.5
				add_resistance_target = 2.5
                add_compliance = -2.5				
			}
		}
	}
	
	BAT_support_harmonist_resistance_in_815_and_691 = {
		icon = generic_nationalism
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			democratic < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		target_root_trigger = {
            has_country_flag = BAT_triarchy_formed
        }
        state_target = yes
        targets = { 815 691 }
        on_map_mode = map_and_decisions_view
		
		custom_cost_text = BAT_25CP_2HR
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				command_power > 24
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_support_harmonist_resistance_in_815"
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_command_power = -25
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = democratic
						popularity = 0.02
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20
					value = 1 
				}
			}
			FROM = {
				add_resistance = 2.5
				add_resistance_target = 2.5
                add_compliance = -2.5				
			}
		}
	}
	
	BAT_support_neutrality_resistance_in_815_and_691 = {
		icon = generic_nationalism
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			neutrality < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		target_root_trigger = {
            has_country_flag = BAT_triarchy_formed
        }
        state_target = yes
        targets = { 815 691 }
        on_map_mode = map_and_decisions_view
		
		custom_cost_text = BAT_25CP_2NA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				command_power > 24
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_support_neutrality_resistance_in_815_and_691"
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_command_power = -25
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = neutrality
						popularity = 0.02
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20
					value = 1 
				}
			}
			FROM = {
				add_resistance = 2.5
				add_resistance_target = 2.5
                add_compliance = -2.5				
			}
		}
	}
	
	BAT_support_supremacist_resistance_in_815_and_691 = {
		icon = generic_nationalism
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			fascism < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		target_root_trigger = {
            has_country_flag = BAT_triarchy_formed
        }
        state_target = yes
        targets = { 815 691 }
        on_map_mode = map_and_decisions_view
		
		custom_cost_text = BAT_25CP_2FA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				command_power > 24
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_support_supremacist_resistance_in_815_and_691"
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_command_power = -25
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = fascism
						popularity = 0.02
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20
					value = 1 
				}
			}
			FROM = {
				add_resistance = 2.5
				add_resistance_target = 2.5
                add_compliance = -2.5				
			}
		}
	}
	
	BAT_support_socialist_resistance_in_815_and_691_2 = {
		icon = infiltrate_state
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			communism < 0.55
		}
		visible = {
		    BAT_Communism_Popularity_level_2_dec = yes
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		target_root_trigger = {
            has_country_flag = BAT_triarchy_formed
        }
        state_target = yes
        targets = { 815 691 }
        on_map_mode = map_and_decisions_view
		
		custom_cost_text = BAT_50CP_4CM
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				command_power > 49
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_support_socialist_resistance_in_815_2"
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_command_power = -50
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = communism
						popularity = 0.04
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20
					value = 1 
				}
			}
			FROM = {
				add_resistance = 5
				add_resistance_target = 5
                add_compliance = -5 				
			}
		}
	}
	
	BAT_support_harmonist_resistance_in_815_and_691_2 = {
		icon = infiltrate_state
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			democratic < 0.55
		}
		visible = {
		    BAT_Harmonist_Popularity_level_2_dec = yes
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		target_root_trigger = {
            has_country_flag = BAT_triarchy_formed
        }
        state_target = yes
        targets = { 815 691 }
        on_map_mode = map_and_decisions_view
		
		custom_cost_text = BAT_50CP_4HR
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				command_power > 49
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_support_harmonist_resistance_in_815_2"
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_command_power = -50
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = democratic
						popularity = 0.04
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20
					value = 1 
				}
			}
			FROM = {
				add_resistance = 5
				add_resistance_target = 5
                add_compliance = -5 				
			}
		}
	}
	
	BAT_support_neutrality_resistance_in_815_and_691_2 = {
		icon = infiltrate_state
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			neutrality < 0.55
		}
		visible = {
		    BAT_Neutrality_Popularity_level_2_dec = yes
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		target_root_trigger = {
            has_country_flag = BAT_triarchy_formed
        }
        state_target = yes
        targets = { 815 691 }
        on_map_mode = map_and_decisions_view
		
		custom_cost_text = BAT_50CP_4NA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				command_power > 49
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_support_neutrality_resistance_in_815_and_691_2"
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_command_power = -50
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = neutrality
						popularity = 0.04
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20
					value = 1 
				}
			}
			FROM = {
				add_resistance = 5
				add_resistance_target = 5
                add_compliance = -5 				
			}
		}
	}
	
	BAT_support_supremacist_resistance_in_815_and_691_2 = {
		icon = infiltrate_state
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			fascism < 0.55
		}
		visible = {
		    BAT_Fascism_Popularity_level_2_dec = yes
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		target_root_trigger = {
            has_country_flag = BAT_triarchy_formed
        }
        state_target = yes
        targets = { 815 691 }
        on_map_mode = map_and_decisions_view
		
		custom_cost_text = BAT_50CP_4FA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				command_power > 49
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_support_supremacist_resistance_in_815_and_691_2"
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_command_power = -50
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = fascism
						popularity = 0.04
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20
					value = 1 
				}
			}
			FROM = {
				add_resistance = 5
				add_resistance_target = 5
                add_compliance = -5
			}
		}
	}
	
	BAT_socialist_resources_1 = {
		icon = hol_attract_foreign_investors
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Communism_Popularity_level_1_dec = yes
			communism < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_20PP_3CM
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 19
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_socialist_resources_1"
			add_stability = 0.03
			add_war_support = 0.03
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -20
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = communism
						popularity = 0.03
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_harmonist_resources_1 = {
		icon = generic_operation
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Harmonist_Popularity_level_1_dec = yes
			democratic < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_20PP_3HR
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 19
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_harmonist_resources_1"
			every_owned_state = {
				limit = { 
			    	is_core_of = ROOT 
				}
				add_manpower = 8000
		    }
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -20
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = democratic
						popularity = 0.03
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_neutrality_resources_1 = {
		icon = hol_exchange_intelligence_data
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Neutrality_Popularity_level_1_dec = yes
			neutrality < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_20PP_3NA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 19
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_neutrality_resources_1"
			add_stability = 0.03
			add_war_support = 0.03
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -20
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = neutrality
						popularity = 0.03
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_supremacist_resources_1 = {
		icon = ger_military_buildup
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Fascism_Popularity_level_1_dec = yes
			fascism < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_20PP_3FA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 19
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_supremacist_resources_1"
			add_equipment_to_stockpile = { 
				type = infantry_equipment 
				amount = 300 
			}
			add_equipment_to_stockpile = {
				type = support_equipment
				amount = 75
			}
			add_equipment_to_stockpile = { 
				type = artillery_equipment 
				amount = 25 
			}
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -20
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = fascism
						popularity = 0.03
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_socialist_resources_2 = {
		icon = hol_draw_up_staff_plans
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Communism_Popularity_level_2_dec = yes
			communism < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_40PP_4CM
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 39
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_socialist_resources_2"
			every_owned_state = {
				limit = { 
			    	is_core_of = ROOT 
				}
				add_extra_state_shared_building_slots = 1
		    }
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -40
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = communism
						popularity = 0.04
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_harmonist_resources_2 = {
		icon = generic_prepare_civil_war
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Harmonist_Popularity_level_2_dec = yes
			democratic < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_40PP_4HR
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 39
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_harmonist_resources_2"
			add_stability = 0.03
			add_equipment_to_stockpile = { 
				type = infantry_equipment 
				amount = 150 
			}
			add_equipment_to_stockpile = {
				type = support_equipment
				amount = 50
			}
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -40
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = democratic
						popularity = 0.04
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_neutrality_resources_2 = {
		icon = generic_army_support
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Neutrality_Popularity_level_2_dec = yes
			neutrality < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_40PP_4NA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 39
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_neutrality_resources_2"
			army_experience = 15
			add_manpower = 5000
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -40
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = neutrality
						popularity = 0.04
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_supremacist_resources_2 = {
		icon = gre_faction_management
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Fascism_Popularity_level_2_dec = yes
			fascism < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_40PP_4FA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 39
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_supremacist_resources_2"
			add_equipment_to_stockpile = {
				type = motorized_equipment
				amount = 150
			}
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -40
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = fascism
						popularity = 0.04
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_socialist_resources_3 = {
		icon = generic_construction
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Communism_Popularity_level_3_dec = yes
			communism < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_60PP_5CM
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 59
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_socialist_resources_3"
			add_stability = 0.03
			every_owned_state = {
				limit = { 
			    	is_core_of = ROOT 
				}
				add_manpower = 5000
		    }
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -60
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = communism
						popularity = 0.05
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_harmonist_resources_3 = {
		icon = gre_investment_decisions
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Harmonist_Popularity_level_3_dec = yes
			democratic < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_60PP_5HR
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 59
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_harmonist_resources_3"
			add_offsite_building = {
				type = industrial_complex
				level = 1
			}
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -60
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = democratic
						popularity = 0.05
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_neutrality_resources_3 = {
		icon = generic_industry
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Neutrality_Popularity_level_3_dec = yes
			neutrality < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_60PP_5NA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 59
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_neutrality_resources_3"
			add_equipment_to_stockpile = { 
				type = infantry_equipment 
				amount = 500 
			}
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -60
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = neutrality
						popularity = 0.05
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_supremacist_resources_3 = {
		icon = hol_war_on_pacifism
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Fascism_Popularity_level_3_dec = yes
			fascism < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_60PP_5FA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 59
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_supremacist_resources_3"
			add_war_support = 0.05
			add_manpower = 7500
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -60
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = fascism
						popularity = 0.05
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_socialist_resources_4 = {
		icon = hol_radio_oranje
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Communism_Popularity_level_4_dec = yes
			communism < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_80PP_6CM
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 79
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_socialist_resources_4"
			add_manpower = 10000
			add_war_support = 0.03
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -80
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = communism
						popularity = 0.06
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_harmonist_resources_4 = {
		icon = generic_factory
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Harmonist_Popularity_level_4_dec = yes
			democratic < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_80PP_6HR
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 79
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_harmonist_resources_4"
			add_offsite_building = {
				type = arms_factory
				level = 1
			}
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -80
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = democratic
						popularity = 0.06
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_neutrality_resources_4 = {
		icon = generic_tank
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Neutrality_Popularity_level_4_dec = yes
			neutrality < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_80PP_6NA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 79
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_neutrality_resources_4"
			add_war_support = 0.03
			add_offsite_building = {
				type = arms_factory
				level = 1
			}
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -80
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = neutrality
						popularity = 0.06
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_supremacist_resources_4 = {
		icon = onmap_recruit_operative
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			BAT_Fascism_Popularity_level_4_dec = yes
			fascism < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_80PP_6FA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 79
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_supremacist_resources_4"
			add_offsite_building = {
				type = arms_factory
				level = 1
			}
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -80
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = fascism
						popularity = 0.06
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_socialist_resources_5 = {
		icon = eng_puppet_usa
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			NOT = {
			    OR = {
				    has_idea = BAT_level_5_socialist_war
					has_idea = BAT_level_5_harmonist_war
					has_idea = BAT_level_5_neutrality_war
					has_idea = BAT_level_5_supremacist_war
				}
			}
			BAT_Communism_Popularity_level_5_dec = yes
			communism < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_100PP_7CM
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 99
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_socialist_resources_5"
			add_ideas = BAT_level_5_socialist_war
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -100
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = communism
						popularity = 0.07
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_harmonist_resources_5 = {
		icon = eng_puppet_usa
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			NOT = {
			    OR = {
				    has_idea = BAT_level_5_socialist_war
					has_idea = BAT_level_5_harmonist_war
					has_idea = BAT_level_5_neutrality_war
					has_idea = BAT_level_5_supremacist_war
				}
			}
			BAT_Harmonist_Popularity_level_5_dec = yes
			democratic < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_100PP_7HR
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 99
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_harmonist_resources_5"
			add_ideas = BAT_level_5_harmonist_war
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -100
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = democratic
						popularity = 0.07
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_neutrality_resources_5 = {
		icon = eng_puppet_usa
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			NOT = {
			    OR = {
				    has_idea = BAT_level_5_socialist_war
					has_idea = BAT_level_5_harmonist_war
					has_idea = BAT_level_5_neutrality_war
					has_idea = BAT_level_5_supremacist_war
				}
			}
			BAT_Neutrality_Popularity_level_5_dec = yes
			neutrality < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_100PP_7NA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 99
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_neutrality_resources_5"
			add_ideas = BAT_level_5_neutrality_war
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -100
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = neutrality
						popularity = 0.07
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
	
	BAT_supremacist_resources_5 = {
		icon = eng_puppet_usa
		available = {
		    NOT = {
			    has_country_flag = BAT_national_catastrophe_category_flag
			}
			NOT = {
			    OR = {
				    has_idea = BAT_level_5_socialist_war
					has_idea = BAT_level_5_harmonist_war
					has_idea = BAT_level_5_neutrality_war
					has_idea = BAT_level_5_supremacist_war
				}
			}
			BAT_Fascism_Popularity_level_5_dec = yes
			fascism < 0.55
		}
		visible = {
		    OR = {
				815 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
				691 = {
					NOT = {
					    is_owned_and_controlled_by = ROOT
					}
					owner = {
					    NOT = {
						    has_war_with = ROOT 
                        }
					}
				}
			}
		}
		
		custom_cost_text = BAT_100PP_7FA
		custom_cost_trigger = {
			if = {
				limit = { 
					has_country_flag = BAT_paying_with_political_power 
				}
				has_political_power > 99
			}
		}
		days_re_enable = 30
		
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_country_flag = BAT_sanity_check
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: decision BAT_supremacist_resources_5"
			add_ideas = BAT_level_5_supremacist_war
			hidden_effect = {
				if = {
					limit = { 
						has_country_flag = BAT_paying_with_political_power 
					}
					add_political_power = -100
				}
				else_if = {
					limit = { 
						has_country_flag = BAT_paying_with_party_popularity 
					}
					add_popularity = {
						ideology = fascism
						popularity = 0.07
					}
				}
				set_country_flag = { 
					flag = BAT_sanity_check 
					days = 50 
					value = 1 
				}
				set_country_flag = { 
					flag = BAT_national_catastrophe_category_flag 
					days = 20 
					value = 1 
				}
			}
		}
	}
}

BAT_the_troubles_category = {
    BAT_anti_socialist_paramilitary_1_operation = {
        icon = decision_repression
        available = {
		    NOT = {
			    has_country_flag = BAT_not_fighting_paramilitary
			}
		    custom_trigger_tooltip = {
				tooltip = BAT_CPLO_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_socialist_paramilitary_1
                		value = 0
                		compare = less_than
            		}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_socialist_paramilitary_1
                value = 0
                compare = greater_than
            }
		}
        target_root_trigger = {
            has_country_flag = BAT_the_troubles_flag
			check_variable = {
                var = BAT_socialist_paramilitary_1
                value = 0
                compare = greater_than
            }
        }
        state_target = yes
        targets = { 713 690 }
        on_map_mode = map_and_decisions_view
    
        ai_will_do = {
            base = 100
        }
        
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 14
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_15_manpower_500
        days_re_enable = 30
		days_remove = 7
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_socialist_paramilitary_1_operation"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -15
			    add_manpower = 500
				set_country_flag = BAT_not_fighting_paramilitary
			}
        }
		remove_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_socialist_paramilitary_1_operation"
			custom_effect_tooltip = BAT_CPLO_minor_decrease_tp
		   	FROM = {
               	add_resistance = -5.0
				add_compliance = 5.0
            }
			subtract_from_variable = {
				var = BAT_socialist_paramilitary_1
				value = 0.5
			}
			add_to_variable = {
				var = BAT_fought_socialists
				value = 1
			}
			clamp_variable = {
				var = BAT_socialist_paramilitary_1
				min = 0
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_socialist_paramilitary_1
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			hidden_effect = {
			    clr_country_flag = BAT_not_fighting_paramilitary
			}
		}
    }
	
	BAT_anti_socialist_paramilitary_2_operation = {
        icon = decision_repression
        available = {
		    NOT = {
			    has_country_flag = BAT_not_fighting_paramilitary
			}
		    custom_trigger_tooltip = {
				tooltip = BAT_RCRA_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_socialist_paramilitary_2
                		value = 0
                		compare = less_than
            		}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_socialist_paramilitary_2
                value = 0
                compare = greater_than
            }
		}
        target_root_trigger = {
            has_country_flag = BAT_the_troubles_flag
			check_variable = {
                var = BAT_socialist_paramilitary_2
                value = 0
                compare = greater_than
            }
        }
        state_target = yes
        targets = { 712 815 }
        on_map_mode = map_and_decisions_view
    
        ai_will_do = {
            base = 100
        }
        
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 14
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_15_manpower_500
        days_re_enable = 30
		days_remove = 7
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_socialist_paramilitary_2_operation"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -15
			    add_manpower = -500
				set_country_flag = BAT_not_fighting_paramilitary
			}
        }
		remove_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_socialist_paramilitary_2_operation"
			custom_effect_tooltip = BAT_RCRA_minor_decrease_tp
		   	FROM = {
               	add_resistance = -5.0
				add_compliance = 5.0
            }
			subtract_from_variable = {
				var = BAT_socialist_paramilitary_2
				value = 0.5
			}
			add_to_variable = {
				var = BAT_fought_socialists
				value = 1
			}
			clamp_variable = {
				var = BAT_socialist_paramilitary_2
				min = 0
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_socialist_paramilitary_2
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			hidden_effect = {
			    clr_country_flag = BAT_not_fighting_paramilitary
			}
		}
    }
	
	BAT_anti_socialist_paramilitary_3_operation = {
        icon = decision_repression
        available = {
		    NOT = {
			    has_country_flag = BAT_not_fighting_paramilitary
			}
		    custom_trigger_tooltip = {
				tooltip = BAT_RCRA_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_socialist_paramilitary_3
                		value = 0
                		compare = less_than
            		}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_socialist_paramilitary_3
                value = 0
                compare = greater_than
            }
		}
        target_root_trigger = {
            has_country_flag = BAT_the_troubles_flag
			check_variable = {
                var = BAT_socialist_paramilitary_3
                value = 0
                compare = greater_than
            }
        }
        state_target = yes
        targets = { 689 691 }
        on_map_mode = map_and_decisions_view
    
        ai_will_do = {
            base = 100
        }
        
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 14
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_15_manpower_500
        days_re_enable = 30
		days_remove = 7
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_socialist_paramilitary_3_operation"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -15
			    add_manpower = -500
				set_country_flag = BAT_not_fighting_paramilitary
			}
        }
		remove_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_socialist_paramilitary_3_operation"
			custom_effect_tooltip = BAT_CNLA_minor_decrease_tp
		   	FROM = {
               	add_resistance = -5.0
				add_compliance = 5.0
            }
			subtract_from_variable = {
				var = BAT_socialist_paramilitary_3
				value = 0.5
			}
			add_to_variable = {
				var = BAT_fought_socialists
				value = 1
			}
			clamp_variable = {
				var = BAT_socialist_paramilitary_3
				min = 0
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_socialist_paramilitary_3
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			hidden_effect = {
			    clr_country_flag = BAT_not_fighting_paramilitary
			}
		}
    }
	
	BAT_anti_harmonist_paramilitary_1_operation = {
        icon = decision_repression
        available = {
		    NOT = {
			    has_country_flag = BAT_not_fighting_paramilitary
			}
		    custom_trigger_tooltip = {
				tooltip = BAT_TMS_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_harmonist_paramilitary_1
                		value = 0
                		compare = less_than
            		}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_harmonist_paramilitary_1
                value = 0
                compare = greater_than
            }
		}
        target_root_trigger = {
            has_country_flag = BAT_the_troubles_flag
			check_variable = {
                var = BAT_harmonist_paramilitary_1
                value = 0
                compare = greater_than
            }
        }
        state_target = yes
        targets = { 815 691 }
        on_map_mode = map_and_decisions_view
    
        ai_will_do = {
            base = 100
        }
        
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 14
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_15_manpower_500
        days_re_enable = 30
		days_remove = 7
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_harmonist_paramilitary_1_operation"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -15
			    add_manpower = -500
				set_country_flag = BAT_not_fighting_paramilitary
			}
        }
		remove_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_harmonist_paramilitary_1_operation"
			custom_effect_tooltip = BAT_TMS_minor_decrease_tp
		   	FROM = {
               	add_resistance = -5.0
				add_compliance = 5.0
            }
			subtract_from_variable = {
				var = BAT_harmonist_paramilitary_1
				value = 0.5
			}
			add_to_variable = {
				var = BAT_fought_harmonists
				value = 1
			}
			clamp_variable = {
				var = BAT_harmonist_paramilitary_1
				min = 0
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_harmonist_paramilitary_1
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			hidden_effect = {
			    clr_country_flag = BAT_not_fighting_paramilitary
			}
		}
    }
	
	BAT_anti_harmonist_paramilitary_2_operation = {
        icon = decision_repression
        available = {
		    NOT = {
			    has_country_flag = BAT_not_fighting_paramilitary
			}
		    custom_trigger_tooltip = {
				tooltip = BAT_CRA_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_harmonist_paramilitary_2
                		value = 0
                		compare = less_than
            		}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_harmonist_paramilitary_2
                value = 0
                compare = greater_than
            }
		}
        target_root_trigger = {
            has_country_flag = BAT_the_troubles_flag
			check_variable = {
                var = BAT_harmonist_paramilitary_2
                value = 0
                compare = greater_than
            }
        }
        state_target = yes
        targets = { 713 712 }
        on_map_mode = map_and_decisions_view
    
        ai_will_do = {
            base = 100
        }
        
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 14
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_15_manpower_500
        days_re_enable = 30
		days_remove = 7
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_harmonist_paramilitary_2_operation"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -15
			    add_manpower = -500
				set_country_flag = BAT_not_fighting_paramilitary
			}
        }
		remove_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_harmonist_paramilitary_2_operation"
			custom_effect_tooltip = BAT_CRA_minor_decrease_tp
		   	FROM = {
               	add_resistance = -5.0
				add_compliance = 5.0
            }
			subtract_from_variable = {
				var = BAT_harmonist_paramilitary_2
				value = 0.5
			}
			add_to_variable = {
				var = BAT_fought_harmonists
				value = 1
			}
			clamp_variable = {
				var = BAT_harmonist_paramilitary_2
				min = 0
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_harmonist_paramilitary_2
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			hidden_effect = {
			    clr_country_flag = BAT_not_fighting_paramilitary
			}
		}
    }
	
	BAT_anti_harmonist_paramilitary_3_operation = {
        icon = decision_repression
        available = {
		    NOT = {
			    has_country_flag = BAT_not_fighting_paramilitary
			}
		    custom_trigger_tooltip = {
				tooltip = BAT_PM_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_harmonist_paramilitary_3
                		value = 0
                		compare = less_than
            		}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_harmonist_paramilitary_3
                value = 0
                compare = greater_than
            }
		}
        target_root_trigger = {
            has_country_flag = BAT_the_troubles_flag
			check_variable = {
                var = BAT_harmonist_paramilitary_3
                value = 0
                compare = greater_than
            }
        }
        state_target = yes
        targets = { 689 690 }
        on_map_mode = map_and_decisions_view
    
        ai_will_do = {
            base = 100
        }
        
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 14
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_15_manpower_500
        days_re_enable = 30
		days_remove = 7
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_harmonist_paramilitary_3_operation"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -15
			    add_manpower = -500
				set_country_flag = BAT_not_fighting_paramilitary
			}
        }
		remove_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_harmonist_paramilitary_3_operation"
			custom_effect_tooltip = BAT_PM_minor_decrease_tp
		   	FROM = {
               	add_resistance = -5.0
				add_compliance = 5.0
            }
			subtract_from_variable = {
				var = BAT_harmonist_paramilitary_3
				value = 0.5
			}
			add_to_variable = {
				var = BAT_fought_harmonists
				value = 1
			}
			clamp_variable = {
				var = BAT_harmonist_paramilitary_3
				min = 0
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_harmonist_paramilitary_3
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			hidden_effect = {
			    clr_country_flag = BAT_not_fighting_paramilitary
			}
		}
    }
	
	BAT_anti_neutrality_paramilitary_1_operation = {
        icon = decision_repression
        available = {
		    NOT = {
			    has_country_flag = BAT_not_fighting_paramilitary
			}
		    custom_trigger_tooltip = {
				tooltip = BAT_SM_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_neutrality_paramilitary_1
                		value = 0
                		compare = less_than
            		}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_neutrality_paramilitary_1
                value = 0
                compare = greater_than
            }
		}
        target_root_trigger = {
            has_country_flag = BAT_the_troubles_flag
			check_variable = {
                var = BAT_neutrality_paramilitary_1
                value = 0
                compare = greater_than
            }
        }
        state_target = yes
        targets = { 689 691 }
        on_map_mode = map_and_decisions_view
    
        ai_will_do = {
            base = 100
        }
        
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 14
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_15_manpower_500
        days_re_enable = 30
		days_remove = 7
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_neutrality_paramilitary_1_operation"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -15
			    add_manpower = -500
				set_country_flag = BAT_not_fighting_paramilitary
			}
        }
		remove_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_neutrality_paramilitary_1_operation"
			custom_effect_tooltip = BAT_SM_minor_decrease_tp
		   	FROM = {
               	add_resistance = -5.0
				add_compliance = 5.0
            }
			subtract_from_variable = {
				var = BAT_neutrality_paramilitary_1
				value = 0.5
			}
			add_to_variable = {
				var = BAT_fought_neutrality
				value = 1
			}
			clamp_variable = {
				var = BAT_neutrality_paramilitary_1
				min = 0
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_neutrality_paramilitary_1
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			hidden_effect = {
			    clr_country_flag = BAT_not_fighting_paramilitary
			}
		}
    }
	
	BAT_anti_neutrality_paramilitary_2_operation = {
        icon = decision_repression
        available = {
		    NOT = {
			    has_country_flag = BAT_not_fighting_paramilitary
			}
		    custom_trigger_tooltip = {
				tooltip = BAT_ACRA_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_neutrality_paramilitary_2
                		value = 0
                		compare = less_than
            		}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_neutrality_paramilitary_2
                value = 0
                compare = greater_than
            }
		}
        target_root_trigger = {
            has_country_flag = BAT_the_troubles_flag
			check_variable = {
                var = BAT_neutrality_paramilitary_2
                value = 0
                compare = greater_than
            }
        }
        state_target = yes
        targets = { 713 815 }
        on_map_mode = map_and_decisions_view
    
        ai_will_do = {
            base = 100
        }
        
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 14
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_15_manpower_500
        days_re_enable = 30
		days_remove = 7
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_neutrality_paramilitary_2_operation"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -15
			    add_manpower = -500
				set_country_flag = BAT_not_fighting_paramilitary
			}
        }
		remove_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_neutrality_paramilitary_2_operation"
			custom_effect_tooltip = BAT_ACRA_minor_decrease_tp
		   	FROM = {
               	add_resistance = -5.0
				add_compliance = 5.0
            }
			subtract_from_variable = {
				var = BAT_neutrality_paramilitary_2
				value = 0.5
			}
			add_to_variable = {
				var = BAT_fought_neutrality
				value = 1
			}
			clamp_variable = {
				var = BAT_neutrality_paramilitary_2
				min = 0
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_neutrality_paramilitary_2
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			hidden_effect = {
			    clr_country_flag = BAT_not_fighting_paramilitary
			}
		}
    }
	
	BAT_anti_neutrality_paramilitary_3_operation = {
        icon = decision_repression
        available = {
		    NOT = {
			    has_country_flag = BAT_not_fighting_paramilitary
			}
		    custom_trigger_tooltip = {
				tooltip = BAT_CVG_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_neutrality_paramilitary_3
                		value = 0
                		compare = less_than
            		}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_neutrality_paramilitary_3
                value = 0
                compare = greater_than
            }
		}
        target_root_trigger = {
            has_country_flag = BAT_the_troubles_flag
			check_variable = {
                var = BAT_neutrality_paramilitary_3
                value = 0
                compare = greater_than
            }
        }
        state_target = yes
        targets = { 690 712 }
        on_map_mode = map_and_decisions_view
    
        ai_will_do = {
            base = 100
        }
        
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 14
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_15_manpower_500
        days_re_enable = 30
		days_remove = 7
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_neutrality_paramilitary_3_operation"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -15
			    add_manpower = -500
				set_country_flag = BAT_not_fighting_paramilitary
			}
        }
		remove_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_neutrality_paramilitary_3_operation"
			custom_effect_tooltip = BAT_CVG_minor_decrease_tp
		   	FROM = {
               	add_resistance = -5.0
				add_compliance = 5.0
            }
			subtract_from_variable = {
				var = BAT_neutrality_paramilitary_3
				value = 0.5
			}
			add_to_variable = {
				var = BAT_fought_neutrality
				value = 1
			}
			clamp_variable = {
				var = BAT_neutrality_paramilitary_3
				min = 0
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_neutrality_paramilitary_3
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			hidden_effect = {
			    clr_country_flag = BAT_not_fighting_paramilitary
			}
		}
    }
	
	BAT_anti_supremacist_paramilitary_1_operation = {
        icon = decision_repression
        available = {
		    NOT = {
			    has_country_flag = BAT_not_fighting_paramilitary
			}
		    custom_trigger_tooltip = {
				tooltip = BAT_CN_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_supremacist_paramilitary_1
                		value = 0
                		compare = less_than
            		}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_supremacist_paramilitary_1
                value = 0
                compare = greater_than
            }
		}
        target_root_trigger = {
            has_country_flag = BAT_the_troubles_flag
			check_variable = {
                var = BAT_supremacist_paramilitary_1
                value = 0
                compare = greater_than
            }
        }
        state_target = yes
        targets = { 713 712 }
        on_map_mode = map_and_decisions_view
    
        ai_will_do = {
            base = 100
        }
        
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 14
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_15_manpower_500
        days_re_enable = 30
		days_remove = 7
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_supremacist_paramilitary_1_operation"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -15
			    add_manpower = -500
				set_country_flag = BAT_not_fighting_paramilitary
			}
        }
		remove_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_supremacist_paramilitary_1_operation"
			custom_effect_tooltip = BAT_CN_minor_decrease_tp
		   	FROM = {
               	add_resistance = -5.0
				add_compliance = 5.0
            }
			subtract_from_variable = {
				var = BAT_supremacist_paramilitary_1
				value = 0.5
			}
			add_to_variable = {
				var = BAT_fought_supremacists
				value = 1
			}
			clamp_variable = {
				var = BAT_supremacist_paramilitary_1
				min = 0
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_supremacist_paramilitary_1
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			hidden_effect = {
			    clr_country_flag = BAT_not_fighting_paramilitary
			}
		}
    }
	
	BAT_anti_supremacist_paramilitary_2_operation = {
        icon = decision_repression
        available = {
		    NOT = {
			    has_country_flag = BAT_not_fighting_paramilitary
			}
		    custom_trigger_tooltip = {
				tooltip = BAT_LN_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_supremacist_paramilitary_2
                		value = 0
                		compare = less_than
            		}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_supremacist_paramilitary_2
                value = 0
                compare = greater_than
            }
		}
        target_root_trigger = {
            has_country_flag = BAT_the_troubles_flag
			check_variable = {
                var = BAT_supremacist_paramilitary_2
                value = 0
                compare = greater_than
            }
        }
        state_target = yes
        targets = { 690 691 }
        on_map_mode = map_and_decisions_view
    
        ai_will_do = {
            base = 100
        }
        
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 14
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_15_manpower_500
        days_re_enable = 30
		days_remove = 7
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_supremacist_paramilitary_2_operation"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -15
			    add_manpower = -500
				set_country_flag = BAT_not_fighting_paramilitary
			}
        }
		remove_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_supremacist_paramilitary_2_operation"
			custom_effect_tooltip = BAT_LN_minor_decrease_tp
		   	FROM = {
               	add_resistance = -5.0
				add_compliance = 5.0
            }
			subtract_from_variable = {
				var = BAT_supremacist_paramilitary_2
				value = 0.5
			}
			add_to_variable = {
				var = BAT_fought_supremacists
				value = 1
			}
			clamp_variable = {
				var = BAT_supremacist_paramilitary_2
				min = 0
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_supremacist_paramilitary_2
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			hidden_effect = {
			    clr_country_flag = BAT_not_fighting_paramilitary
			}
		}
    }
	
	BAT_anti_supremacist_paramilitary_3_operation = {
        icon = decision_repression
        available = {
		    NOT = {
			    has_country_flag = BAT_not_fighting_paramilitary
			}
		    custom_trigger_tooltip = {
				tooltip = BAT_CAL_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_supremacist_paramilitary_3
                		value = 0
                		compare = less_than
            		}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_supremacist_paramilitary_3
                value = 0
                compare = greater_than
            }
		}
        target_root_trigger = {
            has_country_flag = BAT_the_troubles_flag
			check_variable = {
                var = BAT_supremacist_paramilitary_3
                value = 0
                compare = greater_than
            }
        }
        state_target = yes
        targets = { 689 815 }
        on_map_mode = map_and_decisions_view
    
        ai_will_do = {
            base = 100
        }
        
		custom_cost_trigger = {
			command_power > 14
			has_political_power > 14
			has_manpower > 499
		}
        custom_cost_text = decision_cost_CP_15_pp_15_manpower_500
        days_re_enable = 30
		days_remove = 7
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_supremacist_paramilitary_3_operation"
			hidden_effect = {
			    add_command_power = -15
				add_political_power = -15
			    add_manpower = -500
				set_country_flag = BAT_not_fighting_paramilitary
			}
        }
		remove_effect = {
		    log = "[GetDateText]: [Root.GetName]: Decision remove BAT_anti_supremacist_paramilitary_3_operation"
			custom_effect_tooltip = BAT_CAL_minor_decrease_tp
		   	FROM = {
               	add_resistance = -5.0
				add_compliance = 5.0
            }
			subtract_from_variable = {
				var = BAT_supremacist_paramilitary_3
				value = 0.5
			}
			add_to_variable = {
				var = BAT_fought_supremacists
				value = 1
			}
			clamp_variable = {
				var = BAT_supremacist_paramilitary_3
				min = 0
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_supremacist_paramilitary_3
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			hidden_effect = {
			    clr_country_flag = BAT_not_fighting_paramilitary
			}
		}
    }
	
	BAT_negotiate_with_CPLO = {
        icon = eng_trade_unions_support
        available = {
		    custom_trigger_tooltip = {
				tooltip = BAT_CPLO_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_socialist_paramilitary_1
                		value = 0
                		compare = less_than_or_equals
            		}
				}
			}
			custom_trigger_tooltip = {
				tooltip = BAT_fought_socialists_6_tp
				check_variable = {
                	var = BAT_fought_socialists
                	value = 6
                	compare = greater_than_or_equals
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_socialist_paramilitary_1
                value = 0
                compare = greater_than
            }
			NOT = {
			    OR = {
				    has_government = fascism
					has_country_leader = { 
		                character = BAT_stirling_silver
			            ruling_only = yes
		            }
					has_country_leader = { 
		                character = BAT_gorge_batton
			            ruling_only = yes
		            }
				}
			}
		}
    
        ai_will_do = {
            base = 100
        }
        
        cost = 30
		fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_negotiate_with_CPLO"
        }
    }
	
	BAT_negotiate_with_RCRA = {
        icon = eng_trade_unions_support
        available = {
		    custom_trigger_tooltip = {
				tooltip = BAT_RCRA_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_socialist_paramilitary_2
                		value = 0
                		compare = less_than_or_equals
            		}
				}
			}
			OR = {
				custom_trigger_tooltip = {
					tooltip = BAT_fought_harmonists_2_tp
					check_variable = {
                		var = BAT_fought_harmonists
                		value = 2
                		compare = greater_than_or_equals
					}
				}
				custom_trigger_tooltip = {
					tooltip = BAT_fought_neutrality_2_tp
					check_variable = {
                		var = BAT_fought_neutrality
                		value = 2
                		compare = greater_than_or_equals
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = BAT_not_integrated_the_other_CRA_tp
				NOT = {
				    OR = {
						check_variable = {
                			var = BAT_harmonist_paramilitary_2
                			value = 0
                			compare = less_than
						}
						check_variable = {
                			var = BAT_neutrality_paramilitary_2
                			value = 0
                			compare = less_than
						}
					}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_socialist_paramilitary_2
                value = 0
                compare = greater_than
            }
			NOT = {
				OR = {
				    has_government = fascism
					has_country_leader = { 
		                character = BAT_stirling_silver
			            ruling_only = yes
		            }
					has_country_leader = { 
		                character = BAT_gorge_batton
			            ruling_only = yes
		            }
				}
			}
		}
    
        ai_will_do = {
            base = 100
        }
        
        cost = 30
		fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_negotiate_with_RCRA"
        }
    }
	
	BAT_negotiate_with_CNLA = {
        icon = eng_trade_unions_support
        available = {
		    custom_trigger_tooltip = {
				tooltip = BAT_CNLA_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_socialist_paramilitary_3
                		value = 0
                		compare = less_than_or_equals
            		}
				}
			}
			OR = {
				custom_trigger_tooltip = {
					tooltip = BAT_fought_supremacists_4_tp
					check_variable = {
                		var = BAT_fought_supremacists
                		value = 4
                		compare = greater_than_or_equals
					}
				}
				custom_trigger_tooltip = {
					tooltip = BAT_fought_neutrality_4_tp
					check_variable = {
                		var = BAT_fought_neutrality
                		value = 4
                		compare = greater_than_or_equals
					}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_socialist_paramilitary_3
                value = 0
                compare = greater_than
            }
			NOT = {
			    OR = {
					has_government = fascism
			    	has_country_leader = { 
		            	character = BAT_gorge_batton
			        	ruling_only = yes
		       	 	}
				}
			}
		}
    
        ai_will_do = {
            base = 100
        }
        
        cost = 30
		fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_negotiate_with_CNLA"
			if = {
			    limit = {
				    has_country_leader = { 
		                character = BAT_stirling_silver
			            ruling_only = yes
		            }
				}
				country_event = {
			    	id = bat.169
				}
			}
        }
    }
	
	BAT_negotiate_with_TMS = {
        icon = eng_trade_unions_support
        available = {
		    custom_trigger_tooltip = {
				tooltip = BAT_TMS_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_harmonist_paramilitary_1
                		value = 0
                		compare = less_than_or_equals
            		}
				}
			}
			OR = {
				custom_trigger_tooltip = {
					tooltip = BAT_fought_supremacists_6_tp
					check_variable = {
                		var = BAT_fought_supremacists
                		value = 6
                		compare = greater_than_or_equals
					}
				}
				custom_trigger_tooltip = {
					tooltip = BAT_fought_neutrality_6_tp
					check_variable = {
                		var = BAT_fought_neutrality
                		value = 6
                		compare = greater_than_or_equals
					}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_harmonist_paramilitary_1
                value = 0
                compare = greater_than
            }
			NOT = {
				OR = {
				    has_government = fascism
					has_country_leader = { 
		                character = BAT_stirling_silver
			            ruling_only = yes
		            }
					has_country_leader = { 
		                character = BAT_gorge_batton
			            ruling_only = yes
		            }
				}
			}
		}
    
        ai_will_do = {
            base = 100
        }
        
        cost = 30
		fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_negotiate_with_TMS"
        }
    }
	
	BAT_negotiate_with_CRA = {
        icon = eng_trade_unions_support
        available = {
		    custom_trigger_tooltip = {
				tooltip = BAT_CRA_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_harmonist_paramilitary_2
                		value = 0
                		compare = less_than_or_equals
            		}
				}
			}
			OR = {
				custom_trigger_tooltip = {
					tooltip = BAT_fought_socialists_2_tp
					check_variable = {
                		var = BAT_fought_socialists
                		value = 2
                		compare = greater_than_or_equals
					}
				}
				custom_trigger_tooltip = {
					tooltip = BAT_fought_neutrality_2_tp
					check_variable = {
                		var = BAT_fought_neutrality
                		value = 2
                		compare = greater_than_or_equals
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = BAT_not_integrated_the_other_CRA_2_tp
				NOT = {
				    OR = {
						check_variable = {
                			var = BAT_socialist_paramilitary_2
                			value = 0
                			compare = less_than
						}
						check_variable = {
                			var = BAT_neutrality_paramilitary_2
                			value = 0
                			compare = less_than
						}
					}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_harmonist_paramilitary_2
                value = 0
                compare = greater_than
            }
			NOT = {
				OR = {
				    has_government = fascism
					has_country_leader = { 
		                character = BAT_stirling_silver
			            ruling_only = yes
		            }
					has_country_leader = { 
		                character = BAT_gorge_batton
			            ruling_only = yes
		            }
				}
			}
		}
    
        ai_will_do = {
            base = 100
        }
        
        cost = 30
		fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_negotiate_with_CRA"
        }
    }
	
	BAT_negotiate_with_PM = {
        icon = eng_trade_unions_support
        available = {
		    custom_trigger_tooltip = {
				tooltip = BAT_PM_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_harmonist_paramilitary_3
                		value = 0
                		compare = less_than_or_equals
            		}
				}
			}
			custom_trigger_tooltip = {
				tooltip = BAT_fought_supremacists_4_tp
				check_variable = {
                	var = BAT_fought_supremacists
                	value = 4
                	compare = greater_than_or_equals
				}
			}
			custom_trigger_tooltip = {
				tooltip = BAT_fought_harmonists_2_tp
				check_variable = {
                	var = BAT_fought_harmonists
                	value = 2
                	compare = greater_than_or_equals
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_harmonist_paramilitary_3
                value = 0
                compare = greater_than
            }
			NOT = {
				OR = {
				    has_government = fascism
					has_country_leader = { 
		                character = BAT_stirling_silver
			            ruling_only = yes
		            }
					has_country_leader = { 
		                character = BAT_gorge_batton
			            ruling_only = yes
		            }
				}
			}
		}
    
        ai_will_do = {
            base = 100
        }
        
        cost = 30
		fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_negotiate_with_PM"
        }
    }
	
	BAT_negotiate_with_jackal = {
        icon = eng_trade_unions_support
        available = {
		    custom_trigger_tooltip = {
				tooltip = BAT_TMS_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_harmonist_paramilitary_1
                		value = 0
                		compare = less_than_or_equals
            		}
				}
			}
			custom_trigger_tooltip = {
				tooltip = BAT_CRA_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_harmonist_paramilitary_2
                		value = 0
                		compare = less_than_or_equals
            		}
				}
			}
			custom_trigger_tooltip = {
				tooltip = BAT_PM_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_harmonist_paramilitary_3
                		value = 0
                		compare = less_than_or_equals
            		}
				}
			}
			custom_trigger_tooltip = {
				tooltip = BAT_fought_supremacists_6_tp
				check_variable = {
                	var = BAT_fought_supremacists
                	value = 6
                	compare = greater_than_or_equals
				}
			}
			custom_trigger_tooltip = {
				tooltip = BAT_not_integrated_CAL_tp
				NOT = {
					check_variable = {
                		var = BAT_supremacist_paramilitary_3
                		value = 0
                		compare = less_than
					}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_harmonist_paramilitary_1
                value = 0
                compare = greater_than
            }
			check_variable = {
                var = BAT_harmonist_paramilitary_2
                value = 0
                compare = greater_than
            }
			check_variable = {
                var = BAT_harmonist_paramilitary_3
                value = 0
                compare = greater_than
            }
		    has_country_leader = { 
		        character = BAT_stirling_silver
			    ruling_only = yes
			}
		}
    
        ai_will_do = {
            base = 100
        }
        
        cost = 30
		fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_negotiate_with_jackal"
			if = {
			    limit = {
				    has_country_leader = { 
		                character = BAT_stirling_silver
			            ruling_only = yes
		            }
				}
				country_event = {
			    	id = bat.170
				}
			}
        }
    }
	
	BAT_negotiate_with_ACRA = {
        icon = eng_trade_unions_support
        available = {
		    custom_trigger_tooltip = {
				tooltip = BAT_ACRA_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_neutrality_paramilitary_2
                		value = 0
                		compare = less_than_or_equals
            		}
				}
			}
			OR = {
				custom_trigger_tooltip = {
					tooltip = BAT_fought_socialists_2_tp
					check_variable = {
                		var = BAT_fought_socialists
                		value = 2
                		compare = greater_than_or_equals
					}
				}
				custom_trigger_tooltip = {
					tooltip = BAT_fought_harmonists_2_tp
					check_variable = {
                		var = BAT_fought_harmonists
                		value = 2
                		compare = greater_than_or_equals
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = BAT_not_integrated_the_other_CRA_3_tp
				NOT = {
				    OR = {
						check_variable = {
                			var = BAT_socialist_paramilitary_2
                			value = 0
                			compare = less_than
						}
						check_variable = {
                			var = BAT_harmonist_paramilitary_2
                			value = 0
                			compare = less_than
						}
					}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_neutrality_paramilitary_2
                value = 0
                compare = greater_than
            }
			NOT = {
				OR = {
				    has_government = fascism
					has_country_leader = { 
		                character = BAT_stirling_silver
			            ruling_only = yes
		            }
					has_country_leader = { 
		                character = BAT_gorge_batton
			            ruling_only = yes
		            }
				}
			}
		}
    
        ai_will_do = {
            base = 100
        }
        
        cost = 30
		fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_negotiate_with_ACRA"
        }
    }
	
	BAT_negotiate_with_CVG = {
        icon = eng_trade_unions_support
        available = {
		    custom_trigger_tooltip = {
				tooltip = BAT_CVG_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_harmonist_paramilitary_3
                		value = 0
                		compare = less_than_or_equals
            		}
				}
			}
			OR = {
				custom_trigger_tooltip = {
					tooltip = BAT_fought_supremacists_4_tp
					check_variable = {
                		var = BAT_fought_supremacists
                		value = 4
                		compare = greater_than_or_equals
					}
				}
				custom_trigger_tooltip = {
					tooltip = BAT_fought_socialists_4_tp
					check_variable = {
                		var = BAT_fought_socialists
                		value = 4
                		compare = greater_than_or_equals
					}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_neutrality_paramilitary_3
                value = 0
                compare = greater_than
            }
			NOT = {
				OR = {
				    has_government = fascism
					has_country_leader = { 
		                character = BAT_stirling_silver
			            ruling_only = yes
		            }
					has_country_leader = { 
		                character = BAT_gorge_batton
			            ruling_only = yes
		            }
				}
			}
		}
    
        ai_will_do = {
            base = 100
        }
        
        cost = 30
		fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_negotiate_with_CVG"
        }
    }
	
	BAT_negotiate_with_CAL = {
        icon = eng_trade_unions_support
        available = {
		    custom_trigger_tooltip = {
				tooltip = BAT_CAL_dealt_with_tp
				NOT = {
					check_variable = {
                		var = BAT_supremacist_paramilitary_3
                		value = 0
                		compare = less_than_or_equals
            		}
				}
			}
			OR = {
				custom_trigger_tooltip = {
					tooltip = BAT_fought_socialists_4_tp
					check_variable = {
                		var = BAT_fought_socialists
                		value = 4
                		compare = greater_than_or_equals
					}
				}
				custom_trigger_tooltip = {
					tooltip = BAT_fought_harmonists_4_tp
					check_variable = {
                		var = BAT_fought_harmonists
                		value = 4
                		compare = greater_than_or_equals
					}
				}
				custom_trigger_tooltip = {
					tooltip = BAT_fought_neutrality_4_tp
					check_variable = {
                		var = BAT_fought_neutrality
                		value = 4
                		compare = greater_than_or_equals
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = BAT_not_integrated_TMS_CRA_PM_tp
				OR = {
					NOT = {
						check_variable = {
                			var = BAT_harmonist_paramilitary_1
                			value = 0
                			compare = less_than
						}
					}
					NOT = {
						check_variable = {
                			var = BAT_harmonist_paramilitary_2
                			value = 0
                			compare = less_than
						}
					}
					NOT = {
						check_variable = {
                			var = BAT_harmonist_paramilitary_3
                			value = 0
                			compare = less_than
						}
					}
				}
			}
        }
		visible = {
		    check_variable = {
                var = BAT_supremacist_paramilitary_3
                value = 0
                compare = greater_than
            }
			NOT = {
			    has_country_leader = { 
		            character = BAT_gorge_batton
			        ruling_only = yes
		        }
			}
		}
    
        ai_will_do = {
            base = 100
        }
        
        cost = 30
		fire_only_once = yes
    
        complete_effect = {
            log = "[GetDateText]: [Root.GetName]: Decision remove BAT_negotiate_with_CAL"
			if = {
			    limit = {
				    has_country_leader = { 
		                character = BAT_stirling_silver
			            ruling_only = yes
		            }
				}
				country_event = {
			    	id = bat.171
				}
			}
        }
    }
	
	BAT_CNLA_demands = {
		icon = generic_political_rally
		allowed = {
		    always = no
		}
		available = {
		    if = {
			    limit = {
				    has_country_flag = BAT_stirling_victory
				}
				has_completed_focus = BAT_h37
				has_completed_focus = BAT_h11
				has_completed_focus = BAT_h20
            }			
		}
		is_good = no
		days_mission_timeout = 365
		fire_only_once = yes
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout BAT_CNLA_demands"
			custom_effect_tooltip = BAT_CNLA_max_out_tp
			set_variable = {
				var = BAT_socialist_paramilitary_3
				value = 3
			}
			clamp_variable = {
				var = BAT_socialist_paramilitary_3
				min = 0
				max = 3
			}
			subtract_from_variable = { 
				var = BAT_paramilitaries_dealt_with
				value = 1
			}
			clamp_variable = {
				var = BAT_paramilitaries_dealt_with
				min = 0
				max = 12
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_3
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_1
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_3
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_1
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_3
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_1
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_3
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_1
				}
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_CNLA_demands" 
			custom_effect_tooltip = BAT_CPLO_big_tp
			subtract_from_variable = {
				var = BAT_socialist_paramilitary_1
				value = 1.5
			}
			clamp_variable = {
				var = BAT_socialist_paramilitary_1
				min = 0
				max = 3
			}
			set_variable = {
				var = BAT_socialist_paramilitary_3
				value = -2
			}
			clamp_variable = {
				var = BAT_socialist_paramilitary_3
				min = -2
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_socialist_paramilitary_1
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			custom_effect_tooltip = available_political_advisor
		    show_ideas_tooltip = BAT_advisor_72
			add_offsite_building = {
				type = arms_factory
				level = 2
			}
			hidden_effect = {
			    set_country_flag = BAT_integrated_ivory
			}
		}
	}
	
	BAT_jackal_demands = {
		icon = generic_political_rally
		allowed = {
		    always = no
		}
		available = {
		    if = {
			    limit = {
				    has_country_flag = BAT_stirling_victory
				}
				has_completed_focus = BAT_h36
				has_completed_focus = BAT_h3
				has_completed_focus = BAT_h8
				has_completed_focus = BAT_h15
				has_completed_focus = BAT_h21
            }			
		}
		is_good = no
		days_mission_timeout = 365
		fire_only_once = yes
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout BAT_jackal_demands"
			custom_effect_tooltip = BAT_jackal_max_out_tp
			set_variable = {
				var = BAT_harmonist_paramilitary_1
				value = 3
			}
			set_variable = {
				var = BAT_harmonist_paramilitary_2
				value = 3
			}
			set_variable = {
				var = BAT_harmonist_paramilitary_3
				value = 3
			}
			clamp_variable = {
				var = BAT_harmonist_paramilitary_1
				min = 0
				max = 3
			}
			clamp_variable = {
				var = BAT_harmonist_paramilitary_2
				min = 0
				max = 3
			}
			clamp_variable = {
				var = BAT_harmonist_paramilitary_3
				min = 0
				max = 3
			}
			subtract_from_variable = { 
				var = BAT_paramilitaries_dealt_with
				value = 3
			}
			clamp_variable = {
				var = BAT_paramilitaries_dealt_with
				min = 0
				max = 12
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_3
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_1
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_3
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_1
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_3
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_1
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_3
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_1
				}
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_CNLA_demands" 
			set_variable = {
				var = BAT_harmonist_paramilitary_1
				value = -2
			}
			set_variable = {
				var = BAT_harmonist_paramilitary_2
				value = -2
			}
			set_variable = {
				var = BAT_harmonist_paramilitary_3
				value = -2
			}
			clamp_variable = {
				var = BAT_harmonist_paramilitary_1
				min = -2
				max = 3
			}
			clamp_variable = {
				var = BAT_harmonist_paramilitary_2
				min = -2
				max = 3
			}
			clamp_variable = {
				var = BAT_harmonist_paramilitary_3
				min = -2
				max = 3
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			custom_effect_tooltip = available_political_advisor
		    show_ideas_tooltip = BAT_advisor_73
			hidden_effect = {
			    set_country_flag = BAT_integrated_jackal
			}
		}
	}
	
	BAT_CAL_demands = {
		icon = generic_political_rally
		allowed = {
		    always = no
		}
		available = {
		    if = {
			    limit = {
				    has_country_flag = BAT_stirling_victory
				}
				has_completed_focus = BAT_h40
				has_completed_focus = BAT_h9
				has_completed_focus = BAT_h12
				has_completed_focus = BAT_h13
				has_completed_focus = BAT_h23
            }			
		}
		is_good = no
		days_mission_timeout = 365
		fire_only_once = yes
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout BAT_CAL_demands"
			custom_effect_tooltip = BAT_CAL_max_out_tp
			set_variable = {
				var = BAT_supremacist_paramilitary_3
				value = 3
			}
			clamp_variable = {
				var = BAT_supremacist_paramilitary_3
				min = 0
				max = 3
			}
			subtract_from_variable = { 
				var = BAT_paramilitaries_dealt_with
				value = 1
			}
			clamp_variable = {
				var = BAT_paramilitaries_dealt_with
				min = 0
				max = 12
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_3
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_1
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_3
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_1
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_3
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_1
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_3
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = less_than
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_1
				}
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision BAT_CAL_demands" 
			custom_effect_tooltip = BAT_aristocrats_neutralised_tp
			set_variable = {
				var = BAT_supremacist_paramilitary_1
				value = 0
			}
			clamp_variable = {
				var = BAT_supremacist_paramilitary_1
				min = 0
				max = 3
			}
			set_variable = {
				var = BAT_supremacist_paramilitary_2
				value = 0
			}
			clamp_variable = {
				var = BAT_supremacist_paramilitary_2
				min = 0
				max = 3
			}
			set_variable = {
				var = BAT_supremacist_paramilitary_3
				value = -2
			}
			clamp_variable = {
				var = BAT_supremacist_paramilitary_3
				min = -2
				max = 3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_supremacist_paramilitary_1
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_supremacist_paramilitary_2
                		value = 0
                		compare = equals
            		}
				}
				add_to_variable = { 
					var = BAT_paramilitaries_dealt_with
					value = 1
				}
				clamp_variable = {
					var = BAT_paramilitaries_dealt_with
					min = 0
					max = 12
				}
			}
			if = {
			    limit = {
				    has_idea = BAT_the_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_1
					add_idea = BAT_the_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_troubles_2
					add_idea = BAT_the_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_1
					add_idea = BAT_the_extra_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_extra_troubles_2
					add_idea = BAT_the_extra_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_extra_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_extra_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_1
					add_idea = BAT_the_super_troubles_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_2
					add_idea = BAT_the_super_troubles_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_3
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_1
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 6
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_1
					add_idea = BAT_the_super_troubles_alternate_2
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_2
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 9
                		compare = greater_than_or_equals
            		}
				}
				swap_ideas = {
				    remove_idea = BAT_the_super_troubles_alternate_2
					add_idea = BAT_the_super_troubles_alternate_3
				}
			}
			else_if = {
			    limit = {
				    has_idea = BAT_the_super_troubles_alternate_3
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = greater_than_or_equals
            		}
				}
				remove_ideas = BAT_the_super_troubles_alternate_3
			}
			if = {
			    limit = {
				    check_variable = {
                		var = BAT_paramilitaries_dealt_with
                		value = 12
                		compare = equals
            		}
					NOT = {
					    OR = {
						    check_variable = {
                				var = BAT_socialist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_socialist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_harmonist_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_neutrality_paramilitary_3
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_1
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_2
                				value = -1
                				compare = equals
            				}
							check_variable = {
                				var = BAT_supremacist_paramilitary_3
                				value = -1
                				compare = equals
            				}
						}
					}
				}
				country_event = {
			    	id = bat.172
				}
			}
			custom_effect_tooltip = available_political_advisor
		    show_ideas_tooltip = BAT_advisor_81
			hidden_effect = {
			    set_country_flag = BAT_integrated_red_rose
			}
		}
	}
}
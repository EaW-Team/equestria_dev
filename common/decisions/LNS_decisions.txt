LNS_raiding_category = {
	LNS_divide_loot = {
			icon = griffon_bandits
			visible = {
			    original_tag = LNS
				has_country_flag = LNS_bandit_takeover
			}
			available = {
				original_tag = LNS
				check_variable  = {
                   var = loot
                   value = 1
				   compare = greater_than
                   }
				}
			days_remove = 20
			complete_effect = {
			subtract_from_variable = {
                var = loot
                value = 1
                }
			}
			remove_effect = {
            add_stability = 0.03
            add_war_support = 0.02
            add_political_power = 25			
			}
			ai_will_do = {
				factor = 40
			}
		}
	
	LNS_fresh_blood = {
			icon = griffon_bandits
			visible = {
			    original_tag = LNS
				has_country_flag = LNS_bandit_takeover
			}
			available = {
				original_tag = LNS
				check_variable  = {
                   var = loot
                   value = 1
				   compare = greater_than
                   }
				}
			days_remove = 30
			complete_effect = {
			subtract_from_variable = {
                var = loot
                value = 2
                }
			}
			remove_effect = {
            add_manpower = 11000		
			}
			ai_will_do = {
				factor = 70
			}
		}
	
    LNS_toasters = {
			icon = griffon_bandits
			visible = {
			    original_tag = LNS
				has_country_flag = LNS_bandit_takeover
			}
			available = {
				original_tag = LNS
				check_variable  = {
                   var = loot
                   value = 4
				   compare = greater_than
                   }
				}
			days_remove = 70
			complete_effect = {
			subtract_from_variable = {
                var = loot
                value = 5
                }
			}
			remove_effect = {
            random_owned_controlled_state = {
			limit = {
				free_building_slots = {
					building = industrial_complex
					size > 0
					include_locked = yes
				}
				OR = {
					is_in_home_area = yes
					NOT = {
						owner = {
							any_owned_state = {
								free_building_slots = {
									building = industrial_complex
									size > 0
									include_locked = yes
								}
								is_in_home_area = yes
							}
						}
					}
				}
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			        }
		        }		
			}
			ai_will_do = {
				factor = 100
			}
		}
	
	    LNS_gun_factory = {
			icon = griffon_bandits
			visible = {
			    original_tag = LNS
				has_country_flag = LNS_bandit_takeover
			}
			available = {
				original_tag = LNS
				check_variable  = {
                   var = loot
                   value = 4
				   compare = greater_than
                   }
				}
			days_remove = 70
			complete_effect = {
			subtract_from_variable = {
                var = loot
                value = 5
                }
			}
			remove_effect = {
            random_owned_controlled_state = {
			limit = {
				free_building_slots = {
					building = arms_factory
					size > 0
					include_locked = yes
				}
				OR = {
					is_in_home_area = yes
					NOT = {
						owner = {
							any_owned_state = {
								free_building_slots = {
									building = arms_factory
									size > 0
									include_locked = yes
								}
								is_in_home_area = yes
							}
						}
					}
				}
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			        }
		        }		
			}
			ai_will_do = {
				factor = 100
			}
		}
	
	LNS_prepare_raid = {
		icon = griffon_bandits		
        visible = {
			original_tag = LNS
			has_country_flag = LNS_bandit_takeover
		}
		available = {
			FROM = {
				any_owned_state = {
					is_controlled_by = FROM
					any_neighbor_state = {
						is_fully_controlled_by = ROOT
						set_temp_variable = { var:attacker_state_temp = id }
						has_ROOT_at_least_1_div_in_current_state_scope = yes
					}
					set_temp_variable = { var:defender_state_temp = id }
				}
			}
			NOT = { has_non_aggression_pact_with = FROM }
			ROOT = {
			NOT = { has_country_flag = MNC_raid_succeeded }
			NOT = { has_country_flag = MNC_raid_failed }
			}
		}

		visible = {
			NOT = { has_country_flag = LNS_preparing_raid }
			FROM = { exists = yes }
			NOT = { has_war_with = FROM }
			FROM = {
				NOT = { is_subject_of = ROOT }
				NOT = { is_in_faction_with = ROOT }
				NOT = { has_idea = detached_country}
			}
			NOT = { is_subject_of = FROM }
            OR = {
			NOT = { has_government = democratic }
			NOT = { has_government = communism }
			}
			OR = {
				NOT = { has_border_war_with = FROM }
				FROM = {
					any_owned_state = {
						is_controlled_by = FROM
						any_neighbor_state = {
							is_fully_controlled_by = ROOT
						}
					}
				}
			}
		}

		target_trigger = {
			FROM = { 
				is_neighbor_of = ROOT
			}
		}

		highlight_states = {
			OR = {
				state = FROM.defender_state_vs_@ROOT
				AND = {
					is_owned_and_controlled_by = FROM
					any_neighbor_state = {
						has_ROOT_at_least_1_div_in_current_state_scope = yes
						is_fully_controlled_by = ROOT
					}
				}
			}
		}

		ai_will_do = {
			base = 5
			modifier = {
				
			}
		}

		cost = 25

		fire_only_once = no

		days_re_enable = 180
		days_remove = 30

		complete_effect = {
			hidden_effect = {
				random_state = {
					limit = {
						is_owned_and_controlled_by = FROM
						any_neighbor_state = {
							has_ROOT_at_least_1_div_in_current_state_scope = yes
							is_fully_controlled_by = ROOT
						}
					}
					save_event_target_as = defender_state
					set_variable = { FROM.defender_state_vs_@ROOT = id }
					set_temp_variable = { defender_state_temp = id }
				}
				random_state = {
					limit = {
						is_fully_controlled_by = ROOT
						has_ROOT_at_least_1_div_in_current_state_scope = yes
						any_neighbor_state = {
							state = var:FROM.defender_state_vs_@ROOT
						}
					}
					save_event_target_as = attacker_state
					set_variable = { FROM.attacker_state_vs_@ROOT = id }
					set_temp_variable = { attacker_state_temp = id }
				}
				set_country_flag = LNS_preparing_raid
			}
		}
		remove_effect = {
			activate_targeted_decision = { target = FROM decision = LNS_initiate_raid }
		}
	}

	LNS_initiate_raid = {

		icon = griffon_bandits

		allowed = { always = no } #Activated from effect

		available = {
			var:FROM.attacker_state_vs_@ROOT = {
				is_fully_controlled_by = ROOT
			}
			divisions_in_border_state = {
				state = var:FROM.attacker_state_vs_@ROOT
				border_state = var:FROM.defender_state_vs_@ROOT
				size > 0
			}
		}
		highlight_states = {
			state = var:FROM.attacker_state_vs_@ROOT
		}

		ai_will_do = {
			base = 30
			modifier = {
				
			}
		}

		cancel_trigger = {
			is_in_faction_with = FROM
		}

		fire_only_once = yes #Reactivation handled in effect

		selectable_mission = yes

		days_mission_timeout = 30

		timeout_effect = {
			hidden_effect = {
				FROM = {
					clear_variable = attacker_state_vs_@ROOT
					clear_variable = defender_state_vs_@ROOT
				}
				clr_country_flag = LNS_preparing_raid
				remove_targeted_decision = { target = FROM decision = LNS_initiate_raid }
				activate_targeted_decision = { target = FROM decision = LNS_prepare_raid }
			}
		}

		complete_effect = {
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = var:FROM.attacker_state_vs_@ROOT
					num_provinces = 4
					on_win = mountain.22
					on_lose = mountain.24
					on_cancel = mountain.23
				}
				
				defender = {
					state = var:FROM.defender_state_vs_@ROOT
					num_provinces = 4
					on_win = mountain.27
					on_lose = mountain.25
					on_cancel = mountain.26
				}
			}
			hidden_effect = { 
				clr_country_flag = LNS_preparing_raid 
				remove_targeted_decision = { target = FROM decision = LNS_initiate_raid }
				activate_targeted_decision = { target = FROM decision = LNS_prepare_raid }
			}
		}
	}
}